

10:17:30
<transcript>: You.

00:02:30
fragaverage: üëãüèºüëãüèºüëãüèº

00:09:55
tayloreddev: new b roll footage looking awesome. I've been away for a few weeks first time i've seen it

00:11:16
<transcript>: Good morning.

00:11:18
<transcript>: Good day.

00:11:18
<transcript>: good everything

00:11:21
<transcript>: Good everything. Hey thanks for follow rage.

00:11:28
<transcript>: Thanks for the follow in my Zo. 34 minutes ago. What was going on over here? 34 minutes ago? Probably nothing.

00:11:32
<transcript>: I was sitting here. I was prepared.

00:11:37
<transcript>: But probably nothing. Hey, Frag and Taylor, how are you guys doing.

00:11:37
<transcript>: hey thanks

00:11:41
<transcript>: Hey, thanks for the yeah, new Broll footage. It was like.

00:11:41
<transcript>: a

00:11:43
<transcript>: A whole Friday.

00:11:43
<transcript>: there's a lot of work

00:11:45
<transcript>: There's a lot of work, some of us Saturday.

00:11:50
<transcript>: Monday.

00:11:50
<transcript>: monday

00:11:51
<transcript>: Monday.

00:12:01
<transcript>: Can you all see all the tests? Stuff I did in my channel, but I chat history work is like chat filled up with me testing stuff.

00:12:07
<transcript>: Not that I was not me testing stuff on a Saturday.

00:12:12
<transcript>: Just trying not to work on the overlays on stream anymore, you know, kind of done with that.

00:12:15
fragaverage: we had to be here to see it afaik

00:12:15
<transcript>: Done with that on behalf of all of you.

00:12:18
tayloreddev: I don't see anything

00:12:22
<transcript>: Still, I'm a little out of source here. I'm still getting things set up.

00:12:28
<transcript>: Yep.

00:12:30
<transcript>: Alright.

00:12:36
<transcript>: Okay. Don't say anything. Cool. You had to be here. Cool. Nothing to see here.

00:12:36
<transcript>: there

00:12:45
<transcript>: There is a new hundred thousand point channel point reward for a oneonone call, which I'm looking forward to having with people who've been here for that long.

00:12:45
<transcript>: so you've got a hundred

00:12:52
<transcript>: So you've got a hundred thousand points. We've been hanging out a while, and we might as well formalize that with a phone call. You know, I'm saying.

00:12:57
<transcript>: I don't know there's hundreds thousand way too much I don't know how that takes. Thanks for the follow.

00:12:58
fragaverage: That I WILL be redeeming for a little startup advice :P

00:13:00
<transcript>: I must say VAGs or.

00:13:00
<transcript>: oh

00:13:05
<transcript>: Oh, said Polly with the raid. Welcome.

00:13:05
<transcript>: i can't do the

00:13:07
<transcript>: I can't do the confetti. So I'm not sure Miss Green. But.

00:13:11
<transcript>: Yes, you will. Frag.

00:13:11
<transcript>: so i tried to

00:13:15
<transcript>: So I tried to automate it yesterday. I tried to build some, like automation.

00:13:20
<transcript>: And I found out after billing it the whispers.

00:13:20
<transcript>: from

00:13:29
cedpoilly: howdy üëã

00:13:34
<transcript>: From bots are just a nonstarter like it's flaky. Sometimes they'll just like not let you do it. Sometimes it'll work. Sometimes it won't, but the whole thing kind of depending on. Thanks for the follow brink OJ.

00:13:34
<transcript>: good morning

00:13:36
<transcript>: Good morning, said Pauly.

00:13:39
<transcript>: Yeah, so.

00:13:39
<transcript>: kind

00:13:45
log1400: what is Animadam reward?

00:13:47
<transcript>: Kind of relies on being able to whisper some sensitive information to the person who redeems it. I guess I'm now just gonna copy and paste and paste it.

00:13:49
<transcript>: Into.

00:13:49
<transcript>: a whisper

00:13:52
<transcript>: A whisper manually. Like a jump.

00:13:52
<transcript>: in

00:13:57
<transcript>: In a Madam is just. It's a filter, it's a snap filter that I hate.

00:13:57
<transcript>: makes me look

00:13:59
<transcript>: Makes me look like cartoon.

00:14:01
<transcript>: I just don't like it.

00:14:01
<transcript>: so i made it really

00:14:12
<transcript>: So I made it really expensive. It's not special. People now think they want to, like, save up for it. Don't. Don't say that for it. It's dumb. It's just me looking like a Cardi.

00:14:16
andom: adamel4Animadam adamel4Animadam

00:14:22
<transcript>: So I. Yeah, that's it. And I'm showing you good morning. And good afternoon, good, whatever.

00:14:29
<transcript>: Maybe I'll just start saying good morning, and everyone can translate it in their mind.

00:14:29
<transcript>: into

00:14:37
<transcript>: Into whatever I should just say good afternoon. Probably. That's more. I think the viewership you all are mostly in Europe, right.

00:14:37
<transcript>: it's mostly

00:14:38
cedpoilly: Good morning Adam. I technically raided your channel. Not sure it was an actual viewer or a bot on my channel

00:14:44
uberrick: still morning here in the UK :D

00:14:46
<transcript>: It's mostly if I say good afternoon, it's in the middle. The good day thing. It just didn't stick. I can't just say good day. Sounds too. I don't know. Too formal.

00:14:46
<transcript>: too like

00:14:48
log1400: In my mind: buenos dias

00:14:48
<transcript>: Too like I'm a 50s.

00:14:49
introvertme: morning

00:14:50
<transcript>: Man in a movie.

00:14:50
<transcript>: good day to you

00:14:52
<transcript>: Good day to you.

00:14:56
<transcript>: Rick is here.

00:14:56
<transcript>: and log

00:14:58
<transcript>: And log. 1400.

00:15:02
<transcript>: Buenos DS. Yeah. There you go. Translate it into your locale.

00:15:02
<transcript>: good morning

00:15:04
<transcript>: Good Morning. Intro.

00:15:10
<transcript>: So today we might start with.

00:15:14
cowfacedude99: one hour till I leave work!!

00:15:14
<transcript>: I really need a boss.

00:15:14
<transcript>: i don't want to

00:15:30
<transcript>: I don't want to job, but I've worked like selfemployed for so long that I feel like I'm actually. Oh, cowface, you haven't left for work yet? No. Till you leave work. Wow. You're almost done for your day when I'm streaming that's crazy.

00:15:35
<transcript>: Yeah, I've done this.

00:15:37
uberrick: we building the DynamoDB abstraction of dreams

00:15:42
<transcript>: Selfemployed thing for so long at this point that I think I actually.

00:15:42
<transcript>: actually could

00:15:42
fragaverage: Lunch time for me :D I also spyed an Adam in Theo's stream last night ;)

00:15:45
<transcript>: Actually could crave somebody telling me what to do.

00:15:45
<transcript>: maybe you guys

00:15:49
<transcript>: Maybe you guys could be my boss. You could tell me what to do.

00:15:55
<transcript>: We are gonna talk about it everyone misunderstood my tweet.

00:15:59
<transcript>: So everyone misunderstood what I was saying should exist.

00:15:59
<transcript>: like people

00:16:05
uberrick: I didn't though haha but yeah prime did misunderstand

00:16:07
stream_kyle: Sounds like one of those things you think you might want until you get it then you realize why nobody likes it.

00:16:07
<transcript>: Like people are linking me Jeremy Daley's toolbox there are other there's like electrodb is great. There are plenty of.

00:16:07
<transcript>: open

00:16:17
<transcript>: Open source library abstraction on top of Dynamo. That's not what I want. I want to manage service that does way more than just used Dynamo. And like.

00:16:17
<transcript>: actually we're gonna

00:16:24
<transcript>: Actually, we're gonna diagram it. That's what we're gonna start doing this morning. We're gonna diagram what is in my head because I need to express it with a visual. People aren't.

00:16:24
<transcript>: understanding

00:16:29
fragaverage: EXCALIDRAW ü•≥ü•≥ü•≥

00:16:32
<transcript>: Understanding prime thought I was saying, abstract away. Sql. No, not even talking about SQL existing. I'm talking about using.

00:16:32
<transcript>: yes

00:16:35
<transcript>: Yes. Excaladra. That's what we're doing.

00:16:37
<transcript>: Yeah prime did.

00:16:39
introvertme: I'll start, what's your gear for streaming! I need everything

00:16:39
cowfacedude99: I didn't know that you were a big guy on twitter. I came in for fun, and stayed for neovim LUL

00:16:40
<transcript>: Okay.

00:16:40
<transcript>: it's lunch

00:16:51
<transcript>: It's lunchtime for Frag. Also, Spy and Adam and Theo Stream last night. Hey, yeah, I was there. I my parents were here watching my kids. And my wife was playing volleyball. She played in like, League volleyball.

00:16:51
<transcript>: and

00:16:57
<transcript>: And I had like two 3 hours in the evening to myself. I could have probably streamed, but I hopped on Twitter.

00:16:57
<transcript>: and

00:17:12
<transcript>: And there was Theo I never got I don't get to catch any of the other streamers stuff live, like I'm either streaming or with my family. It's these rare moments. So I had a rare moment, and I got to join a stream. That was fun.

00:17:16
<transcript>: What's your gear for? Streaming. I need everything.

00:17:16
<transcript>: it's

00:17:22
<transcript>: It's on my about page on Twitch. I will say I'll tell you that mine is probably.

00:17:22
<transcript>: not

00:17:23
uberrick: How I understood it is that you could have some sort of Prisma ORM api but DynamoDB under the hood

00:17:24
<transcript>: Not a starter pack.

00:17:24
<transcript>: it's a bit

00:17:27
<transcript>: It's a bit over engineered overdone.

00:17:31
<transcript>: So take that for what it is.

00:17:35
<transcript>: Sounds like Kyle's here. Sounds like one of those things you think you might want.

00:17:35
<transcript>: until you

00:17:38
<transcript>: Until you get it. And then you realize why nobody likes it.

00:17:38
<transcript>: yeah

00:17:54
<transcript>: Yeah, the boss thing. I just I think it'd be nice to just have less options. I just have so many options, things I can do. And I enjoy them all. Like, I think I tweeted this yesterday. And I think people thought I was saying, like, nothing is enjoyable. Everything is enjoyable.

00:17:54
<transcript>: i have so many

00:17:56
<transcript>: I have so many options.

00:17:56
<transcript>: that

00:18:10
<transcript>: That seem like they have great potential. They're saying, I enjoy doing. I think I can be good at them. Or I'm already good at them. There's all these things. Maybe five, six things that I could spend my time doing.

00:18:10
<transcript>: and i don't know

00:18:17
<transcript>: And I don't know how to choose. I think my wife and I figured it out. That's why I think I picked something. And I'll talk about that more I'm sure on stream.

00:18:23
cedpoilly: 6 things? let's roll a dice

00:18:27
<transcript>: But, yeah, it's really hard when you just have this many options. You just kind of want somebody to tell you what to do, you know? And in my case, I guess my wife, she's the boss. She totally was.

00:18:33
<transcript>: I didn't know that you were a big guy on Twitter. I came in for fun and stayed for me.

00:18:33
<transcript>: i

00:18:37
<transcript>: I'm not a big guy on Twitter. I'm like a medium guy on Twitter.

00:18:49
<transcript>: I'm like I'm known in the AWS community that's kind of where I've got a following, and it's funny that I came over to Twitch and I don't really do anything with AWS, but.

00:18:53
<transcript>: Jfk. Thanks for the follow. I appreciate that.

00:19:02
<transcript>: How I understood it is that you could have you could have some sort of Prisma or M API. But Dynamo under the hood. Yeah, Rick. So we're gonna map it out, I think.

00:19:02
<transcript>: what i'm

00:19:04
<transcript>: What I'm imagining is.

00:19:04
<transcript>: just like think about

00:19:09
<transcript>: Just like, Think about planet scale. Planet scale is becoming this sort of.

00:19:09
<transcript>: i think

00:19:13
<transcript>: I think it's still very early, but it's becoming this kind of like.

00:19:13
<transcript>: great manage

00:19:17
<transcript>: Great managed database offering where.

00:19:17
<transcript>: in the

00:19:18
fragaverage: DaaS?

00:19:35
<transcript>: In the serverless mindset where you're trying to find like, you want to manage as little as possible, right? You want fewer things to think about. And database abstractions have Lagged compute, like Compute. We had Lambda functions, and before that we had Heroku. We had all these things, sort of like making.

00:19:35
<transcript>: compute

00:19:37
<transcript>: Compute, and hosting easy.

00:19:37
<transcript>: now i think

00:19:40
stroopwafel26: Hello, friends

00:19:42
introvertme: planetscale sucks. so much bugs, I hated it.

00:19:45
<transcript>: Now I think Versell is sort of the de facto like Host your thing, run some basic Compute, like basic APIs stuff.

00:19:50
<transcript>: But database stuff is lagged and now I feel like Planet scale.

00:19:50
<transcript>: is

00:19:55
<transcript>: Is. Oh, is there a ton of bugs? Interesting. There's no bikes. I haven't used it enough.

00:19:55
cowfacedude99: I think by tomorrow, I may have a working neovim with plugins!!!!!! After one month w/o properly configured nvim, it is pretty refreshing!!!

00:20:04
<transcript>: But place feels kind of becoming emerging as this like never think about SQL, config, my sequenceql configuration or other things.

00:20:08
<transcript>: And like just have a managed database database. There's other offerings. But.

00:20:08
<transcript>: like

00:20:12
<transcript>: Like the AWS offerings, mostly, are terrible.

00:20:12
<transcript>: and i say

00:20:15
<transcript>: And I say that as someone who loves AWS.

00:20:15
<transcript>: but

00:20:18
fragaverage: Any docker experts here, whisper me! My self hosted supabase grows at 1GB per 6 hours due to overlay2??? üò≠üò≠üò≠

00:20:19
<transcript>: But like serverless database options are few.

00:20:19
<transcript>: so

00:20:25
<transcript>: So all that said, My problem is everyone's using Prisma and TRPC.

00:20:25
<transcript>: i say everyone

00:20:29
<transcript>: I say, Everyone, everyone on Twitter, which is nobody.

00:20:36
<transcript>: But it's sort of like this cool stack that's really easy and approachable and fewer things to think about.

00:20:36
<transcript>: but then everyone

00:20:43
carlosgn: did you check this? https://github.com/depot/kysely-planetscale

00:20:43
log1400: Are you talking about meeeee?

00:20:45
<transcript>: But then everyone's using so we're abstracting away SQL with these or Ms like Prisma. But then we're using SQLbased databases, and they're slow relatively.

00:20:45
<transcript>: they have

00:20:50
<transcript>: They have bad performance characteristics over the long haul. They're very complex.

00:20:50
<transcript>: but

00:21:10
<transcript>: But what you get is SQL, which is flexible and everybody knows it. And people across the business can use it. And all this stuff that's like the draw of SQL, and then we're not even using it. We're just like a sticking prism from it. So why not seek prism and something in front of something that's super fast, right? Something that if you could do the hard work of translating a prisoner schema.

00:21:16
<transcript>: Into the operations and the organization of data and something like Dynamo.

00:21:20
<transcript>: I think you get a best of all worlds kind of thing. You know what I'm saying.

00:21:20
<transcript>: so anyway

00:21:22
<transcript>: So anyway, that's my thought.

00:21:25
<transcript>: Let me catch up here.

00:21:25
<transcript>: let's roll

00:21:29
<transcript>: Let's roll a dice. That's not a better idea, said boiling. That.

00:21:37
<transcript>: Yeah. Database is a service. That's right. Frag. Stroop is here. Hello, Stroop.

00:21:38
stroopwafel26: @FragAverage look at logsize something something, probably the issue here

00:21:46
<transcript>: Planet feels suck so much bugs. I would love to hear more about your experience with planning scale intro. I've just been playing with it a bit. My clients always want SQLbased databases.

00:21:46
<transcript>: and

00:21:56
<transcript>: And I've never had like a good like I didn't feel good about the AWS serverless offerings. Like Aurora Service One and two. Don't do it for me.

00:21:56
<transcript>: thanks for the

00:21:59
<transcript>: Thanks for the follows Techno in Blue man.

00:22:03
<transcript>: So, yeah, planet skills kind of seem like it could be.

00:22:03
<transcript>: this

00:22:07
<transcript>: This option. That's serverless in SQL.

00:22:08
oleksii_lisovyi: Hey o/

00:22:20
<transcript>: Cafes. I think by tomorrow I may have a working the oven with plugins. Hey, after one month without properly configuring of him, I actually we're gonna do that on stream too. I don't want to do a lot more like configuring my environment.

00:22:20
<transcript>: or

00:22:22
<transcript>: Or.

00:22:22
<transcript>: i definitely

00:22:26
<transcript>: I definitely don't want to do any more overlay stuff on stream but.

00:22:26
<transcript>: there's

00:22:34
<transcript>: There's some bad stuff going on in many years. I think I added one too many plugins on like latest commit.

00:22:34
<transcript>: and there's

00:22:37
fragaverage: @FragAverage Already have log file stuff set in daemon.json to be pretty slim

00:22:43
<transcript>: And there's like some errors, like when I open telephone, I get this big air. It's just it's a mess I need to fix. I need to remove some things or go back a couple versions or something.

00:22:47
<transcript>: Any Docker experts here. Mandy's kind of into that.

00:22:47
<transcript>: drag

00:22:48
<transcript>: Drag.

00:22:49
introvertme: I used it with Django. I created some PRS for some issues. someone else has to rewrite the Django package

00:22:50
<transcript>: Anymore.

00:22:57
fragaverage: MANDY, where are you?!?!?!

00:22:58
<transcript>: My selfhosted superbase grows at one gigabit gigabyte per 6 hours due to overlay two.

00:22:58
<transcript>: one is over

00:23:00
<transcript>: One is overlay two.

00:23:03
<transcript>: The return of the overlay.

00:23:10
<transcript>: Or was that due to overlap and then two is supposed to be a question Mark? No, that's not the question Mark. Character.

00:23:12
stroopwafel26: @FragAverage log rotation can be set in the settings

00:23:13
introvertme: *had

00:23:17
<transcript>: Highly planned scale. I did see that Carlos. I saw that which is super cool.

00:23:19
<transcript>: Like TypeScript.

00:23:19
<transcript>: all

00:23:22
<transcript>: All the things I love it.

00:23:27
<transcript>: Are you talking about me.

00:23:34
<transcript>: Log are you talking about me? Talking about you? I mean, are you talking about me talking about you talking about me.

00:23:42
<transcript>: Yeah, I was talking about a log. I'm sorry I was asking you. No, no, I was asking. Intro.

00:23:46
<transcript>: About his experience with Planet scale.

00:23:51
<transcript>: Look at log size, something. Something.

00:23:54
<transcript>: Probably the issue here.

00:23:54
fragaverage: From my poor researching, overlay2 is some sort of file diff system sort of akin to git diffs?

00:23:57
<transcript>: Alexis. Here. Hey, Lexi.

00:24:07
<transcript>: Use it with Django created some PRS for some issues someone else has to rewrite the Django package.

00:24:10
<transcript>: Mandate? Where are you.

00:24:17
<transcript>: Stroop log rotation can be set in and say, okay.

00:24:17
<transcript>: add

00:24:27
<transcript>: Add from my poor researching overlay to is some sort of file diff system. Sort of akin to get this. Okay, I checked out. Sorry. You guys are talking about Docker containers.

00:24:27
<transcript>: and

00:24:28
<transcript>: And.

00:24:28
<transcript>: superbase

00:24:34
<transcript>: Superbase. And I just don't know what you're talking about. Good luck, though. In God's, speed.

00:24:36
<transcript>: Okay.

00:24:36
<transcript>: so

00:24:37
<transcript>: So.

00:24:43
jczhang02: can we watch live coding?

00:24:45
<transcript>: Let's start an excaladra. Oh, I have a couple other questions here before we.

00:24:52
stroopwafel26: @adamelmore did you spend the money on that font yet?

00:24:53
<transcript>: I feel like this is kind of the unofficial beginning where I can talk about wherever I want, and you guys can give me answers and generally direct me.

00:24:53
<transcript>: can we

00:24:56
<transcript>: Can we watch live coding.

00:25:02
<transcript>: Yeah, JC. Welcome to Chat. We will do some live coding.

00:25:08
<transcript>: Sorry. It's not just my face. I'm not a just chatting stream, but I do spend the first. I don't know.

00:25:08
<transcript>: fifteen

00:25:10
<transcript>: 15 minutes, usually.

00:25:10
<transcript>: hanging out here

00:25:11
<transcript>: Hanging out here.

00:25:12
log1400: You video goes to green from time to time

00:25:18
<transcript>: Remind me street which font? I didn't spend money on any other fonts. I forgot.

00:25:23
<transcript>: Oh goes to green from time to time that sounds bad.

00:25:25
stroopwafel26: oh in discord

00:25:26
<transcript>: Anyone else have my video going to green.

00:25:26
<transcript>: from time

00:25:28
<transcript>: From time to time.

00:25:29
fragaverage: Not for me it doesn't

00:25:31
carlosgn: nope

00:25:32
<transcript>: Oh, in discord oh, you've got a font.

00:25:33
andom: nope

00:25:34
<transcript>: In discord.

00:25:34
<transcript>: and i need to turn

00:25:42
<transcript>: And I need to turn down my bitrate. I'm kind of pushing the limits. Don't tell Twitch, but I read on the internet that you can you can actually go with.

00:25:44
<transcript>: Six K bitrate.

00:25:44
<transcript>: it's just

00:25:48
<transcript>: It's just unofficially supported, so I'm pushing eight.

00:25:50
<transcript>: Just don't tell Twitch.

00:25:50
<transcript>: i think they might be

00:25:52
<transcript>: I think they might be upset.

00:25:55
<transcript>: That might be what's going green, though.

00:26:03
<transcript>: So a couple things I want to bring up one. I'm gonna start a podcast. Another podcast.

00:26:15
<transcript>: I I kind of fell out of love with having a podcast that's super specific, so I have a tobiss FM. It's just it's about AWS only. And there's other things I like, like streaming on Twitch.

00:26:15
<transcript>: or just

00:26:17
<transcript>: Or just generally, WebDev.

00:26:25
<transcript>: So I'm gonna start another podcast that's just loosely defined. It's just my podcast, basically.

00:26:25
<transcript>: it's how

00:26:27
<transcript>: It's? How about tomorrow? Is the name of it.

00:26:35
<transcript>: And you can think of it like the Adam L. More Podcast. It's gonna be like ten to 15 minutes.

00:26:35
<transcript>: maybe every day

00:26:37
<transcript>: Maybe every day.

00:26:39
<transcript>: And it's just gonna be.

00:26:43
<transcript>: Generally about life and tech like things.

00:26:43
<transcript>: as

00:26:52
<transcript>: As a remote tech worker, you deal with things that are just on my mind. It might go into nerdy tech stuff on occasion. I don't know. Thanks for apology, JC.

00:26:56
<transcript>: Yeah, I'm gonna start this podcast, but the question I have for you all.

00:26:56
<transcript>: so i've

00:26:59
<transcript>: So I've had David, my designer friend, David.

00:26:59
<transcript>: do a bunch of

00:27:03
<transcript>: Do a bunch of branding work for it. I've already got like the cover art and all that stuff.

00:27:03
<transcript>: my question is

00:27:06
<transcript>: My question is, Can I record it.

00:27:06
<transcript>: on stream

00:27:15
<transcript>: On stream. I just. I'm doing most everything I do in my computer on stream. But if I need to call out more time for just, like, stuff I need to do, I can do that.

00:27:15
<transcript>: the other option

00:27:23
fragaverage: Need it be a podcast? and not a youtube series?

00:27:27
<transcript>: The other option is I could record it here on stream every day and just say, like, hey, I'm gonna record my podcast, and I'll like, pull out my my mic from a podcast, and I'll just start talking.

00:27:27
<transcript>: no

00:27:30
<transcript>: No. I thought about Frag. I thought about putting on YouTube as well.

00:27:35
<transcript>: But I would probably publish it on the podcast platforms.

00:27:35
<transcript>: in addition

00:27:37
<transcript>: In Addition to YouTube.

00:27:37
<transcript>: yeah no i

00:27:37
stroopwafel26: I think a twitch stream and a podcast are two very different things

00:27:41
<transcript>: Yeah. No, I just thought about, like, I'm not a rant guy. I'm not someone who has, like.

00:27:41
<transcript>: thought lead

00:27:51
<transcript>: Thought. Leadership in my brain. It's more like these would not be. It would not be like Theo rants. Right? I just. I'm not that authority.

00:27:55
<transcript>: It's like I don't have those thoughts. It would be more like.

00:27:55
<transcript>: so in that sense

00:28:00
<transcript>: So in that sense, I think maybe less attractive on YouTube. Like I don't know how many people care to hear my random.

00:28:01
fragaverage: yeah we dont need another Theo üòÇüòÇ

00:28:05
<transcript>: Just Mumbleings each day.

00:28:05
<transcript>: don't need another

00:28:09
<transcript>: Don't need another Theo. We've got enough deals. There's only one deal.

00:28:12
<transcript>: Like it would not be.

00:28:12
<transcript>: that

00:28:18
<transcript>: That it would not be what Co does where he has like, hot takes and stuff. It would be like.

00:28:18
<transcript>: just

00:28:19
<transcript>: Just.

00:28:26
<transcript>: Me. It's just a creative, creative outlet for me. Just me talking about things that I'm on my mind think some people could really relate some of it.

00:28:26
<transcript>: if

00:28:39
<transcript>: If you enjoy this stream, you probably enjoy it. Just if you enjoy hearing what I had to say, you maybe listen to it where you're working. Just like I'm on stream. I don't know. You wouldn't listen to it. You guys would hear it on stream if I recorded on stream. So there's that.

00:28:43
<transcript>: I don't know. Just think about it. Let me know.

00:28:50
<transcript>: Yeah. Shoot. I agree. It would be more like.

00:28:52
<transcript>: It'd be more like you all.

00:28:52
<transcript>: watching the behind

00:29:12
<transcript>: Watching the behind the scenes of me recording my podcast, but I'm not gonna it's not gonna be like, drawn out. It was literally 1015 minutes on the stream. Maybe it'd be like this opener where I just pull out my mic and I'm not gonna interact during that ten to 15 minutes, because that'd be weird. On a podcast like me interacting with chat. So that'd be the only difference for, like, 1015 minutes. I'd just be talking.

00:29:15
<transcript>: But I'm not gonna, like.

00:29:15
<transcript>: edit it

00:29:22
<transcript>: Edit it. It's just the thing about content creation that I'm trying to do is remove all the barriers.

00:29:22
<transcript>: every single

00:29:33
<transcript>: Every single barrier. And one of the barriers for me is I pay an editor, like $150. Every episode I record for my podcast.

00:29:37
<transcript>: And it's like I can only do so many of those. I don't want to invest.

00:29:37
<transcript>: that much

00:29:48
<transcript>: That much money into my AWS FM podcast. This would be I'm gonna record raw stream of consciousness for 1015 minutes, not edited at all and put it out on the podcast feed. That's just basically what it would be.

00:29:56
<transcript>: Anyway, I might record it on. Maybe we could we could work, we could try it. We could just give it a go one day.

00:29:59
<transcript>: I might start next week. I'm taking a vacation.

00:30:02
<transcript>: That's last thing I'll say before.

00:30:02
<transcript>: i come up

00:30:07
<transcript>: I come up over here and we look at my screens the rest of the day.

00:30:20
<transcript>: I'm gonna be off. You won't notice this week. I am leaving on Friday, but I'll stream before I leave and then I'll be out in the Ninjas Day next week. So I won't stream until.

00:30:20
<transcript>: wednesday i'll

00:30:26
<transcript>: Wednesday I'll probably be like a Wednesday stream next week which is weird Indiego. Thanks for the follow.

00:30:27
<transcript>: All Right, Let's.

00:30:30
<transcript>: Come over here.

00:30:33
<transcript>: I don't even have that I'm gonna pull up.

00:30:35
<transcript>: Excaladra.

00:30:39
stroopwafel26: A much deserved vacation!

00:30:42
<transcript>: I reinstalled or I restarted you by.

00:30:50
<transcript>: I just. I'd gotten mad at you by but I acted too hastily.

00:30:50
<transcript>: i was just

00:30:51
<transcript>: I was just.

00:30:51
<transcript>: in a

00:30:53
<transcript>: In a in a Fury.

00:31:00
<transcript>: I stopped it, but I didn't need to stop it. I think I still like it.

00:31:03
<transcript>: Create things. Okay.

00:31:11
<transcript>: Like I missed it once. It's like how I want a boss right now. I miss someone just taking care of things for me. And like.

00:31:11
<transcript>: you

00:31:16
<transcript>: You buy was doing that. It was just putting windows, places and having opinions and it felt good.

00:31:23
<transcript>: I got frustrated with one little window I couldn't put where I wanted it. And I just killed the whole relationship. That was dumb.

00:31:26
<transcript>: Called for.

00:31:31
<transcript>: So we're back we're back to you by I'm gonna make it work for me.

00:31:31
<transcript>: let's see

00:31:39
<transcript>: Let's see why don't my keyboard commands work anymore on excala draw. That is the question that I would love to have answered.

00:31:41
<transcript>: Like.

00:31:41
<transcript>: straight doesn't

00:31:44
<transcript>: Straight. Doesn't work, is it? Vivian.

00:31:50
<transcript>: Manage this fix? Can I just.

00:31:50
<transcript>: pause it

00:31:51
<transcript>: Pause it.

00:32:00
<transcript>: Options.

00:32:05
<transcript>: Add rule. Oh, you can exclude URLs.

00:32:05
cowfacedude99: You need to pin it before you pause it

00:32:06
timmyha_: i love yabai but on my tiny macbook screen I have to put a lot of apps on the exception list

00:32:07
<transcript>: Interesting.

00:32:09
<transcript>: Exclude.

00:32:09
<transcript>: you are

00:32:11
<transcript>: You are.

00:32:14
<transcript>: This one.

00:32:16
<transcript>: Let's do this one.

00:32:25
<transcript>: Second work.

00:32:27
<transcript>: Save changes.

00:32:35
<transcript>: Hi. I can do it again. Okay, so what are we mapping? We're gonna map out.

00:32:35
<transcript>: so my brain

00:32:38
<transcript>: So my brain can just put this thing to bed.

00:32:38
<transcript>: what

00:32:41
<transcript>: What would a new.

00:32:41
<transcript>: database is

00:32:44
<transcript>: Database is a service look like.

00:32:44
<transcript>: or

00:32:53
<transcript>: Or what would one like an ideal? What would the best database service that ever existed look like? And is it possible.

00:32:57
<transcript>: Or is it even.

00:33:03
<transcript>: Is it even better enough to justify anyone making it like.

00:33:03
<transcript>: does it really

00:33:08
<transcript>: Does it really offer enough on top of the existing options, like planning scale.

00:33:15
<transcript>: For it to be a good idea at the end of this if we decided is a good idea, maybe one of you wants to build it.

00:33:15
<transcript>: i'll be

00:33:23
<transcript>: I'll be a technical advisor. Maybe I'll even help you fundraise. I think it'd be something you'd have to raise and higher, which is why I'm pretty much out immediately.

00:33:30
<transcript>: Need to pin it before you pause it.

00:33:33
<transcript>: Pin it before you positive calface.

00:33:35
<transcript>: Pin it.

00:33:38
<transcript>: For you. Pause it.

00:33:38
<transcript>: i don't

00:33:40
cedpoilly: Best for which use case? üëÄ

00:33:41
<transcript>: I don't know if you're talking about this.

00:33:43
<transcript>: You're talking about this.

00:33:47
cowfacedude99: vimium.

00:33:57
<transcript>: I love you by but on my tiny MacBook screen, I have to put a lot of apps on the exception list. Yeah, no, I've got to work on my exception list. Oh, pin it before you pause it. Vime, I got you.

00:33:57
<transcript>: yeah

00:34:04
<transcript>: Yeah, I didn't end up pausing. I just had an exception. So we're good. And you know that you've been watching. Okay.

00:34:04
<transcript>: so what do we

00:34:05
<transcript>: So what do we? What.

00:34:05
<transcript>: someone asked for

00:34:10
<transcript>: Someone asked for which use case yeah sorry said Powy. So this database service would be.

00:34:17
<transcript>: Comparable to planet scale. So like you're building a web app and you need.

00:34:21
<transcript>: A Database a transactional database for all your app data.

00:34:21
<transcript>: that's what i'm talking about

00:34:24
<transcript>: That's what I'm talking about. But that leads into.

00:34:30
<transcript>: Some thoughts I've had. So let's talk about this. So Dynamo.

00:34:33
<transcript>: Dynamo.

00:34:36
<transcript>: Dynamo, Dynamo has.

00:34:42
<transcript>: Some really strong strengths and some really glaring weaknesses.

00:34:59
<transcript>: But it's probably not the weaknesses most people think, like the Twitter community, the WebDev community really misunderstands Dynamo. And it makes me sad. I feel like I'm constantly trying to lobby for Dynamo, and then I just kind of give up because I realize.

00:34:59
<transcript>: it's

00:35:09
<transcript>: It's sort of a non starter for people because of this developer experience, but it's the problem. The thing that really greats on me is people don't like Dynamo for the wrong reason.

00:35:09
<transcript>: people

00:35:14
<transcript>: People have all these misconceptions about no sequel that.

00:35:16
<transcript>: Mongo.

00:35:16
<transcript>: screw

00:35:19
<transcript>: Screwed the entire industry.

00:35:25
<transcript>: Okay. Eight years ago. Yes. Mongo was a bad idea. Mongodb.

00:35:27
<transcript>: Back in 2014.

00:35:27
<transcript>: you probably shouldn't use

00:35:31
<transcript>: You probably shouldn't use it and people got burned. It was bad.

00:35:34
<transcript>: But it's been eight years.

00:35:34
<transcript>: it's been

00:35:36
<transcript>: It's been eight years.

00:35:36
<transcript>: and the

00:35:41
<transcript>: And the word no sequel should not be like a dirty word I shouldn't feel like.

00:35:45
<transcript>: I don't know. I feel like some.

00:35:45
<transcript>: doof

00:35:51
<transcript>: Doofus on Twitter when I say the word no sequel. I won't even say it anymore because people just immediately.

00:35:51
<transcript>: no sequel

00:35:52
sparringwithbear: hello everyone

00:35:52
<transcript>: No sequel. That's terrible.

00:35:52
<transcript>: mongodb

00:35:56
<transcript>: Mongodb. Remember back in 2014.

00:35:56
<transcript>: how could you

00:35:59
<transcript>: How could you like no sequel? It drives me crazy.

00:35:59
<transcript>: dynamo

00:36:00
<transcript>: Dynamo.

00:36:00
<transcript>: is

00:36:07
stroopwafel26: MongoDB is great because it came with anonymous access out the box for YEARS and you could scan the internet for open MongoDB boxes which was fun. I think they changed it :(

00:36:08
<transcript>: Is a fantastic database and it doesn't get the time day because Mongo screwed up eight years ago it drives me nut.

00:36:18
<transcript>: But people think when you mention DynamoDB, people who don't really have any awareness or they haven't dug into it at all. They immediately think, oh, no, I got related.

00:36:18
<transcript>: i can't use

00:36:21
<transcript>: I can't use DynamoDB. I'm done a lot of voices this morning.

00:36:21
<transcript>: what is this

00:36:24
<transcript>: What is this? I don't do voices.

00:36:24
sparringwithbear: we love nosql out here <3

00:36:28
<transcript>: So people.

00:36:39
<transcript>: Their first reaction to Dynamo is no. I need a relational database. I can't use Dynamo. It's not relational. Yes, it is. First of all.

00:36:39
<transcript>: all data is

00:36:40
<transcript>: All data is relational.

00:36:40
<transcript>: like all

00:36:42
<transcript>: Like all of it.

00:36:47
<transcript>: So a database that stores data.

00:36:49
<transcript>: Is inherently relational.

00:36:49
<transcript>: there's nothing

00:36:54
log1400: It's sad that i only have 2 years in the industry. can someone say me what happens with mondodb in 2014?

00:36:59
<transcript>: There's nothing about Dynamo that's not relational. You can't do Joins, which is a feature, not a bug. Okay, you can't do joins. That doesn't mean it's not relational.

00:37:03
<transcript>: There are plenty of ways to query data.

00:37:05
jaythedeveloper: Say no to JOINS

00:37:07
<transcript>: And structure your data in Dynamo relationally.

00:37:13
<transcript>: I wish that Misconception would just die. A thousand deaths. That'd be fantastic.

00:37:13
<transcript>: thank you

00:37:18
<transcript>: Thank you for the follows in Z. Laura in core functions initiated.

00:37:18
<transcript>: and

00:37:19
fragaverage: this is an interesting topic LUL

00:37:22
<transcript>: And Avila? Avala, if I saw your follow.

00:37:23
cedpoilly: I'm learning back-end dev, coming from Web Front-End. Using Node.js & MongoDB. It is good enough for me right now. Much less to learn & be able to get started

00:37:25
<transcript>: This is an interesting topic. Okay, well, then I'll keep going.

00:37:34
<transcript>: I miss some things. Manga DB is great because it came with anonymous access out of the box for years and you can scan the internet for open loop.

00:37:38
<transcript>: I would hope they changed that Stroop. I would think so.

00:37:38
<transcript>: spar

00:37:44
<transcript>: Sparring says we love no sequel out here. Well, that's good. I've got an audience that maybe will understand some of this.

00:37:44
<transcript>: it's sad that

00:37:49
<transcript>: It's sad that I only have two years in the industry. Can someone say what happens with MongoDB and 2014, 2014.

00:37:53
<transcript>: There was some bat. Well, somebody may be answering already.

00:37:53
<transcript>: no

00:37:54
<transcript>: No.

00:37:56
<transcript>: Mongodb just kind of burn.

00:37:56
<transcript>: a lot of good

00:38:01
<transcript>: A lot of goodwill that I'm sure they're still recovering from.

00:38:01
uberrick: Rick Houlihan went to the dark side

00:38:04
<transcript>: There were some real issues with everyone jumped on it real fast.

00:38:13
<transcript>: Like MongoDB the mean stack Mongo angular. Is this hilarious to say now mango angular node and express.

00:38:13
nzlaura: using mongodb at my current workplace after using dynamo for the past 4 years. super sadge

00:38:15
<transcript>: It's the mean stack.

00:38:15
<transcript>: i got

00:38:21
fragaverage: MERN for me :3

00:38:22
<transcript>: I got sucked into it. We built some stuff. It's that muse early days of Stat news on the mean stack.

00:38:22
<transcript>: so

00:38:25
<transcript>: So it just kind of like got hyped too quickly and it wasn't ready.

00:38:25
<transcript>: and

00:38:32
<transcript>: And there were some major production issues people ran into with like any kind of load.

00:38:38
<transcript>: And yeah, people. Then immediately the backlash was severe. It was like it went from very hyped.

00:38:38
<transcript>: everyone should

00:38:45
<transcript>: Everyone should be using it. You don't need those SQL databases anymore to like that was awful.

00:38:45
<transcript>: but never

00:38:47
<transcript>: But never consider not using SQL again.

00:38:47
<transcript>: does that make sense

00:38:52
jaythedeveloper: basically in 2014 mongo db was same as writing to /dev/null

00:38:53
<transcript>: Does that make sense? Let's never consider no sequel or document based databases again because Mongo just screwed up.

00:38:59
<transcript>: And clearly, that's how every NoSQL database will be forever. That's kind of what happened.

00:39:08
stroopwafel26: I know of some clients using MongoDB Atlas, the hosted version ugh

00:39:13
<transcript>: Rick who landed the dark side? Rick, it still sends me every time he said something against, like Dynamo or a Tobis. It's just. It's like Mommy and Daddy are fighting at the dinner table kind of thing. Oh, hurry.

00:39:19
<transcript>: Say no to joins. That's right. J.

00:39:34
<transcript>: I'm learning back in Dev coming from web front and using no JSON MongoDB. It is good enough from here right now, much less to learn. Yeah, my Mongo, I think is made a lot of progress and I think probably a great offering today. It's just sad that.

00:39:39
<transcript>: I don't know, just the way we operate it's, the way social media works.

00:39:39
<transcript>: and

00:39:41
carlosgn: the main problem is ORMs imo

00:39:41
<transcript>: And it's just like.

00:39:41
<transcript>: since

00:39:50
<transcript>: Since sensationalism like everything is extreme to either side, and I'm guilty of it like my brain works that way, but.

00:39:52
carlosgn: SQL is so easy...

00:39:59
<transcript>: So Murn stack that'd be I guess Mango Express react.

00:39:59
<transcript>: and node

00:40:00
<transcript>: And node.

00:40:11
<transcript>: Was the same as writing to Dev. No, that's funny. That's just funny, right there.

00:40:29
<transcript>: Yeah, they have the hosted MongoDB again. I'm speaking about old mango. I'm sure they've learned from the mistakes. Lots of people use Mongo at scale in production, whatever at scale means. I mean, it's like it's a thing people choose it. But today we're talking about Dynamo.

00:40:31
<transcript>: In. Dynamodb.

00:40:31
<transcript>: what

00:40:39
<transcript>: What is it? Good. It's good at. I make bullet points. So you just use a star. I need to know what the bully character is.

00:40:41
stroopwafel26: yeah mongo used to be pretty terrible, today it's okay

00:40:42
<transcript>: So pros.

00:40:47
cedpoilly: Maybe we shouldn't make decisions based of a 144 characters opinion? and do our own research instead?

00:40:47
<transcript>: Now I have to make it all the same.

00:40:47
<transcript>: oh i guess

00:40:49
<transcript>: Oh, I guess I could do this.

00:40:53
<transcript>: Bear with me while I learn exceledro.

00:40:56
<transcript>: So DynamoDB.

00:40:56
<transcript>: prose

00:40:57
<transcript>: Prose.

00:40:57
<transcript>: come on

00:40:59
<transcript>: Come on.

00:40:59
<transcript>: pros

00:41:00
<transcript>: Pros.

00:41:08
<transcript>: Predictable.

00:41:10
<transcript>: Performance.

00:41:12
<transcript>: At scale.

00:41:23
sparringwithbear: the learning curve on excalidraw is steep be careful Kappa

00:41:28
cowfacedude99: people took it because it was hot and didn't know whether it fit their usecase or no. (I have been guilty)

00:41:32
<transcript>: And I know I'm not gonna put it scale, because I'm not. I'm not gonna do it. I'm not gonna fall into that trap, either. The next thing people say, when you're like, hey, you should consider Dynamo. They say, I'm gonna do another voice. I'm just warning you. You say, hey, you should consider Dynamo for this case. I'm not Amazon. I don't need Amazon scale. What do you think I have.

00:41:39
<transcript>: Just building a startup. That's another voice. Just giving you guys some voices today. I don't know where that's coming from.

00:41:39
<transcript>: that

00:41:45
<transcript>: That drives me crazy too. You can't bring up Dynamo without somebody coming out of the woodworks and saying.

00:41:45
<transcript>: i don't need

00:41:46
stroopwafel26: Adam Elmore, web developer by day, voice actor by night

00:41:53
<transcript>: I don't need that scale. That's for Amazon like that doesn't make a database. That just because the database is really good at scaling doesn't make it bad.

00:41:53
<transcript>: and it's

00:42:02
<transcript>: And it's doesn't mean that anyone lobbying for it thinks you are gonna become Amazon. Trust me. I don't think you and your startup are gonna become Amazon. I don't.

00:42:02
<transcript>: i just don't

00:42:05
<transcript>: I just don't. That's not the problem you have.

00:42:05
<transcript>: okay

00:42:07
<transcript>: Okay.

00:42:07
<transcript>: i

00:42:08
<transcript>: I need to calm down.

00:42:09
fragaverage: clip it and ship it, this is gold

00:42:11
<transcript>: Voice Actor By night.

00:42:19
<transcript>: I don't know why. I don't know why I'm getting so worked up today. I'm just thinking of every Twitter conversation I've had now. And like why I feel like.

00:42:19
<transcript>: my experience

00:42:22
<transcript>: My experience of defending Dynamo.

00:42:22
<transcript>: has been

00:42:24
<transcript>: Has been a poor one and.

00:42:28
stroopwafel26: It's Rant Monday again MaxLOL

00:42:36
fragaverage: "I don't want to do rants" Adam Elmore 2022 - 5 minutes before ranting

00:42:44
<transcript>: I think it's because of a handful of tropes and a handful of just misconceptions that have just, like, spoiled the water. And maybe it's just the experience on Twitter. Maybe if I just talk to people in the real world, I just went out and actually had conversations. Maybe if I went to conferences and stuff, I just don't travel. Maybe if I did, I'd realize people in the real world don't think like people on Twitter. And.

00:42:44
<transcript>: that it's not

00:42:49
<transcript>: That it's not such a grim outlook for things like Dynamo.

00:42:51
<transcript>: And again, Dynamo's doing fine.

00:42:51
<transcript>: aybus

00:42:54
<transcript>: Aybus doing fine.

00:42:59
<transcript>: It's just in the Web Dev community, specifically on Twitter.

00:43:03
<transcript>: I just really wish I could get to those folks. That's what I'm hoping to do. I guess.

00:43:03
<transcript>: in this little

00:43:19
<transcript>: In this little exercise, I'm not hoping that this video or this stream is going to get to them, but I'm hoping by mapping out what we're mapping here in Excel Draw, I can better understand. Is there a real need, a real way to fit Dynamo into.

00:43:19
<transcript>: the web

00:43:21
<transcript>: The web. Dev.

00:43:21
<transcript>: mind share

00:43:22
<transcript>: Mind share.

00:43:22
<transcript>: or

00:43:24
<transcript>: Or.

00:43:24
<transcript>: is it still

00:43:26
<transcript>: Is it still too early? And I should just forget about it.

00:43:26
<transcript>: so

00:43:31
<transcript>: So pros of Dynamo predictable performance. What I mean by that is.

00:43:31
<transcript>: you can

00:43:33
<transcript>: You can understand.

00:43:33
<transcript>: the performance

00:43:37
sparringwithbear: most people express their opinions so strongly when they're not even theirs , they're just repeating what their favorite "influencer" said

00:43:37
<transcript>: The performance characteristics of DynamoDB with a SQL based database.

00:43:37
<transcript>: you have to

00:43:45
<transcript>: You have to have a lot of experience, like a lot of experience to understand how query optimizers work. And even then.

00:43:45
<transcript>: there's

00:43:56
<transcript>: There's just probably no way to fit that in one person's head. Like, there's probably no one person. Okay. Maybe there's one person. There's probably some people who, like, wrote the stuff.

00:43:56
timmyha_: people enjoying dynamo are too busy shipping code to complain on twitter

00:44:16
<transcript>: But even then, like to have it all in your head and to understand with any given query on any given sequel database, let's take my Sequel any given MySQL database to be able to look at that query and know exactly how it's going to perform, regardless of amount of data and amount of requests inbound. It's very hard to have that in your head.

00:44:16
<transcript>: or to even

00:44:18
<transcript>: Or to even have a good like.

00:44:18
<transcript>: gauge

00:44:23
<transcript>: Gauge of what's going to happen in terms of performance. So the result is.

00:44:23
<transcript>: sql

00:44:27
<transcript>: Sqlbased database is let you do a lot. They're very flexible.

00:44:47
<transcript>: But they also let you shoot yourself in the foot a lot so you can create features that they work great in test in end Dev when there's no data. But then as you add data, they get slower and slower and slower until eventually your app is three years old and everyone hates it and it's legacy now. Never been want something new.

00:44:49
<transcript>: Because it's slow.

00:44:49
<transcript>: that's

00:44:53
<transcript>: That's the thing about SQL based databases. They don't enforce.

00:45:01
<transcript>: Like you thinking through the hard problems up front. They let you do whatever you want, and then it's up to you to make sure.

00:45:01
<transcript>: you keep

00:45:04
<transcript>: You keep things performance over time.

00:45:04
<transcript>: and every

00:45:08
cedpoilly: It's a good thing to try to place it (DynamoDB) in the conversation. The more we can reflect on it, the closer we can get to a reasonable opinion

00:45:11
<transcript>: And every new feature you add potentially breaks old features in terms of performance, so that's the.

00:45:11
<transcript>: the big

00:45:13
<transcript>: The big.

00:45:13
<transcript>: guess big

00:45:22
<transcript>: Guess big pro of DynamoDB is that you have predictable performance. There's, like five API calls. You can learn those API calls and you could spend a week.

00:45:34
<transcript>: And you sort of understand the performance implications of anything you do in Dynamo. It's all very predictable. It's simple. You can keep it in your head, the downside. So let's just go down here.

00:45:37
<transcript>: Let's just make our first Con.

00:45:41
<transcript>: The downside of that is.

00:45:44
<transcript>: Less.

00:45:44
<transcript>: flexible

00:45:47
<transcript>: Flexible. I hate to say that it's.

00:45:56
<transcript>: More work up front is what we'll call it. Everyone says your access pattern. You have to, like, think about.

00:45:59
<transcript>: How Your app uses data.

00:45:59
<transcript>: how

00:46:04
<transcript>: How is it retrieving that data. So if you have an ecommerce site.

00:46:04
<transcript>: like

00:46:08
<transcript>: Like you're fetching products and maybe you're fetching.

00:46:08
<transcript>: inv

00:46:09
<transcript>: Inventory levels.

00:46:09
<transcript>: in your fetching

00:46:11
<transcript>: In your fetching.

00:46:11
<transcript>: i don't know

00:46:14
<transcript>: I don't know. You're thinking about like.

00:46:14
<transcript>: the user

00:46:23
<transcript>: The users cart maybe some user profile information. You have to think about all of those things. And people generally like create a spreadsheet and literally list out.

00:46:30
<transcript>: Excuse me. All of your access patterns, the ways that your app needs to interact with your data.

00:46:30
<transcript>: you do

00:46:36
<transcript>: You do that up front, and then you design your Dynamo table or tables.

00:46:36
<transcript>: in such a way

00:46:40
<transcript>: In such a way that it meets all those needs. And that means.

00:46:40
<transcript>: over time

00:46:44
<transcript>: Over time as your application changes as all applications do.

00:46:44
<transcript>: you have

00:47:04
<transcript>: You have to continue to do that work of figuring out how your access best your actors patterns have changed or how they've evolved. You've got new ones. You maybe aren't using some of the old ones. You have to kind of keep doing that exercise and that makes it feel more rigid and more like, difficult to work with.

00:47:04
<transcript>: but

00:47:07
ozdy: @adamelmore how do you do migrations?

00:47:15
<transcript>: But it's so that you can save yourself a whole lot of pain down the line. And that's I think that's what people miss is like Dynamo's. So much work. Like I just I don't I can't.

00:47:15
<transcript>: do

00:47:19
<transcript>: Do all that up front work. I need to move fast on the startup or whatever.

00:47:19
<transcript>: i get

00:47:27
<transcript>: I get it. But also, I think it nets you a lot of time saved in the long run. Okay, I'm gonna reach out for a second.

00:47:31
<transcript>: Scrolling, scrolling, scrolling.

00:47:36
<transcript>: The learning curve on a show steep oh, boy.

00:47:36
<transcript>: should be careful

00:47:37
<transcript>: Should be careful.

00:47:56
<transcript>: Maybe we shouldn't make decisions based on 144 characters opinion and do our own research. That's a great call out, said Polly Infrastructure, Twitter's, 280 characters now, but I get your point. Yeah, there's way too much spot leadership on Twitter. It's the worst platform in the world. I hate it.

00:47:56
<transcript>: sergio

00:48:01
<transcript>: Sergio, thanks for follow if I saw that earlier.

00:48:14
<transcript>: People took it because it was hot talking about Mongo and didn't know whether it fit their use case or not. I've been guilty. Yes. Same Cook cafe. I've totally been guilty of that.

00:48:22
<transcript>: It's exciting. You know, new technology. Exciting. Back in 2014, Mongo was the stuff. It was exciting.

00:48:29
<transcript>: My kid is up 06:00. That's not great. I hear them above me.

00:48:39
<transcript>: Yeah, it's just hard not to get sucked in, you know, new technology comes along. We just. We're really eager to, like, play with new technology.

00:48:43
stroopwafel26: The main issue with recommending clients use DynamoDB is they'll say "I don't know dynamodb, let's just use something we're familiar with" and that's about the end of that conversation

00:48:47
<transcript>: Source of much anxiety as well as a developer because then you feel like you can't keep up. There's too many people creating cool stuff and you want to use it all and you can't.

00:48:53
<transcript>: It's ramp my digging.

00:48:58
<transcript>: I don't want to do Ranch. Adam. Omore five minutes before ranting.

00:48:58
<transcript>: most

00:49:10
<transcript>: Most people express their opinions so strongly when they're not even theirs, they're just repeating what their favorite influencer said. That's exactly right. I don't like the idea of influencers. Everyone is influenced by a lot of things. A lot of people.

00:49:10
<transcript>: every person

00:49:13
<transcript>: Every person on Twitter is an influencer.

00:49:13
<transcript>: i mean if

00:49:22
<transcript>: I mean, if anyone sees your tweet, you've influenced them in some way. So like, what is the idea of an influencer? I don't like it. I don't like the idea.

00:49:30
<transcript>: People enjoying Dynamo or too busy shipping code to complain on Twitter. It's exactly right.

00:49:30
<transcript>: tim

00:49:34
<transcript>: Timmy knows Timmy is a Dynamo user. I can see that.

00:49:34
<transcript>: it's a good thing to

00:49:49
<transcript>: It's a good thing to try and place it and DynamoDB in the conversation. The more we can reflect on it, the closer we can get to a reasonable opinion. Yeah, it's tradeoffs. All tech is just trade offs. And the longer you're in it, the more you realize that.

00:49:49
<transcript>: you're just you're learning

00:49:51
<transcript>: You're just you're learning how to fit.

00:50:01
<transcript>: Your problem like fit a solution to it by like balancing all the trade offs and things. This is reasonable approach, but there's no like best and there's.

00:50:01
<transcript>: it's just

00:50:02
<transcript>: It's just.

00:50:08
<transcript>: I guess with Dynamo, the thing that bothers me is I feel like.

00:50:08
<transcript>: it

00:50:16
<transcript>: It doesn't get the time of day for reasons that are really dumb. Like the Mongo 2014 thing.

00:50:21
log1400: I did the MongoDb University course ( it is their website for free ) , and they basically teach that you need to know up front how your fronted will consume your data before modelling everything

00:50:23
<transcript>: Ozzy has a great question. How do you do migration? So migrations in Dynamolisticals? Just add another Con.

00:50:25
<transcript>: convention

00:50:27
<transcript>: Convention. There we go.

00:50:33
log1400: I guess that it is the same for dynamodb?

00:50:34
<transcript>: So I'm just going to put migrations and I'll explain maybe we'll come up with a better way to write this in our conflict list.

00:50:34
<transcript>: migration

00:50:38
<transcript>: Migrations if you're used to like.

00:50:38
<transcript>: a sql

00:50:46
<transcript>: A SQL database. You write a sequel script. Maybe you write a tear down SQL script for, like, undoing migration. Dynamo.

00:50:46
<transcript>: there

00:50:53
<transcript>: There's not in this speaks of the larger problem with Dynamo, which is the developer experience there's not yet like.

00:50:53
<transcript>: standard

00:50:59
<transcript>: Standards around things like migrations. So you're mostly writing like handwritten scripts.

00:50:59
<transcript>: i mostly just

00:51:03
<transcript>: I mostly just write like node scripts to answer your question. Osd.

00:51:11
<transcript>: Literally just write like node stuff using the SDK to interact with Dynamo to do things. And I need to do.

00:51:15
<transcript>: To the database to migrate from one like you don't have schema.

00:51:15
<transcript>: enforcement

00:51:24
<transcript>: Enforcement. So it's not. It's not migrations in this traditional sense. Like I changed a column. I need to write a sequel script to update my database. To do that.

00:51:24
<transcript>: like you can just

00:51:29
<transcript>: Like you can just sort of like think more like an API creator, where you have to think in terms of backwards compatibility.

00:51:29
<transcript>: like i'm adding

00:51:29
cedpoilly: @log1400 I would be interested

00:51:36
<transcript>: Like I'm adding a new column or new attribute to my items, so I need to I need to go back and.

00:51:36
<transcript>: prepopulate

00:51:36
ozdy: @adamelmore this might be a pro - since you can do a migration per document on read.

00:51:41
<transcript>: Prepopulate it like with historical data. I need to go back and fill it in. That's the kind of stuff you're doing.

00:51:45
<transcript>: But because it is no sequel, it's schema list.

00:51:45
<transcript>: it's

00:51:48
<transcript>: It's it's less.

00:51:48
<transcript>: like

00:51:58
<transcript>: Like there's less strictness to migrations, whereas with the SQLbased database. If you want to read name a column or whatever like that's a sequel operation you need to do.

00:52:04
ozdy: Coz in SQL you need downtime to change the whole table, right?

00:52:04
<transcript>: Does that make sense? I feel like I'm botching my explanation here, but.

00:52:04
<transcript>: no sequel

00:52:08
<transcript>: No sequel is different in that sense you don't have.

00:52:10
<transcript>: This strict schema.

00:52:16
<transcript>: So I feel like when I'm working with Dynamo and I do like over time have to make changes.

00:52:19
<transcript>: Basically fixing assumptions that you had early on, you learn something.

00:52:19
<transcript>: you're

00:52:23
<transcript>: You're changing the way your items are structured.

00:52:23
<transcript>: it's

00:52:23
uberrick: Yeah like you could back fill at request time

00:52:33
<transcript>: It's mostly like thinking like an API developer. It's like I'm gonna deprecate this attribute no longer gonna use it. My code is within this version is going to gracefully handle the new way.

00:52:33
<transcript>: and then i'm

00:52:43
<transcript>: And then I'm gonna backward fill using like, node scripts or something like I just literally just script out like one off scripts to go through an update my database when I need to.

00:52:46
<transcript>: So that is definitely a Con.

00:52:46
<transcript>: but i

00:52:50
<transcript>: But I I know. Does anyone like the Migration story.

00:52:50
<transcript>: with their database

00:52:53
<transcript>: With their database like does anyone enjoy.

00:53:01
<transcript>: Migrations like rails. I think it's great to have like baked into the framework you write with.

00:53:01
<transcript>: have

00:53:11
<transcript>: Have how you do migrations. That's the thing that feels the most bad about Dynamo is that there's no conventions. And I would say that's the I'm gonna put that.

00:53:11
<transcript>: as

00:53:13
<transcript>: As my second Con.

00:53:16
<transcript>: The biggest Con I think.

00:53:18
cedpoilly: @adamelmore let's say I started a product with MongoDB, and later on I realised its best to move to DynamoDB. How realistic would that operation be?

00:53:30
<transcript>: the biggest one the first one i list here more work up front that's the biggest one people bring up that don't use dynamo a lot i think this becomes less vicon the more experience you get with it the biggest come i have is someone who uses a lot is

00:53:33
ozdy: @cedpoilly easy with the right abstraction ;)

00:53:33
<transcript>: Poor developer experience.

00:53:42
<transcript>: There's just not enough tooling. This is the kind of thing that comes with time. Like there is definitely some tool. Like I said this on Twitter yesterday, people.

00:53:43
<transcript>: Throw.

00:53:43
<transcript>: some examples

00:53:52
<transcript>: Some examples at me of like open source libraries that make it better. And there are tools that make it better. So DynamoDB Toolbox by Jeremy Daley is great, fantastic.

00:53:55
<transcript>: Same with Electrodb? Who.

00:53:55
<transcript>: people

00:53:58
<transcript>: People that I'm close with.

00:53:58
<transcript>: really recommend

00:53:59
ozdy: @adamelmore which wrapper do you use? I used dynamodb-wrapper but i think it's not very well maintained

00:54:00
<transcript>: Really recommend it's good stuff.

00:54:14
<transcript>: I'm not really like talking in terms of runtime libraries to make Dynamo better. It's more wholestically. Like the ecosystem, isn't there.

00:54:14
<transcript>: and it

00:54:21
<transcript>: And it's just it's still like a pretty obscure database offering. Anytime you choose something kind of off the beaten path.

00:54:21
<transcript>: your developer

00:54:36
<transcript>: Your developer experience it's not as good as it could be when you know, you know the grass is greener on the other side. You've played with the developer experience of Prisma and you kind of know like this is how good it could be if I just use a SQL based database.

00:54:36
<transcript>: that's

00:54:56
<transcript>: That's the problem that Dynamo has it's that it doesn't have enough adoption to have that whole ecosystem built up around it, where there's, like these ideal ways to work with it and some of it's on the service side, like Amazon will continue to roll out improvements to Dynamo. When Rick Hulahan left, he sort of lays out the case against Dinosau because obviously he's working for MongoDB now.

00:54:59
<transcript>: He's gonna have that to say.

00:54:59
<transcript>: and

00:55:10
<transcript>: And he listed a lot of stuff that are valid, like points, things that are missing from Dynamo that Mongo has. So I'm gonna say, poor developer experience. There's a lot of nuance in each of these points.

00:55:16
<transcript>: Want to put this on the pros.

00:55:20
<transcript>: I'm gonna just call it infinite.

00:55:22
<transcript>: Scalability.

00:55:25
<transcript>: I hate even listing this because again.

00:55:28
<transcript>: People.

00:55:28
<transcript>: people

00:55:29
blakegreendev: Have you tried dynobase?

00:55:41
<transcript>: People just immediately jump to the thing I said earlier where it's like, I don't need that scale. Okay, that's fine. You don't have to use it. But the reality is like if you're building something, you probably want it to be.

00:55:41
<transcript>: as

00:55:43
<transcript>: As big a thing as it can be.

00:55:43
<transcript>: maybe not maybe

00:55:46
<transcript>: Maybe not. Maybe you're somebody who just likes.

00:55:46
<transcript>: making small

00:55:58
<transcript>: Making small projects, and not many people use that's fine. But if you're like starting a startup, your goal is probably to take it to the moon because that's what everybody's goal is. And isn't it nice to know that your database.

00:55:58
<transcript>: is like good

00:55:59
<transcript>: Is like good.

00:55:59
<transcript>: indefinitely

00:56:04
<transcript>: Indefinitely. You don't have to ever have to think about, like will it scale.

00:56:21
<transcript>: I raises like that, too. The main issue with recommending clients use Dynamo DB is they'll say, I don't know, DynamoDB. Let's just use something we're familiar with. And that's about the end of that conversation. Yeah. No. From a startup standpoint, that's absolutely right. Street like in dealing with clients that are already using SQL based databases.

00:56:21
<transcript>: that

00:56:27
<transcript>: That's exactly how the kind of goes. I was more speaking to how the Twitter conversation goes.

00:56:27
<transcript>: and the twitter

00:56:32
<transcript>: And the Twitter folk they bring up the very predictable tropes that drive me nuts.

00:56:38
<transcript>: But in terms of scalability, I mean, Dynamo handles what, 20 million transactions a second.

00:56:38
<transcript>: for

00:56:44
uberrick: previously compute used to be cheaper than storage so we normalised data. Now compute is more expensive than storage so you  can write data ready to be read instantly

00:56:52
<transcript>: For Amazon.com, it's a lot. I mean, like, it's a lot lot as a service. They do just insane scale. And it's not even I feel like I use it like, I know there's a lot of big companies using it.

00:56:52
<transcript>: and we know amazon

00:57:01
<transcript>: And we know Amazon.com uses it. So I know it's getting plenty of like it's got a lot of load, but like it feels like it's not in the conversation.

00:57:01
<transcript>: and yet

00:57:05
<transcript>: And yet they operate these scales that just boggle them mind.

00:57:11
uberrick: also there are bottlenecks to how fast you can compute

00:57:14
<transcript>: I did the MongoDB University course. It is their website for free. Also, thanks for the following Mr. Software. I didn't know Mr. Sauce himself was joining us today.

00:57:19
<transcript>: Mr. Software Ozzy. Also, thank you for the follow.

00:57:29
<transcript>: They basically teach you up front how your front end will consume your data for modeling everything. Yeah. Access Patterns is the buzzword log.

00:57:29
<transcript>: it's the same for

00:57:31
<transcript>: It's the same for Dynamo. That's exactly right.

00:57:37
<transcript>: This might be a pro since you can do a migration per document on read. Yeah, I kind.

00:57:37
<transcript>: of

00:57:39
<transcript>: Of these cons.

00:57:40
<transcript>: consequences

00:57:41
<transcript>: Consequences.

00:57:59
<transcript>: Like more work up front and migrations. I think they're fine. As someone who uses Dynamo a lot, I kind of prefer the way I do migrations with Dynamo. I prefer the overtime maintenance of Dynamo over a SQL based database. I prefer it, but I can see how people who.

00:58:09
<transcript>: Unfamiliar people who are coming from a sequel based database, and that's my all of these are really about it's not familiar. It's not what I normally do.

00:58:13
<transcript>: This is not what I want to do, though my point here was not to.

00:58:13
<transcript>: lay out the case

00:58:17
<transcript>: Lay out the case for Dynamo. My point was to diagram out.

00:58:22
<transcript>: A thing, a service that doesn't exist.

00:58:24
<transcript>: Database.

00:58:26
<transcript>: As a service.

00:58:31
<transcript>: Please don't let me build this.

00:58:37
<transcript>: Okay. I want to catch up on Chat, and then we're going to we're gonna talk about this.

00:58:37
<transcript>: you need down

00:58:39
<transcript>: You need downtime sheets will table right.

00:58:43
oscartbeaumont: What's the story like if you want to move your data off DynamoDB to something else?

00:58:46
<transcript>: Yeah, no, that's right. Ozzy. Like when you're writing a node script, interact with the SDK.

00:58:50
stroopwafel26: database as a service in rust?

00:58:53
<transcript>: You're interacting with Dynamo through the SDK through the API. Ultimately. Yeah. A lot more control over.

00:58:57
<transcript>: How you time. That how you manipulate the database versus.

00:58:57
<transcript>: typical migration

00:58:59
<transcript>: Typical migration patterns.

00:58:59
<transcript>: yeah i think

00:59:02
<transcript>: Yeah, I think that's a valid point.

00:59:07
<transcript>: Yeah. Like you could better fill it. Request time. Yep.

00:59:07
<transcript>: absolutely

00:59:08
<transcript>: Absolutely.

00:59:14
<transcript>: Let's say I started a product with Manga DB, and later on I realized it's best to move to Dynamo.

00:59:16
<transcript>: dynamod

00:59:17
<transcript>: Dynamod.

00:59:23
shn4ke: t3ggWave

00:59:25
<transcript>: So as he says, Easy, with the right abstraction. Wink. Which rapper is. I use DynamoDB Rapper. But I think it's not very womantained.

00:59:28
<transcript>: Blake Green is here.

00:59:29
shaaah: what is faster, using useCallback to do the processing when component re renders or not usingthe useCallback and let react re-create the function when it re renders

00:59:31
<transcript>: Hey, Blake. I know you.

00:59:34
<transcript>: Thanks for joining Chat. Welcome.

00:59:43
<transcript>: Have I tried? Donnabase? Yes, I'm a Diana based customer. Got lifetime access to Dynobase. Big fan.

00:59:43
<transcript>: make

00:59:44
<transcript>: Make.

00:59:50
log1400: Off topic: i did just realize that you are not using a green screen

00:59:54
<transcript>: There's. There's a lot of these tools. Well, I say a lot of them. There's a few of these tools that are like local A Tobia tools. I think there could be, like, six more. It looks.

01:00:01
blakegreendev: Hey Adam!

01:00:06
<transcript>: Just make go in make an electron app or maybe don't I think Rafael would say, don't think maybe he'd built it an electron. And wish T hadn't make like a native app. That.

01:00:06
<transcript>: interacts with

01:00:12
<transcript>: Interacts with your AWS resources and it will probably sell. There's a startup idea for you. Just pick a service.

01:00:12
<transcript>: so

01:00:14
<transcript>: So Rafael did it with.

01:00:18
<transcript>: Or Rafa Fall. Sorry. Did it with.

01:00:18
oscartbeaumont: Tauri > Electron

01:00:37
<transcript>: Dynam Dynami deep Dino DB. Dynamo, can I talk now? Is that okay? Can I say words, DynamoDB? Because I kept wanting to say Dino base. He made Dino Base, which is like native app for interacting with Dynamo DB. But it does a lot more. It does so much. It's incredible.

01:00:37
<transcript>: and then you've

01:00:38
log1400: @shaaah _it depends_

01:00:41
<transcript>: And then you've got cloud ash more folks from steady to my.

01:00:41
<transcript>: and

01:00:48
<transcript>: And muchier made cloud Ash. It's like Cloud Watch locally. The reason these services are so great is.

01:00:48
<transcript>: it's a big

01:00:52
<transcript>: It's a big pain to go into the console, especially.

01:00:52
<transcript>: like

01:00:53
<transcript>: Like.

01:00:53
<transcript>: if you have

01:00:56
shaaah: @log1400 i hate that answer xD

01:00:59
<transcript>: If you have a bunch of different database accounts or your consultant like me and you work with a lot of clients that have their own AWS accounts.

01:00:59
<transcript>: it's

01:01:04
<transcript>: It's a huge pain to go into cloud watch on every account you need to get logs from.

01:01:04
<transcript>: and you're switching

01:01:05
shaaah: it depends should be banned in software engineering

01:01:09
blakegreendev: I haven‚Äôt used it personally but I assumed it helped with developer experience no?

01:01:16
godbless_27: hello adam, dumb question: isn't inifinite scalability a default for all nosql dbs?

01:01:18
<transcript>: And you're switching accounts and you can only have one thing open in one browser at a time. Like, there's ways to get around it. I use profiles and Chrome, but like ultimately, huge pain when you can have a native app that just has your credentials locally. It's not storing them anywhere. You don't have to worry about that.

01:01:18
<transcript>: the sensitivity of that

01:01:22
stroopwafel26: @shaaah why? it's a great answer, because most times, it really depends

01:01:25
<transcript>: The sensitivity of that and you can fetch from every possible account you need cloud watch logs from.

01:01:25
<transcript>: very nice

01:01:26
<transcript>: Very nice.

01:01:26
<transcript>: very nice

01:01:31
<transcript>: Very nice there's my my pitching of cloud ash.

01:01:31
<transcript>: and dynabased

01:01:32
<transcript>: And dynabased.

01:01:32
sparringwithbear: @shaaah do you have performance issues ? or you're just asking

01:01:45
<transcript>: Previously, compute used to be cheaper than storage, so we normalize data. Now compute is more expensive than stores. So you can write data ready to be read instantly. Also, there are bottom lines to how fast you can compute. Yep, Yep, Yep.

01:01:45
<transcript>: i

01:01:48
<transcript>: I agree with Rick. All points.

01:01:48
<transcript>: what's a story

01:01:58
<transcript>: What's a story like if you want welcome to chat Oscar to first I want to welcome you to this very chat. What's the story like if you want to move your data off DynamoDB to something else.

01:01:58
<transcript>: don't know

01:02:00
<transcript>: Don't know haven't done it.

01:02:07
<transcript>: It's just so good. Once you end up on that, you have no reason. I'm sure people have done that.

01:02:11
<transcript>: But I won't speak to it because I've never done it.

01:02:15
<transcript>: Databases, a service and rest. Maybe Street.

01:02:15
<transcript>: just maybe

01:02:17
<transcript>: Just maybe.

01:02:19
shaaah: Team lead made us write useCallback everywhere

01:02:21
log1400: It is the true, somethings you will have a component with _a lot_ of re renders, and it is a _must_ to memoize the functions declarations, but somethings you know that this components will not re render never or not to often

01:02:22
<transcript>: Schneike Hello, waving, waving back at you.

01:02:22
<transcript>: what is

01:02:33
<transcript>: What is actually using use callback to do the processing when component rerenders or not using the use callback and let reaction recreate the function when it rerenders. Okay. I got a.

01:02:36
<transcript>: I gotta do the thing where I'm like.

01:02:36
<transcript>: the corporation

01:02:37
<transcript>: The Corporation.

01:02:39
shaaah: so just curious why

01:02:46
<transcript>: And then like I gotta map that sentence app using use callback to do the processing when component rerenders.

01:02:46
<transcript>: or not

01:02:59
<transcript>: Or not using the used callback and let react recreate the function when it rerenders. I don't think anyone can give you an answer to that Shaw because of context. I think there's probably more context needed to know.

01:02:59
<transcript>: like

01:03:03
<transcript>: Like use, callback, use memo those things.

01:03:03
<transcript>: have their user

01:03:05
<transcript>: Have their users.

01:03:05
<transcript>: but

01:03:05
log1400: XD

01:03:10
<transcript>: But there's trade offs like you don't want to overuse it.

01:03:10
<transcript>: and

01:03:30
<transcript>: And some of the I think the React Docs, the new beta React Oxidative Vermov has been putting out on Twitter a lot. I don't know if those are official now. I think they have a lot of insights into Hook usage that would be helpful to you, but I don't think anyone could give you a straight answer if there were just a straight answer. Like Use Callback is always the right answer or never the right answer.

01:03:30
<transcript>: then

01:03:32
stroopwafel26: @oscartbeaumont Look into AWS Data Pipeline, you can export DynamoDB data to S3 and then import that data into RDS

01:03:33
<transcript>: Then it wouldn't exist, or it would just be baked in. Right.

01:03:35
sparringwithbear: i alt f4 when i see people abusing useMemo / callback

01:03:39
<transcript>: Off topic. I did just realize that you're not using a green screen. Oh, I am using a green screen.

01:03:43
<transcript>: I am using one log. Is it just so bad.

01:03:43
<transcript>: oh wow

01:03:47
<transcript>: Oh, wow. I just saw my hair. How did you all let me.

01:03:47
<transcript>: who

01:04:07
<transcript>: Who let me come on stream with her like this. My wife would die. She hates that I don't care about my physical appearance. It drives her bananas because I'm so anal about everything else. Like I make sure, like everything is in its place and is lined up perfectly. Like I'm very I've got OCPD, I'm very like me. Everything has me. But.

01:04:07
<transcript>: then like i don't

01:04:19
<transcript>: Then like, I don't fix my hair and I don't brush my teeth and all these things. I'm in our brush my teeth just not as much as she does. And yeah, she doesn't understand why wouldn't be the same about my physical parents as I am about.

01:04:19
<transcript>: my

01:04:21
log1400: what? so... the background is always been fake?

01:04:21
<transcript>: My things.

01:04:21
<transcript>: there

01:04:23
<transcript>: There appearance.

01:04:23
<transcript>: and i don't understand

01:04:28
<transcript>: And I don't understand it either. Someone if you know psychology wise, if you're a psychologist.

01:04:28
<transcript>: and you know

01:04:37
<transcript>: And you know why I don't care about what my hair looked like in front of people. Maybe let me know or maybe let my wife know so she can fix it because I want to think about it again. And I'll forget.

01:04:39
oscartbeaumont: Sadly, they don't seem to have anything about useCallback on the beta React docs yet.

01:04:45
<transcript>: Hey, Blake. Sorry you were saying hey, back to me. I said hey to you? And then five minutes went by? And I finally read your head.

01:04:45
<transcript>: and

01:04:49
<transcript>: And here we are having this five minute long breeding.

01:04:49
<transcript>: how you doing blake

01:04:53
<transcript>: How you doing, Blake? What time is it for you? Where do you live? Out. You're in the US, right.

01:05:00
<transcript>: Torture is greater than electric. To know Oscar Art did not know this.

01:05:00
<transcript>: did not

01:05:02
<transcript>: Did not know this.

01:05:02
joshuajebaraj: hey Adam office tour when

01:05:14
<transcript>: Should be banned. In software engineering. You don't like it depends. But it does. It just does depend most of the time. That's the problem with software engineering is it's complex.

01:05:14
<transcript>: and just like

01:05:19
<transcript>: And just like the rest of the world, very complex, very hard to give straight answers. Too much of anything.

01:05:19
<transcript>: haven't

01:05:23
<transcript>: Haven't used it personally, but I assumed it helped with developer experience. Now.

01:05:34
blakegreendev: I‚Äôm in North chackalacky :)

01:05:34
<transcript>: This is where I should keep up. I should keep up better. I don't know what Blake is referring to. Haven't used it personally, but assumed it helped with developer experience. No.

01:05:39
<transcript>: Don't question isn't infinite scalability a default for all NoSQL database.

01:05:39
<transcript>: i don't

01:05:41
<transcript>: I don't know God bless.

01:05:46
<transcript>: I don't know most of the NoSQL databases as well.

01:05:46
<transcript>: i think generally

01:05:47
blakegreendev: Dynobase

01:05:49
<transcript>: I think generally speaking, they do have.

01:05:49
<transcript>: i mean just

01:05:54
<transcript>: I mean just the way a nodesql database works, they inherently have.

01:05:54
<transcript>: scal

01:06:05
<transcript>: Scalability advantages. But again, this is very sensitive topic. I don't like to talk about scalability just because of all the people who will immediately jump in my mentions and say, you're not gonna need that scale. Okay.

01:06:15
<transcript>: That's not why I love that. It would be BB. I don't love it because it scales the Amazon.com levels of insanity.

01:06:26
<transcript>: Sorry, sorry, sorry. God bless you. Just ask a simple question. And I went back to ranting against people that aren't in this dream right now. You're not here. I don't know why I'm ranting and railing against people from Twitter.

01:06:31
<transcript>: Okay. Do you have performance issues or you're just asking.

01:06:31
<transcript>: team

01:06:34
<transcript>: Team lead manager you go back everywhere.

01:06:37
<transcript>: I mean that's that's one approach.

01:06:37
<transcript>: kipla

01:06:38
<transcript>: Kipla.

01:06:38
<transcript>: thanks

01:06:45
<transcript>: Thanks to follow. I appreciate that I'm gonna stop reading chat. I do just. I hate not reading all of the messages.

01:06:45
<transcript>: but

01:06:48
cowfacedude99: IMO someone who says 'you don't need the scale' don't think of the future

01:06:53
<transcript>: But then I just don't catch up. And oh, Joshua, welcome to Chat. And he asks, office tour win.

01:06:53
<transcript>: great question

01:06:59
<transcript>: Great question. I'd love to do an office tour. I've got three cameras now so I can more realistically do it.

01:07:03
<transcript>: Here's a little office tour for you.

01:07:07
<transcript>: Oh, shoot, I forgot.

01:07:07
<transcript>: i did that

01:07:12
<transcript>: I did that. I did the I put on my macro lens. Oh, no, it's not focusing.

01:07:12
<transcript>: ugh

01:07:16
<transcript>: Ugh Ugh Ugh Oh, There it goes.

01:07:16
<transcript>: is it getting it

01:07:20
<transcript>: Is it getting it? Is it focusing on the keyboard? Geez, I'm gonna have to fix it. It doesn't.

01:07:20
<transcript>: well that

01:07:25
<transcript>: Well, that's as good as you're gonna get right now. I forgot I took my wide angle off.

01:07:25
<transcript>: and i put that

01:07:27
star_ansible: whatya doing buddy

01:07:27
klicer_: Cool keyboard

01:07:29
klicer_: what switches?

01:07:29
<transcript>: And I put that on there so you can see my keyboard because it's cool. Keyboard.

01:07:29
<transcript>: alright let's

01:07:31
<transcript>: Alright, let's map this thing.

01:07:35
<transcript>: North, shakalaki.

01:07:35
<transcript>: what

01:07:38
<transcript>: What? Blake. I don't know what that word is.

01:07:41
<transcript>: Jack, oaky, Cly, Sir.

01:07:41
<transcript>: welcome to

01:07:43
stroopwafel26: Cool ring, does it track sleep? :P

01:07:45
stiefbroerikzitvast: guess whos back

01:07:45
andom: !keyboard

01:07:46
<transcript>: Welcome to Chat and thank you for complimenting my keyboard I saw on.

01:07:47
fossabot: Adam uses a custom Mode Eighty mechanical keyboard, and has a collection of other Mode keyboards!

01:07:51
<transcript>: Thanks for the follow too. I saw on oh, Step, Rose. Here.

01:08:00
stiefbroerikzitvast: dont hit on star_ansible, if you ever meet him

01:08:10
<transcript>: Was this ain't no compliment. Oh yeah. I saw on Study Times stream where she has, like a bot say, like this is a no compliment stream. This here Adams stream. It's a compliment stream. You can just do them. I've never had to tell someone. Stop at the compliments. I just think that's funny. She probably gets it a lot. I don't get that.

01:08:10
<transcript>: so

01:08:15
<transcript>: So you can compliment all you want. Copy my keyboard. It's a great keyboard. I love it.

01:08:15
<transcript>: rated

01:08:22
<transcript>: Rated me with 45 G starrings this takes me back to my first well, first I gotta do this.

01:08:22
<transcript>: take me back

01:08:29
<transcript>: Take me back to my first week's on Twitter. My first probably like handful of streams. Sorry and will come in and raided me.

01:08:34
<transcript>: And I did note the time whatever raid was I've since learned.

01:08:34
<transcript>: but

01:08:41
stroopwafel26: hey i was just watching @star_ansible

01:08:44
<transcript>: But I appreciate every one of those raids. Star enable. It's been a while. I haven't seen in a while. An issue. I just don't think you've been on Twitch as much is what I've gathered.

01:08:47
fragaverage: !so @star_ansible

01:08:48
fossabot: Shout out to star_ansible! Go follow them at twitch.tv/star_ansible - they were last seen playing Software and Game Development!

01:08:49
akawr: yeah he's on the grind

01:08:52
<transcript>: Stripe was just watching you start Ansible and now you're all here watching this very stream.

01:08:54
legendeffects_: it means you get a bunch of trolls in chat Kappa

01:08:58
stiefbroerikzitvast: thats a great facial structure, jawline, beard and hairline and the James Dean eyes, live it, 9.5/10

01:09:03
<transcript>: Is on the ground oh, I get it. Startup life, startup life oh, thank you, Fred, for shouting out starrings Go watch Star Ancible when he has time to stream.

01:09:03
<transcript>: get a bunch of tr

01:09:03
pannosa: @star_ansible is just lazy .. thats all Kappa

01:09:05
<transcript>: Get a bunch of trolls in chat.

01:09:07
star_ansible: hahahha james dean

01:09:09
<transcript>: Thank you, Step, bro.

01:09:12
akawr: no i mean world of warcraft grind

01:09:16
<transcript>: Thank you, thank you, thank you, thank you, thank you. Oh, wait. Were you talking about Star Enable? Okay.

01:09:16
guy_roh: daveaoChad @LegendEffects_ the correct term is Hobgoblins

01:09:18
star_ansible: hahahah

01:09:20
star_ansible: ok guys i gotta run

01:09:22
<transcript>: Hop, goblins.

01:09:24
star_ansible: goodluck

01:09:34
<transcript>: See you. Sorry. I get it when I raid somebody and they, like, start interacting with me. I'm like, no, really. I rated you because I have to go, like, I have to get off my computer right now. My wife's gonna come busted the door. See you.

01:09:37
stroopwafel26: @StiefbroerIkZitVast I agree, wish I had that hairline still

01:09:41
<transcript>: Okay, so what are we doing? People who just came in from Star Ansible, we are.

01:09:41
<transcript>: we're talking

01:09:47
<transcript>: We're talking about a nice idea that's stuck in my head. I dreamed about it last night. And when I dream about something.

01:09:47
<transcript>: i just have to get it out

01:09:48
<transcript>: I just have to get it out.

01:09:48
<transcript>: and we're gonna get

01:09:52
<transcript>: And we're gonna get it out on this very excaladraw screen.

01:10:06
<transcript>: So I'm the thing I want to I want to map out is there a is there room for a better database hosted database offering so planet scale being.

01:10:06
<transcript>: i would

01:10:22
<transcript>: I would say the bar like if that's the standard is the room for like a better version of that. And the reason I bring that up is it bothers me that we all were using Prisma and other Orms so we're like abstracting away, seeing.

01:10:22
<transcript>: we're using

01:10:29
<transcript>: We're using slow. I say slow, I don't want to inflame. I want to be inflammatory. We're using databases that are maybe.

01:10:29
<transcript>: not

01:10:30
<transcript>: Not as performant.

01:10:30
<transcript>: as

01:10:43
<transcript>: As other database offerings. But they come with SQL, which is more flexible and has all these benefits. But then we don't use SQL. So we're kind of like not using the strength of a SQL based database like MySQL in planned Skills case.

01:10:43
<transcript>: is

01:10:50
<transcript>: Is there room to think about a database offering that sort of maximize the strengths of the underlying database.

01:10:50
<transcript>: and

01:10:55
<transcript>: And provide a great developer experience. So DynamoDB, I'm an AWS person.

01:10:58
<transcript>: I really am into AWS.

01:10:58
<transcript>: and

01:10:59
<transcript>: And.

01:10:59
<transcript>: i'm constantly trying

01:11:03
<transcript>: I'm constantly trying to champion it with my web developer, friends.

01:11:03
<transcript>: and that's

01:11:12
<transcript>: And that's what this stream is gonna be, basically because we're going to talk about could we build a hosted service with DynamoDB that filled in the rough edges of Dynamo.

01:11:12
<transcript>: and

01:11:12
legendeffects_: you'll never move me from postgresql

01:11:19
<transcript>: And sort of made it something that felt like it belonged in a Web developers toolkit. Does that make sense? We're on the same page.

01:11:28
<transcript>: Legend is not sold we will never move legend from Postgres and I get it.

01:11:28
<transcript>: i get it

01:11:36
<transcript>: I get it. But even plant scale. That's the other thing. There's no real like good serverless Postgres offering, is there? Someone pointed out neon yesterday.

01:11:36
<transcript>: but

01:11:39
<transcript>: But it's like not maybe.

01:11:39
<transcript>: as

01:11:40
<transcript>: As.

01:11:40
<transcript>: serverless

01:11:43
sparringwithbear: i always use raw SQL querying when i use prisma , to not get my SQL rusty LUL

01:11:43
<transcript>: Serverless as planet scale, even.

01:11:43
<transcript>: so

01:11:47
<transcript>: So if you're into Postgres which most people are and should be probably.

01:11:51
<transcript>: You don't have a great service option, and then that's a bummer.

01:11:58
<transcript>: How would you raw sequel querying when I use Prismas to Naget my sequel rusty. Okay.

01:11:58
<transcript>: yeah

01:12:07
<transcript>: Yeah, I guess that's something else somebody pointed out. Is it like you can dip into SQL? It's not like people using prison. Don't ever write sequel. I get it.

01:12:13
<transcript>: Okay. So what would this database as a service.

01:12:13
<transcript>: look like

01:12:15
<transcript>: Look like I think.

01:12:20
<transcript>: The assumption here is that we would use DynamoDB, which is.

01:12:23
<transcript>: I think a great way to shove.

01:12:23
<transcript>: if you think of like

01:12:26
<transcript>: If you think of like a prisoner scheme.

01:12:26
<transcript>: you have

01:12:26
stroopwafel26: Only serverless postgres thing I know is aurora

01:12:30
<transcript>: You have your your models, your various entities.

01:12:30
<transcript>: i think

01:12:33
<transcript>: I think storing those in Dynamo.

01:12:33
<transcript>: and retrieving

01:12:36
<transcript>: And retrieving them is super fast. The thing that gets challenging is.

01:12:36
<transcript>: all

01:12:41
log1400: My bigger scare with using prisma, is that i will not be able to dig into the terminal and write something _really_ complex that i need to do without prisma

01:12:56
<transcript>: All the relationships. Not because Dynamo's not relational. It's plenty relational. The problem is trying to create a solution that could derive the database structure in Dynamo automatically, basically doing all that work that we talked about. More work up front. Dynamo, you have to like, think through your access patterns. Can you automate that? Can you take a schema.

01:12:57
legendeffects_: We just upgrade and downgrade our postgres cluster as needed through google cloud at work

01:13:01
<transcript>: Like any arbitrary.

01:13:01
<transcript>: we'll call it

01:13:07
<transcript>: We'll call it a Prisoner Schema. For now. Maybe this thing would be backwards compatible. Work with Prisoner Schemas. Maybe.

01:13:12
<transcript>: Can you take a prism schema and sort of derive all of the Dynamo.

01:13:12
<transcript>: table

01:13:17
<transcript>: Table structure from that and that's the question.

01:13:17
<transcript>: so the

01:13:19
<transcript>: So the thing this would have to have.

01:13:19
<transcript>: i think

01:13:23
<transcript>: I think it would have to have a Prisma.

01:13:23
<transcript>: like

01:13:24
<transcript>: Like.

01:13:27
<transcript>: Runtime library.

01:13:30
<transcript>: Or M.

01:13:31
<transcript>: mikon or m

01:13:31
<transcript>: mikon or m and

01:13:43
<transcript>: Mikon or M. And I know Prisma started out trying to be like, We're not an Orm. But then they were like, finally they were like, yeah, I guess we're an over end. This would just be an Orm. I think if you made this database service, you would have to have a runtime thing.

01:13:47
<transcript>: Involved that sort of translating.

01:13:47
<transcript>: like there's

01:13:48
<transcript>: Like there's no way.

01:13:48
<transcript>: to build

01:13:50
stroopwafel26: but aurora serverless is pretty terrible right now, I wouldn't recommend it to anyone

01:13:55
<transcript>: To build a DynamoDB like a service on top of DynamoDB and not have this runtime piece.

01:13:55
<transcript>: prisma

01:13:59
<transcript>: Prisma doesn't support DynamoDB. They've talked about it.

01:13:59
<transcript>: if they

01:14:09
<transcript>: If they support it, then maybe you wouldn't have to build it into this service. But they don't. But I think that's part of this puzzle, you would have to let's just let's call this things.

01:14:12
<transcript>: Must have.

01:14:12
<transcript>: for that

01:14:14
<transcript>: For that.

01:14:16
<transcript>: Must have.

01:14:17
stroopwafel26: I've had clients come in where they were on aurora serverless and wanted to migrate off of it lol

01:14:20
<transcript>: You have to have this Prisma like Runtime library.

01:14:20
<transcript>: you'd

01:14:23
<transcript>: You'd have to.

01:14:32
<transcript>: So that runtime library would have to like translate.

01:14:35
<transcript>: A schema.

01:14:35
<transcript>: you'd have to

01:14:43
<transcript>: You'd have to like store metadata about a user. So if you think of this as a SAS, like people signing up for this database service just like you do for plant scale.

01:14:46
<transcript>: You'd have to as they made changes.

01:14:48
<transcript>: In their.

01:14:48
<transcript>: prison schema

01:14:49
<transcript>: Prison, schema.

01:14:49
<transcript>: you

01:14:51
<transcript>: You'd have to be like.

01:14:55
<transcript>: Coming up with the implications.

01:14:59
<transcript>: Like basically like.

01:14:59
<transcript>: automatic

01:15:00
<transcript>: Automatic.

01:15:03
<transcript>: Management of.

01:15:07
<transcript>: Migrations.

01:15:16
<transcript>: You you would have to sort of like, handle that for them.

01:15:16
<transcript>: i don't know

01:15:18
<transcript>: I don't know how this database offers.

01:15:18
<transcript>: if you

01:15:30
<transcript>: If you just expose Dynamo to them, I think it's a nonstarter. I think Dynamo needs to be like an implementation detail. And maybe you even know using Redis and you can other really fast in memory databases.

01:15:30
<transcript>: for

01:15:36
<transcript>: For parts of this because I do think there's almost like a metadata store that would be necessary.

01:15:36
<transcript>: so for each

01:15:41
<transcript>: So for each SAS tenant you'd have to store like information about their models.

01:15:41
<transcript>: to be able

01:15:42
<transcript>: To be able to.

01:15:42
<transcript>: track

01:15:47
<transcript>: Track changes to those models over time and manage the data.

01:15:47
<transcript>: like

01:15:51
<transcript>: Like migration process. You'd have to do that for them.

01:15:54
<transcript>: I got to catch up on Chat. I just can't ignore it.

01:16:07
<transcript>: Only servers Postgres thing I know is Aurora. Yeah. Aurora service version one and two. Just have they have their own unique gaps. Each of them.

01:16:15
developmentrobot: supabase is postgres

01:16:19
<transcript>: My biggest scare of these imprisons that I will not be able to dig into the terminal and write something really complex than they do without Prisma. Yeah, that's I guess. Like if I have reservations about the current trends.

01:16:19
<transcript>: in web

01:16:21
<transcript>: In web. Devdev.

01:16:21
<transcript>: if we call

01:16:30
<transcript>: If we call the current trends like TrpC Plus Prisma, my reservations are like, what about Year two? What does that look like.

01:16:30
<transcript>: just

01:16:35
<transcript>: Just how maintainable is it? And I don't know the answers that we might play with that's downstream.

01:16:35
<transcript>: just like

01:16:37
<transcript>: Just like kind of better understand the tradeoff.

01:16:43
<transcript>: We just upgrade and downgrade our Postgres cluster as needed through Google Cloud at work.

01:16:47
<transcript>: That works.

01:16:50
log1400: the current trend on _twitter tech_*

01:16:51
<transcript>: I mean that that works that's vertical scaling and that works.

01:16:55
<transcript>: It's up to some point when it doesn't work, but it mostly works.

01:16:55
<transcript>: a roar

01:17:03
<transcript>: A roar surface is a pretty terrible right now. I wouldn't recommend it to anyone that clients come in where they were on a row service, and one of my good off of it.

01:17:06
<transcript>: Super Base is Postgres.

01:17:11
dyalicode: i guess because u are fun of aws services :)

01:17:14
<transcript>: Yes. Sorry. The current twin trend on Twitter. Tech. Just assume everything I say. I'm referring to tech. Twitter. Like.

01:17:14
<transcript>: i don't deal

01:17:17
blakegreendev: Aurora serverless. Great name, poor implementation lol

01:17:20
<transcript>: I don't deal with people in the real world. Aside from my clients and my client conversations are very different from my Twitter conversations.

01:17:26
<transcript>: So what else must have I'm gonna go ahead and add some nice to have.

01:17:26
<transcript>: because

01:17:28
developmentrobot: twitter tech = not real world... and I frequently forget that

01:17:30
<transcript>: Because there's one that comes to mind it'd be nice.

01:17:30
<transcript>: dynamo has a

01:17:31
goldenobserver: postgres via pivotal cloud foundry

01:17:41
<transcript>: Dynamo has a pretty poor like analytical workload picture. So if you want to do like a lap queries you want to like like a data warehouse where you want to.

01:17:49
<transcript>: Like Do Business intelligence on your database. That's where Dynamo is. A primary database breaks down and you need something else.

01:17:56
stroopwafel26: Here's something that was on HN a long time ago, I like the UX here https://easydb.io

01:17:58
<transcript>: There's a lot of different things people use. Realtime search is the other case. So a lot of people don't like Dynamo because they want to do realtime search and that's tough.

01:17:58
<transcript>: in dynamo

01:18:00
<transcript>: In. Dynamo.

01:18:02
<transcript>: Or like fulltech search.

01:18:11
<transcript>: So there's cases where you need other database offerings. But this is a hosted service, and Dynamo is just an implementation detail.

01:18:20
dyalicode: @blakegreendev the same thing about reactjs !

01:18:20
<transcript>: So in that sense we can use multiple database to accomplish this thing. It's like how Versel they don't just use.

01:18:20
<transcript>: one cd

01:18:25
madlep: dev twitter = HTDD - hot take driven development MaxLOL

01:18:26
<transcript>: One CDN they use multiple CDNS and they create their own it's their own thing.

01:18:26
<transcript>: and

01:18:35
<transcript>: And the implement implementation details don't matter to you as a consumer, it's just a great product and you can enjoy a great product and great developer experience.

01:18:35
<transcript>: so the same

01:18:38
<transcript>: So the same thing here we could use.

01:18:38
<transcript>: we could automate

01:18:41
<transcript>: We could automate taking all of a tenant's data.

01:18:41
<transcript>: and moving

01:18:42
<transcript>: And moving it into.

01:18:46
<transcript>: A data warehouse of some sort.

01:18:46
<transcript>: or

01:18:51
<transcript>: Or a data Lake or something where we can provide through the same API.

01:18:51
<transcript>: like

01:18:57
<transcript>: Like the same client thing runtime thing. They could interact with it in a.

01:18:57
<transcript>: analyt

01:19:00
<transcript>: Analytics capacity like doing.

01:19:00
<transcript>: those

01:19:03
<transcript>: Those kind of broader, more general, queries.

01:19:06
<transcript>: So nice to have would be.

01:19:09
<transcript>: Analytics.

01:19:15
<transcript>: Workload support. I don't know how to word that Anacle analytical workload.

01:19:20
<transcript>: Lap. See, people still talk about a lap? I don't know.

01:19:20
laytanl_: hey Adam, are you working on the dynamodb dx you were tweeting about?

01:19:23
<transcript>: So that's a nice to have.

01:19:28
<transcript>: I think migrations being automated would be a musthave.

01:19:37
<transcript>: Leighton. Hey, Adam, are you working on the DynamoDB? Dx you were tweeting about. Yeah, I'm just trying to.

01:19:37
<transcript>: i'm just trying

01:19:40
<transcript>: I'm just trying to map it out in my brain so I can just dismiss it.

01:19:52
<transcript>: Like I'm trying to decide if someone should build this. Not if I should build it, because I definitely should not. My problem is having too many things I want to do. I don't need to add new things to them.

01:19:52
<transcript>: in fact

01:19:58
<transcript>: In fact, this exercise is kind of like turning me off from the whole idea. So that's what I was hoping would come out of this.

01:20:00
<transcript>: Yeah.

01:20:00
<transcript>: i kind of thought

01:20:07
<transcript>: I kind of thought I wanted to, like, diagram out, like, actual API. Like, what would this thing look like.

01:20:19
laytanl_: To much to work on is very relatable

01:20:19
<transcript>: I think I'm far enough along that I've decided I don't want to do that. So lucky for you all and for me and my wife, my family's sake. I'm not gonna do this.

01:20:25
<transcript>: But let's finish at least this so must haves.

01:20:30
<transcript>: What are the other must have so to hide dynamic and its weaknesses.

01:20:38
<transcript>: I'm this is super general almost to the point.

01:20:50
<transcript>: And obvious to the point of like, why at it. But I think it's the problem with Dynamo is the developer experience. This would have to have a great developer experience, which is not a given.

01:20:54
<transcript>: When you're underlying technology is DynamoDB.

01:21:05
<transcript>: Is what people expect, right? Like web developers expect a certain developer experience today.

01:21:13
<transcript>: It must have it would have to be faster than.

01:21:13
<transcript>: the inc

01:21:18
<transcript>: The incumbents or why do it why if you're gonna lose SQL.

01:21:20
<transcript>: Why.

01:21:25
<transcript>: You. Why would you do that? Only if it's a lot faster.

01:21:29
<transcript>: A lot faster.

01:21:29
<transcript>: like

01:21:36
<transcript>: Like, I think this thing would be a benchmark King. I mean, Dynamo is a benchmark King. I think if you built this thing.

01:21:36
<transcript>: you could

01:21:38
<transcript>: You could run circles around.

01:21:59
<transcript>: You know the planet scales of the world under certain conditions like you'd have to like if you just take the basic Hello world examples of each. Sure, it's fast to query a table that has five records in it on MySQL like that's fast. But if you actually put real world like real app conditions in play, I think this thing would just run circles around.

01:22:02
<transcript>: Any of the existing offerings that are based on SQL Database database.

01:22:06
<transcript>: But the challenges.

01:22:06
<transcript>: the prismal

01:22:10
<transcript>: The Prismalike Runtime Library that is a really hard problem.

01:22:10
<transcript>: like dynamo

01:22:12
<transcript>: Like Dynamo.

01:22:12
<transcript>: structuring your data

01:22:14
<transcript>: Structuring your data? Oh, oh, nice to have.

01:22:17
<transcript>: Automatic.

01:22:20
<transcript>: Single tips.

01:22:25
<transcript>: Optimizations how cool if the thing could automatically.

01:22:35
<transcript>: Structure like parent child relationships in a way that could do single table queries fetch multiple types of entities that's the whole draw with single table design and Dynamo.

01:22:37
<transcript>: Is that it's super fast.

01:22:37
<transcript>: you can fetch

01:22:41
<transcript>: You can fetch multiple types of data in one query.

01:22:48
<transcript>: But it's it's hard to think about data in that way and to structure all your global secondary indexes and all that.

01:22:58
<transcript>: It's a hard problem, so to do it automatically, it'd be a really, really hard problem. Now I feel like I'm talking about stuff. Nobody here probably has the context to understand.

01:22:58
<transcript>: that's okay

01:23:01
<transcript>: That's okay. I think the point of this exercise is.

01:23:01
<transcript>: do we think

01:23:03
<transcript>: Do we think this thing should exist.

01:23:03
<transcript>: should someone

01:23:06
<transcript>: Should someone build it.

01:23:14
<transcript>: Yeah, that's the exercise here. I think we all know that there's still something missing in terms of database as a service.

01:23:24
<transcript>: I just saw your chat message.

01:23:32
<transcript>: Yeah great name poor exploitation. Agreed on a Roar serverless.

01:23:35
<transcript>: Welcome to Chat. Golden Observer.

01:23:35
<transcript>: postgres

01:23:39
<transcript>: Postgres via Pivotal Cloud Foundry.

01:23:39
<transcript>: pivotal

01:23:42
<transcript>: Pivotal cloud.

01:23:45
<transcript>: Cloud Foundry Postgres.

01:23:45
<transcript>: what is this

01:23:46
<transcript>: What is this.

01:23:49
<transcript>: Crunchy.

01:23:49
<transcript>: crunchy

01:23:50
<transcript>: Crunchy, Postgres.

01:23:56
<transcript>: Is this like a serverless.

01:23:56
<transcript>: serverless

01:23:59
<transcript>: Serverless Postgres offering. Is that what this is.

01:24:07
<transcript>: Here's something that's on hacker news a long time ago. I like the UX here. Okay, let's see.

01:24:07
<transcript>: we got easy dvd

01:24:08
<transcript>: We got easy DVD.

01:24:15
<transcript>: Bio. A one click database, no server required. I mean that is.

01:24:15
<transcript>: the

01:24:16
<transcript>: The.

01:24:19
<transcript>: Draw of serverless.

01:24:19
<transcript>: create a database

01:24:23
<transcript>: Create a database. Did you just create me one just like that? Sure did.

01:24:23
<transcript>: there's a token

01:24:25
<transcript>: There's a token. Uhoh.

01:24:25
<transcript>: well i guess

01:24:28
<transcript>: Well, I guess I don't feel bad as that little cuz. I don't even know. Do I own it.

01:24:37
<transcript>: Next 24 hours you can use this database as you please. After that you'll need to register for an account so anyone can use this. If you're watching this stream go for it.

01:24:40
<transcript>: Okay.

01:24:40
<transcript>: that was

01:24:45
<transcript>: That was very, very fast to create a database. I just clicked a button.

01:24:56
<transcript>: Hey, Adam. Are you working on the DynamoDB? Yeah, yeah. We talked about it. Too much to work on is very relatable, isn't it? We all have too much to work on. We just had so many options.

01:25:00
<transcript>: Okay. So must have.

01:25:00
<transcript>: these

01:25:09
<transcript>: These are the must have again lots of complexion in there like this was a very hard problem I don't even know how doable this problem is.

01:25:09
<transcript>: let's do this

01:25:18
<transcript>: Let's do this. I need to I think what I really need to map out to have further conversations about this with my friends. What I really need to map out is.

01:25:20
<transcript>: What would the.

01:25:20
<transcript>: surface

01:25:21
<transcript>: Surface area look like.

01:25:21
<transcript>: if i'm

01:25:23
<transcript>: If I'm interacting.

01:25:23
<transcript>: let's write

01:25:25
<transcript>: Let's write some pseudocode. Here.

01:25:28
<transcript>: If I'm interacting with this thing.

01:25:31
<transcript>: What would it look like.

01:25:31
<transcript>: so

01:25:33
<transcript>: So.

01:25:37
<transcript>: I'm.

01:25:37
<transcript>: sitting

01:25:44
<transcript>: Sitting pseudocode. It's probably gonna look a lot like TypeScript. Let's say we just had, and I'm not gonna do this like.

01:25:44
<transcript>: a

01:25:48
<transcript>: A prison schema. I'm just gonna do it as, like, TypeScript, types.

01:25:48
<transcript>: let's say we have

01:25:50
<transcript>: Let's say we have a.

01:25:53
<transcript>: Person.

01:25:56
<transcript>: Name.

01:25:56
<transcript>: and

01:25:59
<transcript>: And they have a.

01:26:01
<transcript>: I don't know.

01:26:02
<transcript>: Age.

01:26:04
<transcript>: And they had.

01:26:10
<transcript>: What.

01:26:10
<transcript>: what are other

01:26:13
<transcript>: What are other attributes of people.

01:26:16
<transcript>: Hi. I don't know. This is stuff.

01:26:20
<transcript>: Wait. Okay. But then also.

01:26:20
<transcript>: they might have

01:26:22
<transcript>: They might have parents.

01:26:22
<transcript>: or person

01:26:25
<transcript>: Or persons right.

01:26:32
<transcript>: So there's like a hierarchical kind of selfreferential relationship.

01:26:36
<transcript>: Person has parents.

01:26:40
<transcript>: And maybe it has children.

01:26:47
<transcript>: These are optional.

01:26:48
<transcript>: Parents.

01:26:55
<transcript>: Not optional. Okay, so let's say we had a person, and we were interacting with this thing.

01:27:00
<transcript>: This database service so constribute.

01:27:02
<transcript>: New.

01:27:09
<transcript>: Service.

01:27:19
stroopwafel26: OLAP is such a talking point with a lot of clients using AWS. Data teams who want access to the actual database, just setting up a read replica for them to use but that's not a great option so we're using all these pipelines and custom scripts to extract and transform the database for the team to use. It's awkward right now.

01:27:24
<transcript>: So this is our thing, our Prismalike library, and we're gonna interact with it sort of like a Prisma experience. But I want to map it to what would be happening in DynamoDB. What would the actual mechanisms here be.

01:27:24
<transcript>: so

01:27:26
<transcript>: So database.

01:27:28
<transcript>: databasens

01:27:28
<transcript>: databasens find

01:27:30
<transcript>: Databasens find I don't know.

01:27:33
<transcript>: Person of interest.

01:27:35
<transcript>: Db.

01:27:38
<transcript>: Persons.

01:27:38
<transcript>: find

01:27:39
<transcript>: Find.

01:27:43
<transcript>: P.

01:27:45
<transcript>: pff

01:27:46
<transcript>: Pff.

01:27:53
<transcript>: Okay.

01:27:58
<transcript>: Bear with me here. I'm really trying to get somewhere. I promise.

01:28:01
<transcript>: That doesn't mean we'll get there, but I really am trying.

01:28:07
<transcript>: So if we have this.

01:28:12
<transcript>: What is happening in Dynamo? How would our database have to be structured.

01:28:12
<transcript>: our

01:28:15
<transcript>: Our table in Dynamo, specifically.

01:28:17
<transcript>: So.

01:28:22
<transcript>: So here we're gonna model a table.

01:28:26
<transcript>: Dynamodb table.

01:28:36
<transcript>: At the end of this. This is not gonna be coherent. I promise this diagram will not be reused. You're not gonna, like, want to reference this? This is all just me. I'm this is therapy.

01:28:36
<transcript>: i'm getting this

01:28:43
<transcript>: I'm getting this out of my system. I literally dreamed about starting a startup last night that made this service. So I have to do this.

01:28:48
<transcript>: I have to do this or something bad could happen. Like I could try and create something that I shouldn't try and create.

01:28:53
<transcript>: Dynamodb table.

01:28:53
<transcript>: would look like

01:28:54
<transcript>: Would look like.

01:28:54
<transcript>: pk

01:28:57
<transcript>: Pk, and SK.

01:29:00
<transcript>: And.

01:29:02
<transcript>: Pk.

01:29:05
<transcript>: One.

01:29:08
<transcript>: Like some attributes name.

01:29:15
<transcript>: Enough at the period. Why are you doing this to me? Excellent. Row.

01:29:15
<transcript>: name

01:29:18
<transcript>: Name and age.

01:29:20
<transcript>: Okay. So.

01:29:28
<transcript>: This table for this tenant. So this is like, Imagine, I just signed up for this new database. We need a name for the.

01:29:32
<transcript>: What is it called? Someone named this new database service.

01:29:36
<transcript>: Super fast DB.

01:29:36
<transcript>: now what

01:29:42
stroopwafel26: AdamDB

01:29:43
<transcript>: Now what's a good name for it like something very ironic. Like something like very like startupy sounding.

01:29:43
<transcript>: not a real name

01:29:50
<transcript>: Not a real name, like a fake Adam DB. Okay, that works. If someone thinks it's something better, not that that's not great, Stroop. It's great.

01:29:50
<transcript>: but

01:29:54
<transcript>: But maybe we could do something that's less attached to me.

01:29:54
<transcript>: okay

01:29:57
<transcript>: Okay. So Adam DB.

01:29:57
<transcript>: this is

01:30:00
<transcript>: This is a service you just signed up for.

01:30:00
<transcript>: and

01:30:03
<transcript>: And your attendance of Adam DB.

01:30:03
<transcript>: you created

01:30:06
<transcript>: You created your first database and in it.

01:30:10
<transcript>: So that the thing that is interesting is.

01:30:13
<transcript>: You're kind of like driving.

01:30:16
cedpoilly: Dynamite DB ?

01:30:25
<transcript>: database operations from your runtime from your app is that bad is there a reason people don't do that feel like people don't do that they typically would

01:30:30
<transcript>: Create like their schema and their database.

01:30:30
<transcript>: and then they would

01:30:50
<transcript>: And then they would use Prisma to interact with it. Right or no. Does Prisma actually. Okay. See, I've been had I've been found out. I don't use Prisma. I don't use TRPC or Prisma. I'd like to. I'd like to play with them so I could better understand that world. But do you create a schema in Prisma? And then it creates your database schema for you.

01:30:59
<transcript>: Someone tell me that Dynamite DB I love it, I love it said Flowy, Dynamite kind of like Dynamo, but it's Dynamite.

01:31:10
<transcript>: Someone tell me, Does Prisma actually create your database? Schema? Is it doing what I'm talking about doing here.

01:31:15
<transcript>: Wow, triple equals are really bad. Next skeletroph.

01:31:15
<transcript>: does not look great

01:31:16
<transcript>: Does not look great. There.

01:31:21
<transcript>: I need to know, I need to know.

01:31:24
<transcript>: More than I know to have this conversation.

01:31:27
<transcript>: So.

01:31:27
<transcript>: at least

01:31:33
datasnok1: prisma allows you to generate a schema, yes

01:31:33
<transcript>: At least for this case, I don't know how Prism works, but at least for this case, you would sort of be like.

01:31:36
madlep: "HotTakeDB"

01:31:36
<transcript>: Interacting with.

01:31:36
<transcript>: your

01:31:42
<transcript>: Your host. So I know, like in Planet scale when we pull that planets together the other day.

01:31:42
<transcript>: hot

01:31:44
<transcript>: Hot take BB.

01:31:49
<transcript>: When we pulled up it. Yeah, it allows you to generate. Okay, so, thank you. Data.

01:31:53
<transcript>: What does that look? Like, though I'm curious. Like.

01:31:53
<transcript>: so we've

01:31:59
<transcript>: So we've made our database and planet scale, and we actually went in here, Where's the console.

01:32:02
<transcript>: Brand.

01:32:05
<transcript>: Branches.

01:32:05
<transcript>: like we

01:32:08
<transcript>: Like we actually went into the console and we wrote.

01:32:10
<transcript>: Like.

01:32:17
<transcript>: On table.

01:32:20
<transcript>: Select all.

01:32:21
<transcript>: From.

01:32:25
<transcript>: People. What was it? No product.

01:32:25
<transcript>: yeah

01:32:31
<transcript>: Yeah. So we like made these schema definitions here in the console.

01:32:31
<transcript>: you would

01:32:35
<transcript>: You would do that typically into some SQL scripts and your repo or something.

01:32:35
<transcript>: but

01:32:47
<transcript>: But it sounds like Prisma. Maybe you drive it from Prisma. I guess the question is Prisma being like a runtime or M. What is the interaction do you use like a prismacy? All I need a CLI. Right.

01:32:53
<transcript>: I need a CLI for doing like.

01:32:54
datasnok1: yeah you use a prisma cli

01:33:03
<transcript>: Operations plan, right? Yeah. Yeah. Planis. Go has the CLI. Yeah. You use a prison CLI. Okay. So I'm better understanding how this would fit.

01:33:03
<transcript>: so

01:33:08
<transcript>: So the pieces of this puzzle are like Prisma. Like Runtime library.

01:33:10
<transcript>: Cli.

01:33:12
<transcript>: For.

01:33:22
<transcript>: Just gonna say CLI. It's for a lot of things. It's for, like, updating.

01:33:22
<transcript>: your

01:33:23
<transcript>: Your.

01:33:23
<transcript>: resources

01:33:28
<transcript>: Resources that are ultimately behind this hosted service in the cloud.

01:33:32
<transcript>: So let's say you.

01:33:32
<transcript>: you write a bunch

01:33:35
<transcript>: You write a bunch of TypeScript. Okay. You may.

01:33:38
<transcript>: And then you do like.

01:33:41
<transcript>: Down here.

01:33:45
<transcript>: After you do you make some changes to your code you would do like.

01:33:50
<transcript>: That look like a CLI. Like a command pipe prompt you would do.

01:33:50
<transcript>: like

01:33:51
<transcript>: Like.

01:33:51
<transcript>: dynamic

01:33:52
<transcript>: Dynamic.

01:33:55
<transcript>: Or something. Right.

01:33:59
<transcript>: And I think Plantscale does it with branching like this.

01:33:59
<transcript>: maybe

01:34:09
<transcript>: Maybe you have like a branch that you're working on, and that's how you keep your changes isolated from the rest of your team. But ultimately you're running some CLI thing.

01:34:14
<transcript>: Run feel like a man to update.

01:34:17
<transcript>: Update.

01:34:20
<transcript>: Underlying DB.

01:34:20
<transcript>: so

01:34:24
<transcript>: So that Dynamite sink would ultimately be.

01:34:28
<transcript>: Stored metadata, I guess.

01:34:28
<transcript>: it'd be

01:34:32
<transcript>: It'd be like storing metadata about your.

01:34:32
<transcript>: your

01:34:39
laytanl_: this sounds complex

01:34:39
stroopwafel26: maybe you'd wanna connect a git repo to it, to automate migrations that you need to "LGTM"

01:34:42
<transcript>: Your tenant, your database for your tenant, like within this SAF. I'm thinking from the SAS perspective, we'd have to store information about your schema.

01:34:42
<transcript>: so that we

01:34:45
laytanl_: see you in 5 years

01:34:47
<transcript>: So that we can make decisions in terms of migrations, in terms of.

01:34:47
<transcript>: how

01:34:52
<transcript>: How we store these parentchild relationships. So like this particular.

01:34:52
<transcript>: we'd have

01:34:56
<transcript>: We'd have some like ul ID for the.

01:34:56
<transcript>: primary

01:35:02
<transcript>: Primary key maybe the sort of period so they drive me crazy.

01:35:05
<transcript>: The sort key would maybe be like.

01:35:05
<transcript>: some

01:35:07
<transcript>: Some.

01:35:09
<transcript>: Iso date.

01:35:19
<transcript>: And then DSI one PK. This is where we would have to manage our relationships. So for person atom.

01:35:21
<transcript>: 36.

01:35:21
<transcript>: thirty

01:35:23
<transcript>: 36.

01:35:27
<transcript>: We would have like a Global secondary index.

01:35:27
<transcript>: for storing

01:35:28
<transcript>: For storing.

01:35:35
<transcript>: My relationship to other persons, right.

01:35:35
<transcript>: so this one

01:35:39
<transcript>: So this one might be like GSI, one PK.

01:35:39
<transcript>: might

01:35:41
<transcript>: Might be.

01:35:44
<transcript>: We might use that for your.

01:35:44
<transcript>: parent

01:35:46
<transcript>: Parents.

01:35:52
<transcript>: Thanks for the follow. Double.

01:35:53
<transcript>: I appreciate that.

01:36:00
<transcript>: This sounds complex, yet it does. There's a lot of moving pieces. This is why I said at the beginning, I said, this is not like.

01:36:00
<transcript>: indie sas

01:36:03
<transcript>: Indie SAS idea. This is like you'd have to raise.

01:36:12
<transcript>: And you'd have to like actually hire probably unless you're Jason there and you're just like going to go hard for a year and turn off your life.

01:36:30
<transcript>: Yeah. This is a this is like a big undertaking, and I'm still it's not clear to me that it's worth it. It's definitely not worth it for me to build it. I'm just not gonna do that in this season life, but I'm trying to figure out, is it clear? Is there a clear value proposition here for anyone to build this thing.

01:36:34
<transcript>: Again just to refresher this all started because.

01:36:34
<transcript>: it

01:36:42
<transcript>: It just bothers me that we don't really even use SQL. I guess it sounds like some people do, even with their Prism or M or whatever.

01:36:51
<transcript>: But that we're using SQL based databases and then abstracting away the sequel. That just that fact bothers me. The fact that Prisma gets so much usage.

01:36:51
<transcript>: and

01:36:56
<transcript>: And the whole strength of sequel is SQL.

01:36:56
<transcript>: and the

01:36:58
<transcript>: And the flexibility it brings.

01:36:58
<transcript>: why not use

01:37:05
neochromer: @adamelmore uhh, don't let my DB Admin friend hear you

01:37:12
<transcript>: Why not use a database that's predictably performant under the hood? If we're just going to use RMS, could we make a good developer experience on top of DynamoDB? That's the whole question here. So we've got Dynamite DB. So our fictitious.

01:37:12
<transcript>: database

01:37:15
<transcript>: Database as a Service SAS company.

01:37:15
<transcript>: we're trying to figure

01:37:18
<transcript>: We're trying to figure out what would the pieces be.

01:37:28
<transcript>: Shoulda had DAX on I should have had DAX on the should have been guest stream. He would be way better at thinking about this than I am. I'm not much of a thinker. Much more of a doer.

01:37:33
<transcript>: Gsi one PK so this might be like the.

01:37:36
<transcript>: Uly.

01:37:36
<transcript>: ulyd

01:37:38
<transcript>: Ulyd of parent.

01:37:38
<transcript>: this

01:37:40
<transcript>: This is getting this is getting bad.

01:37:43
<transcript>: It's unwieldy.

01:37:46
<transcript>: Okay.

01:37:49
<transcript>: Something like this.

01:38:05
<transcript>: What I'm really trying to think about is or what I'm trying to get to. So then I'm gonna make up some we're gonna put some real ideas here.

01:38:13
<transcript>: 123-45-1246 because they're U lids so they be in order, right.

01:38:17
<transcript>: Some date. Okay.

01:38:20
<transcript>: That's lined up.

01:38:22
<transcript>: And then this would be like.

01:38:25
<transcript>: Here would be.

01:38:29
<transcript>: 121-2345.

01:38:31
<transcript>: Six.

01:38:31
<transcript>: so maybe

01:38:34
<transcript>: So maybe instead of parents, it'd be like.

01:38:36
<transcript>: Mother.

01:38:39
<transcript>: Father.

01:38:46
<transcript>: The GSI one we would store maybe the mother.

01:38:55
<transcript>: I'm really thinking through this way too hard for something. I'm definitely not gonna build and I don't know if anyone else should build, but I'm gonna keep going.

01:38:55
<transcript>: so

01:38:58
<transcript>: So one to be for six.

01:39:01
<transcript>: Oh, that just looks bad.

01:39:01
<transcript>: but you get

01:39:03
<transcript>: But you get the idea.

01:39:06
<transcript>: I guess I could have just done one and two.

01:39:09
<transcript>: And.

01:39:15
<transcript>: Okay.

01:39:15
<transcript>: so

01:39:18
<transcript>: So what I'm really trying to figure out is.

01:39:18
<transcript>: at what

01:39:21
<transcript>: At what point would.

01:39:21
<transcript>: a dyna

01:39:24
<transcript>: A Dynamite sync operation here with the CLI.

01:39:27
<transcript>: At what point would.

01:39:27
<transcript>: that get

01:39:32
<transcript>: That get really hard if you're doing this as a managed service.

01:39:37
<transcript>: Because you need to like or maybe there's a Dynamite migrate.

01:39:41
<transcript>: Like there's a micro.

01:39:45
<transcript>: Operation that's going to actually.

01:39:50
<transcript>: Move some data around it's gonna maybe like restructure.

01:39:56
<transcript>: Your GSIS When I thought about this last night, I thought about how.

01:40:16
<transcript>: If you're really gonna do this, it get expensive. The DynamoDB bill for this startup would be getting expensive. Could you even charge enough to like, what are the economics of it? And then I thought, Well, you know, it would be awesome. Is if you did it all in one table, single table for all of these tenets. And then you could optimize costs.

01:40:16
<transcript>: on that

01:40:18
<transcript>: On that one table.

01:40:18
<transcript>: to the

01:40:20
<transcript>: To the.

01:40:29
<transcript>: Degree. Right. You could like provision that concurrency precisely. And you can do all these things to make that is affordable as possible. And then you're selling.

01:40:32
<transcript>: You're up charging on top of that usage.

01:40:34
<transcript>: But how hard would that be.

01:40:34
<transcript>: so

01:40:46
<transcript>: So imagine a single Dynamo table where you've got like Tingas eyes or something. Or what is the Max 20? We've got all 20 GSI's eyes. People are doing transactions. Maybe you've got multiregion.

01:40:46
<transcript>: it's nice

01:40:48
<transcript>: It's nice to have.

01:40:53
<transcript>: Multi region.

01:40:53
<transcript>: global

01:40:54
stroopwafel26: and then someone screws up a policy :P

01:41:01
<transcript>: Global tables. This how expensive that could get. But if you could do it all in one table, you could really optimize. This costs, right.

01:41:06
<transcript>: It'd just be such hard problem now like when somebody wants a new table.

01:41:14
<transcript>: Or they want to completely change an existing table. You're like just copying data.

01:41:14
<transcript>: and maybe

01:41:24
<transcript>: And maybe that's the fastest thing. I don't know. Copying the data into the table in a different structure. Okay, now I'm just getting I'm getting way ahead of myself. I shouldn't build this. No one should build this. I don't think.

01:41:27
<transcript>: Should we be done? Let's come over here.

01:41:33
<transcript>: And then someone screws up a policy. Yeah. Tend in isolation would be difficult.

01:41:42
<transcript>: Maybe you'd want to connect a get repo to it to automate migrations that you need to look good to me. Yeah. Maybe.

01:41:45
<transcript>: See you in five years.

01:41:51
<transcript>: Yeah, it'd be a hard thing to build. I say that there is a startup.

01:41:56
<transcript>: Hang on, I'm gonna find the name. There is a startup that's due.

01:41:58
<transcript>: Some of this hard work.

01:41:58
<transcript>: at least that

01:42:02
<transcript>: At least that was the plan. Last I heard hang on.

01:42:02
<transcript>: the startup

01:42:05
<transcript>: The startup is graph base.

01:42:05
<transcript>: i'll pull it up

01:42:08
<transcript>: I'll pull it up here on will flip your website.

01:42:10
<transcript>: Graph base.

01:42:14
<transcript>: Is doing part of this, so they're like.

01:42:14
<transcript>: graphq

01:42:17
<transcript>: Graphql API as a service.

01:42:17
<transcript>: sort of a

01:42:24
<transcript>: Sort of a sync, but it's all rust and at the edge, so it checks all the cool boxes.

01:42:30
<transcript>: They're building this like from scratch, managed.

01:42:35
<transcript>: Graphql API service. You just basically define a schema.

01:42:35
<transcript>: and they do

01:42:40
<transcript>: And they do everything. And they use DynamoDB under the hood, at least for now.

01:42:40
<transcript>: there's talk of

01:42:59
<transcript>: There's talk of maybe he'll move to something else, but he's using DynamoDB and some of these ideas he mentioned on a call like he talked about doing auto single table optimizations to, like, speed up queries. It's just I think there's more than more than a me. It's not just me. There's more than a me thinking about how do we.

01:42:59
<transcript>: trick

01:43:03
<transcript>: Trick the web Dev community into using Dynamo and realizing how awesome it is.

01:43:03
<transcript>: that

01:43:12
<transcript>: That's ultimately where I'm headed. I'm just trying to figure out, how do I make people use DynamoDB when they don't even know they're using DynamoDB so they can get all the advantage.

01:43:12
<transcript>: because

01:43:15
<transcript>: Because again you bring up Dynamo.

01:43:15
<transcript>: and they're like

01:43:28
<transcript>: And they're like, first, what is dinosaur you're like, oh, it's a no sequel database. And they're like, stop right there. Stop, no sequel. I'm sorry, I don't do no sequel because MongoDB in 2014 was really bad and I don't want to hear about it.

01:43:28
<transcript>: and

01:43:32
<transcript>: And that's the first thing. And if you get past that.

01:43:32
<transcript>: the next object

01:43:45
<transcript>: The next objection is, well, I'm not Amazon. I don't need a date. I don't need a daybase that goes that big, that scales that. Well, not Amazon's. It's somebody just put the cowboy head on me. That's gonna make this really interesting, I guess.

01:43:45
fragaverage: I think that's less of an issue now no? With Google buying Firebase

01:43:47
<transcript>: Okay.

01:43:47
<transcript>: i think

01:43:51
<transcript>: I think that's less of an issue now, though, with Google buying Firebase.

01:43:51
<transcript>: you're

01:43:54
<transcript>: You're saying less like people don't have those.

01:43:54
<transcript>: complaints about

01:43:55
laytanl_: SQL supremacy

01:43:58
<transcript>: Complaints about no sequel? Maybe yeah? Maybe I'm I could be out of touch.

01:44:03
fragaverage: the NoSQL argument yeah

01:44:03
<transcript>: I still get it sometimes I still see a.

01:44:03
<transcript>: on twitter

01:44:05
<transcript>: On Twitter. I still see sometimes.

01:44:05
<transcript>: where people

01:44:14
<transcript>: Where people are against those equal. But it probably is less than it was a few years ago. That's a good call, dummy. For real. Thank you for the follow.

01:44:16
<transcript>: Okay.

01:44:26
domi4real: is sql objectively the best database for every type of project?

01:44:27
<transcript>: So I think I'm done with this. I think I've convinced myself just that diagramming experience was enough that I'm kind of off this whole idea. I just don't think I don't think I even want to think about it anymore.

01:44:36
<transcript>: I was gonna get back to my friend DAX. And, like, explain more of what my thoughts were. And that's why I was kind of doing all this this morning, just trying to, like, form my thoughts.

01:44:36
<transcript>: but it just sounds

01:44:41
<transcript>: But it just sounds like a lot you're talking about, like multiple.

01:44:41
<transcript>: vector

01:44:42
datasnok1: @domi4real no

01:44:51
<transcript>: Vectors of development, multiple touch points, a CLI, the hosted service so you have to have like a web portal for managing all the tenant stuff.

01:44:51
<transcript>: then you got to have

01:44:53
valtior123: @domi4real sql is not a database it¬¥s a language

01:44:59
stroopwafel26: Diagramming sounds like a great idea to get ideas out of your system. I've been writing in ideas.txt for many years to put myself off building things MaxLOL

01:45:01
<transcript>: Then you got to have the runtime like Orm thing. The operations for this thing would be a nightmare. All the orchestration, all. It's a lot of work. It's just a ton.

01:45:03
<transcript>: And I want to do it.

01:45:03
<transcript>: and i don't

01:45:08
<transcript>: And I don't recommend anyone does it? I mean, if you really want to just reach out, let me know.

01:45:16
<transcript>: Is sequel objectively the best database for every type of project. Well SQL is a lot of thing and there's a lot of different databases.

01:45:22
<transcript>: It is not objectively the best for every type of product mail. I don't believe so.

01:45:34
jaystation3x: what did I miss?!?!

01:45:35
<transcript>: I mean to say what I mean is I don't think sequel based databases are objectively the best database for every type project, but welcome to Chat Domi. Thanks for the follow and for joining us in chat.

01:45:41
<transcript>: Also, thank you for joining Chat Ville. Valtior.

01:45:41
<transcript>: well

01:45:44
<transcript>: Well, I kind of my voice cracked. There.

01:45:47
<transcript>: Welcome to my chat.

01:45:54
<transcript>: Diagram. Sounds like a great idea to get ideas out of your system. I've been riding in ideas. Text. Yeah. For many years. Exactly.

01:45:54
<transcript>: jay you

01:45:56
<transcript>: Jay, you missed everything.

01:45:56
<transcript>: that's what you meant

01:45:57
<transcript>: That's what you meant.

01:45:57
<transcript>: when you come on

01:45:58
valtior123: rhkd

01:46:00
niftynate80: @jaystation3x everything

01:46:01
valtior123: thks*

01:46:01
<transcript>: When you come on Jay J. Stations here.

01:46:02
datasnok1: some types of data structures are hard to represent and query efficiently using SQL

01:46:03
jenswoeste: hey Adam - hows it going?

01:46:04
<transcript>: Pahooho. Thank you for the follow.

01:46:12
<transcript>: You missed everything sometimes of data structures are hard to represent and query efficiently using SQL.

01:46:12
<transcript>: it's

01:46:16
<transcript>: It's going well, Yens, welcome to yens.

01:46:16
<transcript>: it's going

01:46:18
pahuho_: you're welcome adam :)

01:46:21
<transcript>: It's going well. We're gonna do some real stuff. We're gonna someone asked earlier.

01:46:23
devopstty: subtitles cool))

01:46:26
<transcript>: Someone joined the street. I think it was the first time chat and they probably maybe are still here.

01:46:28
<transcript>: They asked.

01:46:28
<transcript>: are we gonna do

01:46:43
<transcript>: Are we gonna do some live coding? Or can we watch that was can we watch some live coding? And I just thought this funny because, like, I'd been talking for 15 minutes, and they're like, you just gonna do this all time, because I'm gonna bounce. Can I watch you do something? So I let you code. We're gonna code real soon.

01:46:46
<transcript>: Welcome to Chat as well. Pahooho.

01:46:46
<transcript>: subtitles

01:46:52
<transcript>: Subtitles. Yeah, I've got captions going. We've got closed captions through an OBS plugin.

01:46:54
<transcript>: We sure do.

01:46:54
<transcript>: okay

01:46:59
<transcript>: Okay. I got it on my system. Thank you all. That was therapy for me.

01:46:59
<transcript>: i

01:47:07
cedpoilly: Go to go. Very interesting session @adamelmore .Bye everyone üëã

01:47:10
<transcript>: I needed to diagram some stuff. That diagram will probably just die, and I probably will never think about this again. But that's good because I need fewer projects, not more projects.

01:47:10
<transcript>: jay

01:47:17
<transcript>: Jay, earlier today and yesterday on Twitter. I was talking about how I need.

01:47:17
<transcript>: someone to tell me

01:47:34
<transcript>: Someone to tell me what to do. I have, like, five things that I enjoy, that I'll have great prospects, but I think I'm pretty good at that. I could be swimming my time on, and I don't know which one to choose, and I kind of wish I had a boss. And Jay, could you be my boss, please? And just tell me what to do.

01:47:37
<transcript>: Gotta go see a said quality.

01:47:37
<transcript>: very

01:47:40
<transcript>: Very interesting session. I'll take it.

01:47:41
jaystation3x: sure thing

01:47:52
<transcript>: Remember, this is not steady time stream. I will take your compliment. I'll take them. Throw them my way. Sure thing, Jay. You get on that. You let me know what we're gonna do, what we're gonna.

01:48:04
<transcript>: Focus our efforts on I have some ideas. I'll share them with you all after the break, I'm gonna go get some Dandy blend. We'll be back with the Larabar. All that stuff. I'll be back shortly.

01:48:24
pahuho_: holy moly what a nice keyboard

01:48:28
jenswoeste: that setup is mindblowing

01:48:54
jenswoeste: I bet Adam used a laser guided tool to align everything LUL

01:49:01
stroopwafel26: setup goals, except for the trackpad

01:49:05
pahuho_: unfortunately those things dont exist in brazil and its too expensive to bring one here :(

01:49:52
fushigi87: mouse pad is a bit off...

01:50:04
jenswoeste: I agree @fushigi87

01:56:15
<transcript>: Alright.

01:56:17
<transcript>: Right.

01:56:17
davur_: i see movement

01:56:21
<transcript>: Jay, do you have answers.

01:56:26
<transcript>: Do you have all the answers? You're gonna be in my boss and tell me what to do.

01:56:26
<transcript>: i

01:56:29
<transcript>: I should tell you first what my wife said I should do.

01:56:29
<transcript>: she

01:56:33
<transcript>: She is the original boss. She's a OG boss of me.

01:56:38
<transcript>: And I don't mean that in a negative way.

01:56:38
<transcript>: i don't mean

01:56:40
zappy_oc: Damn I thought the desk POV was a recorded gif or video

01:56:42
<transcript>: I don't mean that in like a the old balling chain. Not like that.

01:56:44
<transcript>: She's the best.

01:56:51
<transcript>: Nozzepie, that is actually a third camera that I set up because I'm I have a problem.

01:56:56
<transcript>: Yeah. So there's a camera pointing at my keyboard at all times.

01:56:56
<transcript>: and

01:56:59
<transcript>: And brakes. You can see it.

01:57:09
<transcript>: Oh, I ordered two keyboards last week. What is my problem? What is my problem? I ordered the Advantage 360. And because prime is the coolest and.

01:57:09
<transcript>: and it's

01:57:14
<transcript>: And it's like there's an element of like when something's hard to get.

01:57:14
<transcript>: i want it

01:57:15
<transcript>: I want it.

01:57:15
<transcript>: i

01:57:17
zappy_oc: It looks really cool

01:57:20
<transcript>: I don't even like slick keyboards. I really don't aesthetically. They just don't do it for me.

01:57:20
<transcript>: it looks

01:57:34
<transcript>: It looks really cool. I mean, I think as far as split keyboards go, it does look really cool. I like the idea of all those keys on my thumb. Like that sounds fun. But I just realistically, like I can't see my self using it. But when there's like.

01:57:34
<transcript>: a store

01:57:41
<transcript>: A store outage like you can't get on the store and they're doing a preorder, and it's like you have to refresh the page over and over and over. That's totally my thing.

01:57:52
<transcript>: That's the kind of thing that I get really into. So I got one of those. I got a Kiracorder, which I'm definitely not going to use, but I thought like, that one is more. So we homeschool my kids.

01:57:52
<transcript>: my two boys

01:57:56
<transcript>: My two boys. Well, one's old enough for home school. The other one's still a baby.

01:57:56
<transcript>: but

01:57:58
otifex: which kb?

01:58:06
sikmofo: why do you homeschool?

01:58:07
<transcript>: But my seven year old, I'm definitely gonna teach him how to type on that thing. Like it's the Caric order. Otifx. Welcome to Chat, by the way. Thank you for the follow.

01:58:07
<transcript>: muhit

01:58:11
<transcript>: Muhiti muhiti Muhi muhitan.

01:58:21
<transcript>: Thanks for the follow, Stefan. I don't know if I saw that one. I might have been a break and Pahoohoo Fahooho and Black Spy? Thank you all for the follows.

01:58:26
pahuho_: you are welcome (2)

01:58:27
<transcript>: Okay, now I gotta get on track here. So sigmove hood is as why do you homeschool that's a whole nother conversation.

01:58:30
pahuho_: hihi

01:58:31
<transcript>: I guess like we do a lot of things with our kids.

01:58:38
stroopwafel26: Watch your kid be really really fast on the characorder in no-time

01:58:40
<transcript>: Maybe atypically. We're just kind of an atypical family. I don't know. I'm not normal. Okay, so first of all, not normal.

01:58:40
<transcript>: second of all

01:58:41
<transcript>: Second of all.

01:58:41
<transcript>: my

01:58:58
<transcript>: My son, I don't think you would do great in a public school setting or a private school setting with a bunch of other kids. Our youngest might. And we're not opposed. We're not like we are going to home school. All of our kids. We have to. We're not like that. We're open to whatever the kid prefers.

01:58:58
<transcript>: our kid

01:59:08
<transcript>: Our kid, my oldest ASA. He prefers homeschool. And I think it's probably better for him. He's got ADHD. And he's I think like, he's brilliant.

01:59:08
<transcript>: like

01:59:19
<transcript>: Like boy blows my mind some of the things his brain can do he remembers everything he's ever heard I swear to you, he could like when he was four. We'd read in books.

01:59:19
<transcript>: and he could

01:59:30
jenswoeste: how old is he?

01:59:35
<transcript>: And he could, like, you could stop reading. And he would keep the sentence going. He couldn't read. He just remembered every single word from every book we'd ever read. Him like he's got a brain that blows my mind. It's a steel trap. But I don't think in a normal, traditional school setting, he would maybe thrive. So.

01:59:35
<transcript>: sorry

01:59:40
<transcript>: Sorry. Where was that? I got on homeschool. Somehow. Homeschool.

01:59:46
<transcript>: Oh, yeah. I'm gonna teach him how to use the Caric order because it's like this crazy, weird keyboard where you don't even move your fingers.

01:59:46
<transcript>: it's like the closest

01:59:56
<transcript>: It's like the closest thing to a neural link. I think we've got right now. And if he's gonna learn typing, why not learn on that thing? That's like 200 words a minute? Okay, anyway.

01:59:59
<transcript>: He's seven. Asa. Is seven.

02:00:11
<transcript>: Watch your kid be really fast on the care recorder in no time. Exactly. It's the first thing he's gonna learn on. He's gonna learn some stupid quirky keyboard like mine. He's gonna learn on this thing that Marie's your mind.

02:00:11
<transcript>: thank you for the follow

02:00:12
<transcript>: Thank you for the Follows. Fred.

02:00:12
<transcript>: and pete tone

02:00:13
<transcript>: And Pete tone.

02:00:13
<transcript>: and

02:00:18
<transcript>: And I already said Black Spy, but thank you again for the following.

02:00:18
<transcript>: okay

02:00:28
<transcript>: Okay. So what we're gonna do, Jay? I was gonna tell you sorry I asked you to tell me this, dude. And then I said, but first you should hear what Maw said. And then I got distracted. I talked about a lot of things, but we're back.

02:00:28
<transcript>: we're

02:00:33
<transcript>: We're back. Hi, Bhooho, we are back.

02:00:33
<transcript>: to

02:00:34
stroopwafel26: he'll laugh out your stupid qwerty keyboard that only boomers use

02:00:35
stroopwafel26: j/k

02:00:39
<transcript>: To what I should do with my life. We're still trying to figure out what I should do, what it should be when I grow up.

02:00:39
<transcript>: is the

02:00:39
stroopwafel26: at your*

02:00:41
<transcript>: Is the way I like to put it.

02:00:44
<transcript>: Yes.

02:00:51
<transcript>: My wife thinks and I agree that I'm probably I'm not.

02:00:51
<transcript>: let's start with

02:00:57
<transcript>: Let's start with what I am. I think I am someone who wants to teach. I think I want.

02:00:59
<transcript>: To educate.

02:00:59
<transcript>: and

02:01:05
<transcript>: And as much as I think I like everything else, I do, I think that's the thing that checks the most boxes.

02:01:14
jenswoeste: he sounds a lot like my oldest. I can recognise a lot of what you said. It was the same here. Then came "the teens". The biggest challenge is the social skill set tbh.

02:01:15
<transcript>: It is a thing I really enjoy. And since I was young, before I was ever into computers, I wanted to be a teacher. I want to be a College Professor. Randomly. I don't know why.

02:01:15
<transcript>: it's kind of

02:01:19
<transcript>: It's kind of random. But that's what I wanted to be. I wanted to be a College Professor.

02:01:19
<transcript>: and

02:01:20
<transcript>: And.

02:01:20
<transcript>: i think as

02:01:22
<transcript>: I think as I got into technology.

02:01:22
<transcript>: i

02:01:35
<transcript>: I got obsessed with building and product and all these fun things that we get to do at computers. And I kind of lost some of that. But I think I've always any time I've had a chance in my career to teach, I think I really enjoy it.

02:01:35
<transcript>: so

02:01:38
<transcript>: So there's that there's.

02:01:38
<transcript>: the

02:01:42
niftynate80: Teaching is numero uno

02:01:45
<transcript>: The impact side of it. I just think teaching has more potential to impact more people.

02:01:45
<transcript>: than

02:01:46
<transcript>: Than.

02:01:58
<transcript>: Like working for clients, doing consulting work. Just feels I feel dead inside lately. When I do consulting, I just it feels like I'm helping this one client, and that's great. I want to help them.

02:01:58
<transcript>: they're paying me

02:02:06
<transcript>: They're paying me for my time? But it just feels like they kind of dies there and there's nothing there's no trail, lasting impact.

02:02:06
<transcript>: whereas

02:02:13
<transcript>: Whereas teaching if I could teach thousands of students over the next decade.

02:02:13
<transcript>: that just feel

02:02:19
<transcript>: That just feels like I'm impacting a lot more people. I'm helping a lot more people along the way.

02:02:38
<transcript>: And then I think I could be good at it. So all I'm the kind of person I think anybody could be really good at anything if they spend the time. I don't know if that's like Bindi bunked or something or that's just accepted fact. But I definitely think I could be great at teaching just because I think I could be great at whatever I apply myself to.

02:02:57
<transcript>: So it checks all three of those boxes. Whereas as I think about like building a SAS application, so building public or any other any number of SAS applications I've started to build in my career. I think I really enjoy the building a product part I don't enjoy.

02:02:57
<transcript>: i don't

02:03:14
<transcript>: I don't think I would enjoy a lot of the other trappings of SAS. So the marketing and all the other stuff you have to do, just support and maintenance and all the things to grow assass. I think maybe that's not for me, and I've been trying to trick myself into thinking it is, but maybe it's not.

02:03:20
stroopwafel26: What would teaching look like for you? Creating online courses?

02:03:28
<transcript>: Yeah. And then the other things I'm doing, so, like, straight is here to stay. I'm just never gonna stop streaming. It's just my favorite. I've loved this experience so much.

02:03:41
<transcript>: Yeah. So you're stuck with me if you keep showing up because you feel guilty. Like I'm gonna notice you're not here, don't. It's okay. You don't have to show. If you need to get some stuff done, take your time. It's fine, but I'm gonna keep streaming.

02:04:01
<transcript>: But I did start thinking about, should I make YouTube videos? I like reflexively. I don't know if it's just streaming or what, but I started, like, planning out my first YouTube videos because I guess that's just what you do when you stream or when you make content of any kind. You eventually create a YouTube channel. And then I ask myself, like, Why am I doing this? Why do I really, why am I creating YouTube videos.

02:04:01
<transcript>: and

02:04:12
davur_: man I'm here BECAUSE I've got other shit to do... and this is what my brain wants instead

02:04:13
<transcript>: And the answer that I came to because at first it was like, Am I just trying to, like, grow a following or something stupid? Because I don't care about any of that stuff. I really genuinely don't. I just don't think it gets me anything in the long run that I really want.

02:04:18
<transcript>: But when I really explore it, I don't think I want to make YouTube videos because I want to grow.

02:04:18
<transcript>: the gamification

02:04:39
<transcript>: The gamification of it like, I want to get a big number of subscribers. I don't think that's it. I think it's that I'm really curious what I enjoy long for Longform video content creation. Like what I enjoy the creative elements of creating YouTube videos. I think I would and I want to try it. I just need to I need to know if I would like it or not. So I'm gonna start some YouTube videos.

02:04:39
<transcript>: just

02:04:40
<transcript>: Just to explore it.

02:04:40
<transcript>: and

02:04:44
<transcript>: And then I talked about earlier the podcast. Okay, Jay, what should I do.

02:04:44
<transcript>: did you have

02:04:47
<transcript>: Did you have any answers yet? I'm gonna read some chat.

02:05:04
<transcript>: Sounds like my oldest. I can recognize a lot of what you said. Okay, same here. Then came the teens because challenges of social skill set. Yeah. So, Yin's, what we if we didn't live on the street, we live on, it'd be much harder for us to keep our kid out of school.

02:05:04
<transcript>: for

02:05:06
sikmofo: we dont need more thought leader click bait clowns, really

02:05:09
<transcript>: For the social element. We live on a street though with like a dozen.

02:05:16
<transcript>: Out of ten to twelve kids that are around our kids ages, arranging from like two to seven.

02:05:16
<transcript>: we

02:05:25
<transcript>: We just have a great street that it's a bunch of friends that they love to all play in the backyards together. They just kind of like, go between each other's backyards.

02:05:25
<transcript>: and it's just

02:05:38
<transcript>: And it's just a really great experience. So he's got a lot of the social element there without going to school. And that makes a big difference. They're all in school. So none of them are homeschooled. And so he is missing something there obviously.

02:05:38
<transcript>: but

02:05:42
<transcript>: But if it weren't for that, it'd be a lot harder to keep him at school.

02:05:47
jaystation3x: LOL, well‚Ä¶ not going to give a rec on the spot, but I'm happy to think about it and discuss.

02:05:50
<transcript>: What would teaching look like for you? Creating almond courses? Yes, Stroop. I think I'm working on this eight Abyss for Web discourse.

02:05:50
<transcript>: the struggle

02:05:59
<transcript>: The struggle I'm having is convincing myself that I should try and teach WebBeds AWS. Or if it's just not the right mission.

02:05:59
<transcript>: but i'm gonna create

02:06:06
<transcript>: But I'm gonna create some smaller stuff. I think I mean teaching even just here on stream teaching on YouTube. I want to start doing more intentional.

02:06:08
<transcript>: Like educating.

02:06:21
<transcript>: And then I think I'm gonna do some workshops. I'm gonna try with starting small with workshops as opposed to the full course, and then go from there, man, I'm here because I've got other stuff to do. And this is what my brain wants instead.

02:06:27
<transcript>: Well, I don't want to. I don't want to stop you from doing the things that you should be doing.

02:06:39
<transcript>: But if you want to be here, it's really fun hanging out. So, Daver, I appreciate you being here. We don't need more thought. Leader. Clickbait clowns. Really? Yeah. No, I agree. Sigma, but are you talking about YouTube specifically.

02:06:39
<transcript>: jay says

02:06:59
<transcript>: Jay says Lol, well, not going to give a wreck on the spot, but I'm happy to think about it and discuss that. Sounds good, Jake. We could do it offstream on stream. We can do that discussion later, but I know you're gonna give a really thoughtful reply. And Twitch chat is probably not the right place for that. So good call. Good call out. All right, let's we're gonna do something today. I promise I'm not just gonna talk for.

02:06:59
<transcript>: the entire

02:07:03
<transcript>: The entire stream. It's been 2 hours now of mostly just talking.

02:07:09
<transcript>: I said, I'd pull this up. I'm gonna go and pull it up. This is graph based. So they're building.

02:07:09
<transcript>: a lot of

02:07:17
<transcript>: A lot of what I just talked about with the database thing that they're also building, like a GraphQL API for you.

02:07:17
<transcript>: and that's really

02:07:20
<transcript>: And that's really where it starts. The data is just kind of like.

02:07:20
<transcript>: an implementation

02:07:24
<transcript>: An implementation detail like your app has data clearly.

02:07:31
<transcript>: But they they've got like maybe.

02:07:34
<transcript>: Investors right.

02:07:34
<transcript>: it's that crew

02:07:37
<transcript>: It's that crew. That, like they invest in everything together.

02:07:41
stroopwafel26: AWS for web devs sounds like a great idea for me because one of my pet peeves is web devs with absolutly NO interest in learning about servers and networks and they just throw code at you and yell "works on my machine!" - this is my life as an infra architect

02:07:43
<transcript>: Like Gearmo. And Nat. And Matthias.

02:07:43
<transcript>: i mean

02:07:47
<transcript>: I mean, they all sort of like follow each other around and invest in the same stuff.

02:07:56
<transcript>: Yeah. So this is graph based. So it's not completely unprecedented.

02:07:56
<transcript>: that

02:08:00
<transcript>: That we would build that there's going to be abstractions on.

02:08:00
<transcript>: dynamo

02:08:02
<transcript>: Dynamo like hold database.

02:08:02
<transcript>: startups

02:08:09
<transcript>: Startups kind of building on top of Dynamo and giving people those benefits. Okay. So what are we going to do today.

02:08:12
<transcript>: 2 hours in We're just now asking this question.

02:08:12
<transcript>: the things

02:08:14
<transcript>: The things that I would like to do.

02:08:14
<transcript>: that involved

02:08:20
<transcript>: That involved actually like coding and pulling so neovem my new of him is broken.

02:08:20
<transcript>: i've broke

02:08:24
<transcript>: I've broke it. I'd like to fix it. That's one thing I'd like to do.

02:08:24
<transcript>: like i'll

02:08:30
<transcript>: Like I'll show you when I do this. Oh, it actually didn't break there. Okay.

02:08:32
<transcript>: Well.

02:08:41
<transcript>: It was it was doing that. I want to check. No, I'm in my overlay project. What am I doing? What am I doing.

02:08:45
<transcript>: Well, I'm just checking. Something wrong, quick. That's what I'm done.

02:08:50
<transcript>: Okay.

02:08:53
<transcript>: One moment.

02:08:53
<transcript>: nothing

02:08:57
<transcript>: Nothing to fear? I just want to see if it got this time stamped, right? Yeah.

02:08:57
<transcript>: cool okay

02:08:59
<transcript>: Cool. Okay.

02:09:04
<transcript>: I just. I've broken those. So now they're actually right. 208. Yeah. Okay. Cool.

02:09:04
<transcript>: out here

02:09:07
<transcript>: Out here. We're not doing overlay stuff.

02:09:09
<transcript>: What we are doing.

02:09:09
<transcript>: is

02:09:10
<transcript>: Is.

02:09:10
<transcript>: we're

02:09:12
<transcript>: We're gonna just kind of fix.

02:09:12
<transcript>: fix

02:09:14
carlosgn: i followed the nvim readme you made but i have no idea how the shorctus work lol

02:09:19
<transcript>: Fix Neilvim stuff as we go, but the two things that I potentially want to work on, and maybe I'll let you all vote.

02:09:23
<transcript>: One.

02:09:23
<transcript>: three things

02:09:26
<transcript>: Three things. One, we could continue.

02:09:26
<transcript>: the

02:09:28
<transcript>: The Planet scale.

02:09:28
<transcript>: app sync

02:09:32
<transcript>: App sync thing I was doing and make it more real.

02:09:32
<transcript>: if you

02:09:34
<transcript>: If you watched Friday stream.

02:09:37
<transcript>: We kind of threw together like a.

02:09:40
<transcript>: Very crude prototype.

02:09:40
<transcript>: just to prove

02:09:41
<transcript>: Just to prove that it was possible.

02:09:41
<transcript>: to

02:09:44
<transcript>: To hit Planet scale.

02:09:59
<transcript>: With AppSync VTL resolvers without involving Lambda so no runtime compute so we were able to map they have this new http API at planet scale and we were able to reverse engineer the JavaScript bindings that they released.

02:09:59
<transcript>: there's a little

02:10:01
<transcript>: There's a little JavaScript library that kind of like.

02:10:01
<transcript>: interacts with

02:10:07
<transcript>: Interacts with this new http API. We were able to Port that thing into VTL and get it to work.

02:10:09
<transcript>: And worked pretty great.

02:10:18
<transcript>: That was fun. I enjoyed that. That was the little thing I'd wanted to check off in my mind since I saw they really sat on Twitter or announced on Twitter.

02:10:18
<transcript>: so

02:10:30
<transcript>: So we could extend that. We could make it more real, like productionize. It kind of come up with what is the best developer experience? If you wanted to write, you want to quickly stand up a graphical API on top of Planet scale and not write.

02:10:30
<transcript>: any imp

02:10:32
<transcript>: Any imperative like runtime.

02:10:32
<transcript>: code

02:10:34
<transcript>: Code.

02:10:34
<transcript>: that's a way to

02:10:36
<transcript>: That's a way to do it declaratively.

02:10:40
<transcript>: Two we could.

02:10:46
<transcript>: Blinking on one of them. I remember the third. So.

02:10:46
<transcript>: one of

02:10:49
<transcript>: One of the ones that the things I've considered doing today.

02:10:49
<transcript>: is

02:10:56
<transcript>: Is for my new podcast. I want to write some local automation stuff for.

02:10:56
<transcript>: basically taking

02:11:14
<transcript>: Basically taking, like, where I just turn on the mic and it does all the audio cleanup. And ultimately, like, puts it all transcribes. It does it all and puts it all into a file. So that, like, my CMS is all baked into my recording process. Basically make it easy, as easy as possible for me to hit record talk for 1015 minutes, and then.

02:11:14
<transcript>: click done

02:11:19
<transcript>: Click, done. And it just sort of like, publishes it my podcast feed.

02:11:19
<transcript>: because if i'm gonna

02:11:34
jaystation3x: statboards üòÇüòÇüòÇ

02:11:38
<transcript>: Because if I'm gonna do a daily podcast, it has to be zero friction, like zero, completely automated. So I could work on that. Or the third thing. I'm totally blinking on what the third thing was. Oh, yeah. I just want to build something with the stack. Da Jor, the T three stack. I want to build something with TRPC Prisma.

02:11:38
<transcript>: the

02:11:42
fragaverage: yes

02:11:44
fragaverage: t3, lets go

02:11:45
<transcript>: The whole thing that people are doing these days in Wedville, and I feel like I've gotten a little out of touch. I've been doing a little too much, like.

02:11:45
<transcript>: startup

02:11:55
<transcript>: Startup work and indie work where I just use the thing I'm comfortable with and I'm building stuff with a device primitives. I want to see how Web does are operating these days with this very new.

02:11:55
<transcript>: trend

02:12:03
<transcript>: Trend. T three. Let's go, says Frag. Alright, step boards. J. Okay, we're gonna build Snap boards. Just maybe not on stream.

02:12:18
<transcript>: Street says AWS for Web does sound like a great idea for me because one of my pet peeves is Webdes with absolutely no interest in learning about servers and networks, and they just throw code at you and yell or on that machine.

02:12:20
<transcript>: Yeah.

02:12:31
<transcript>: Yeah. My idea Stroop with a Tobis for web devs is really like, I want to create a course to help people who are web developers that want their curious.

02:12:31
<transcript>: their web developers

02:12:34
<transcript>: Their web developers that are curious about infrastructure.

02:12:54
<transcript>: Or maybe about more depth to the backend knowledge. Or maybe they're just a friendly developer. They want to know anything about the back end. I want to give new career options to frontend and web Dev types that have said like, hey, I could be the cloud guy at my startup. Like, Why is he the cloud guy? Why see the guy that manages the AWS accounts? I could know that stuff. That's what I want to create that course.

02:12:54
<transcript>: for

02:13:08
<transcript>: For it's really less like I mean, it's going to be very practical and we're gonna build stuff in the course. But it's less like I'm trying to teach you cloud development. It's more like I'm trying to give you options in your career. And for that, I think it's worth building. I think it's worth doing that course.

02:13:08
<transcript>: i think

02:13:10
<transcript>: I think that speaks to what you're saying.

02:13:12
stroopwafel26: I really want that to exist, it's been in my ideas.txt file for ages but I didn't get around to it / I don't have the skills in writing

02:13:16
<transcript>: Carlos, I followed the inventory you made, but I have no idea how this shortcuts work.

02:13:16
<transcript>: carlos

02:13:20
<transcript>: Carlos, I didn't write that README. I don't remember what's in it.

02:13:28
<transcript>: Written any of the READMEs in my projects. I do a lot of cloning and doing things like that.

02:13:32
<transcript>: Okay. So we're gonna do T three, because Frag said it emphatically.

02:13:40
<transcript>: Okay. Cool. Stroop. You want that course to exist? Is that what you're saying.

02:13:40
<transcript>: i love it

02:13:42
<transcript>: I love it.

02:13:42
<transcript>: i'm gonna make that course

02:13:43
<transcript>: I'm gonna make that course.

02:13:43
<transcript>: they don't have

02:13:45
<transcript>: They don't have you help me. Stroop.

02:13:45
<transcript>: okay

02:13:47
<transcript>: Okay.

02:13:47
<transcript>: we're gonna do

02:13:50
<transcript>: We're gonna do something with the T three stack, and it.

02:13:50
<transcript>: 's

02:13:59
stroopwafel26: sure I have many thoughts

02:14:01
fragaverage: create.t3.gg

02:14:03
<transcript>: 's this is a tribute to yesterday. I got to watch some of Theo Stream Live. I never get to watch any of the Streamers Stream Live because I have a weird schedule. And I'm done at noon.

02:14:05
zappy_oc: t3

02:14:08
zappy_oc: yay

02:14:09
<transcript>: Here is in it Tips NPX Create T Three app.

02:14:09
<transcript>: cop cop cop cop

02:14:18
<transcript>: Cop, cop, cop copied successfully. Here we go, here we go. We're in our code directory. We're going to let's see CD, playground.

02:14:19
<transcript>: We're just playing.

02:14:23
<transcript>: Do I is this the kind of tool.

02:14:31
<transcript>: That creates it in your current directory. Or does it create a subdirectory? I hate that there's this split. Some tools.

02:14:31
<transcript>: you like

02:14:32
<transcript>: You like.

02:14:32
<transcript>: you run

02:14:40
<transcript>: You run the command, the MPX, create the thing inside the directory. That's gonna be your new project. Some of them create a subdirectory.

02:14:40
<transcript>: and

02:14:47
<transcript>: And I always guess wrong. And it drives me nuts because I had, like, move it up a level, or I have to, like.

02:14:47
<transcript>: worse you

02:14:52
<transcript>: Worse. You do it. So the way I always do it is I make a directory.

02:14:54
zappy_oc: your most listened spotify songs chart maybe?

02:14:59
<transcript>: It's safer to do it inside of a directory and then find out. Oh, I should have done it. A higher level up.

02:15:02
<transcript>: Zappy, create T, Three GG.

02:15:02
<transcript>: shoot

02:15:03
fragaverage: if you append one, it'll use that dir

02:15:04
<transcript>: Shoot.

02:15:15
<transcript>: Oh, Spotify songs? Oh, we gotta listen to Spotify where I'm at Spotify. Do you have pinned one? It'll use that Dir. Okay.

02:15:15
<transcript>: oh should

02:15:19
<transcript>: Oh, should I go to create T three GG instead of.

02:15:22
<transcript>: Init Tips. Just out of date.

02:15:25
<transcript>: Create T three. Here we go. At latest. Okay.

02:15:27
<transcript>: Nice little.

02:15:27
<transcript>: things get going

02:15:32
<transcript>: Things get going here. Theo. Was the design work or whatever that is. It's cool.

02:15:39
<transcript>: First, we're gonna play some music. Why are we not listening to music? We should be listening to music.

02:15:45
<transcript>: And I need to turn it up for myself.

02:15:50
<transcript>: We find a spot that I'll like here.

02:16:10
<transcript>: Okay, so what we're gonna do is we're gonna build something. Yeah, we can build the latest Spotify thing is that we're saying, Zapy, like an idea for something to build. You're most listened Spotify Songs chart? Maybe I'm gonna be so embarrassed when it's like, you know what? It's gonna be my most listened Spotify is gonna be like.

02:16:13
<transcript>: What's her name? There's like a girl teeny.

02:16:22
<transcript>: Jojo Siwa? It's gonna be a lot of Jojo Siwa and wheels on the bus and everything else my kids listen to constantly on my Spotify.

02:16:22
<transcript>: that's

02:16:38
stroopwafel26: kids taking over spotify profiles checking in

02:16:40
<transcript>: That's the problem with having kids. One of the problems, lots of good things, like all the joy it brings and the companionship and all of that. But one of the downsides is they use your Spotify and then all your recommendations are terrible. Like, hey, you're gonna love this music? If you love Jojo Siwa, you're gonna love this.

02:16:40
jaystation3x: Spotify family account ftw.

02:16:43
<transcript>: Okay.

02:16:51
<transcript>: I do. Jay. I actually have a family account. Now.

02:16:54
<transcript>: I have one, but.

02:16:54
<transcript>: it

02:16:56
<transcript>: It still doesn't stop it.

02:16:56
<transcript>: it

02:17:06
<transcript>: It still, I think there's a lot of history. There's a lot of time on my account. And then we've moved now to separate accounts. We've got one for the Google home upstairs. That helps a little.

02:17:07
neochromer: @adamelmore forgot to ask but what do you like about DynamoDB?

02:17:08
stroopwafel26: my discover weekly + release radar are 100% kids songs throughout

02:17:11
backadd: Theo is a genius

02:17:12
<transcript>: Okay. We're not gonna make one. We're just gonna do this at latest. Here we go.

02:17:15
neochromer: whats the benefit of Dynamo vcompared to Mongo?

02:17:16
<transcript>: Oh, no. Did I still coffee.

02:17:16
<transcript>: this little water

02:17:23
<transcript>: This little water. What are the spell? Here I go. I'm doing it. I'm just so nervous. It's gonna do it in this directory.

02:17:31
<transcript>: What's the benefit of Dynamo compared to Mongo.

02:17:33
shaaah: Powerd by Vercel? dint theo make this?

02:17:38
<transcript>: Great question. I don't know if I'm smarter enough to answer that. I use Dynamo a lot. I don't use Mongo.

02:17:44
<transcript>: So I don't have much of an opinion on the comparison. You can ask Riku LAN on Twitter.

02:17:49
<transcript>: He was deep at Dynamo. He created single table design.

02:17:49
<transcript>: he was on he

02:17:53
stroopwafel26: great ascii art

02:18:03
<transcript>: He was on. He worked for AWS for years and years. Spoke at Reenven every year. He's a like one of the Founding Dynamo Fathers, and he now works at Mongo so he could probably tell you in depth. Just look him up on Twitter. He's probably said it on Twitter. If you want to know the differences.

02:18:03
<transcript>: it's gonna be

02:18:08
<transcript>: It's gonna be bias, because now he kind of doesn't like it a.

02:18:12
<transcript>: Follypratreated. That or something. I don't know.

02:18:15
<transcript>: But yeah, he's got lots to say about the different.

02:18:21
<transcript>: Discovery Weekly and Release later.

02:18:21
<transcript>: our

02:18:22
<transcript>: Our.

02:18:22
<transcript>: hundred

02:18:24
<transcript>: Hundred percent Kids songs.

02:18:24
<transcript>: neoc

02:18:29
neochromer: haha, okay thanks for the answer, will probly do :D

02:18:43
stroopwafel26: I subscribed to Apple Music just to get around the kids songs lmao

02:18:44
<transcript>: Neocromer. Did I just answer that question? I think I did. Forgot to ask, what do you like about DynamoDB? I love so much about that in the DB. I just love that you can build a feature and look at this ASCII art. You can build a feature in Dynamo and you just sort of like, know it's gonna perform the same way, no matter the load, no matter how much data over time.

02:18:44
<transcript>: builds up

02:18:48
<transcript>: Builds up in that particular partition or table or whatever.

02:18:48
<transcript>: i just load the

02:18:53
<transcript>: I just load the predictable performance of it if there's way less guessing about how things will perform.

02:19:02
<transcript>: Back. It welcome to Chat or Back. Ad Theo is a genius. He really genuinely is a genius. I think.

02:19:02
<transcript>: i've

02:19:11
<transcript>: I've watched enough of Theo's content to know his brain stores a lot of information. He's got a lot in there, and it's like any topic that comes up.

02:19:11
<transcript>: he knows

02:19:14
<transcript>: He knows things about the topic.

02:19:14
<transcript>: it's mindblowing

02:19:16
<transcript>: It's mindblowing actually.

02:19:24
<transcript>: I feel like that's what my son's gonna be like, that's what he's like as a kid. I mean, he's just. He knows everything you bring up. It's like he's got an answer.

02:19:37
<transcript>: Yeah. Powered by Versaille just means it's hosted on Versail. People like that, that just means it's hosted. But yeah, this is a Theo project right in his community.

02:19:39
<transcript>: Great ask yard.

02:19:47
<transcript>: Okay. What will your project be called? We're gonna call it.

02:19:47
<transcript>: what do we what

02:19:51
<transcript>: What do we. What are we doing here? Back at. Thanks for the follow. I appreciate that.

02:19:57
<transcript>: Someone said Spotify, we could do top Spotify songs we could do.

02:19:57
<transcript>: what's a fun

02:20:06
<transcript>: What's a fun thing that's like more interactive. What's something we could build a full stack app that like you have to write stuff to the database. You have to read stuff from the database.

02:20:11
cowfacedude99: getting on the t3 stack train? LUL

02:20:11
<transcript>: Something.

02:20:11
<transcript>: something

02:20:13
<transcript>: Something.

02:20:17
jenswoeste: instacrud

02:20:20
<transcript>: Yeah. Cafes. I want to.

02:20:20
<transcript>: i really

02:20:22
<transcript>: I really want to better understand.

02:20:22
<transcript>: the

02:20:30
<transcript>: The kids these days, I want to know what web devs are really using, and it's some kind of just kind of like monitored.

02:20:30
<transcript>: but

02:20:31
shaaah: Theo is more theory than practical, which is a good skill regardless

02:20:42
<transcript>: But not drifted to and honestly, I don't see like startups using this. This is like in my consulting work. Maybe it's selfselected into people who are using AWS already. But.

02:20:46
neochromer: I'm a webdev for years I never used Next or T3 :D

02:20:55
<transcript>: This is like cutting edge of web tech world. Webdev world. And generally, there's a lag. So like my consulting work, I've just never run into it. It's the thing I was always gonna have to play with on my own.

02:20:55
<transcript>: yeah

02:20:58
neochromer: mostly React and some custom Design systems

02:20:59
<transcript>: Yeah. Not that it won't eventually. I mean, I'm sure he's building pain with all this tech.

02:21:01
davur_: top commenters on your twitch chat?

02:21:03
<transcript>: Okay web Dev.

02:21:09
<transcript>: What's Instacred? Oh, like, build an Instagram clone? Is that we're saying.

02:21:15
<transcript>: I would love to do something with image upload because I've heard somebody specifically complain about.

02:21:15
<transcript>: like how do you

02:21:15
neochromer: I would be curious what people use today with new projects

02:21:22
<transcript>: Like, how do you all do image uploads with this stack? Like I heard that. I don't know if it was T three, if it was just like when you use CrPC.

02:21:22
jenswoeste: instant create update delete

02:21:38
shaaah: Have you used tRPC?

02:21:40
cowfacedude99: there was a video on that.

02:21:43
<transcript>: So Sha Theo is more theories and practical. I will say I am way more practical than theory. That's why I don't do rants or hot tapes. Although I've talked a lot in the last couple streams. I guess I gotta stop doing that because I'm not very theoretical. I am very much.

02:21:43
<transcript>: i'm from

02:21:47
<transcript>: I'm from the Show Me State. That's what they call Missouri, where I live.

02:21:47
<transcript>: and somehow

02:21:49
<transcript>: And somehow.

02:21:56
backadd: An app where you upload a photo of your lunch everyday

02:22:01
davur_: while you are thinking about projects... how about a little nggyu?

02:22:04
sikmofo: rants and hot takes just feed the simpletons

02:22:09
<transcript>: I know selffulfilling prophecy or something like somehow that influences my personality a lot. I need to do. I need to see and do and touch and feel and it's not real if I'm not doing that. So like, on calls. I'm a pretty senior developer. I've been doing this for a while, but like on phone calls with people where it's like project planning and stuff. I've been on some of.

02:22:09
<transcript>: those calls

02:22:20
<transcript>: Those calls, like Scrum ceremonies. I have nothing to say. I'm like, I don't know. I got nothing here to add to this conversation. I know I should. I'm a senior. Whatever. I've been around.

02:22:20
<transcript>: but i just

02:22:26
<transcript>: But I just have nothing to add if I'm not at my keys doing stuff, you know, I'm saying so I'm way more practical than theoretically.

02:22:29
daneoshiga: wordle clone, maybe for guessing something else (I've seen guessing movies, actors, idk..)

02:22:33
<transcript>: It's funny that Theo is theory. It starts with Theo. The word that's pretty cool.

02:22:42
<transcript>: I'm a web Dev for years. I never use Next or T three. Yeah, yeah. This is like this is like The Bleeding Edge, although he would say it's bleeding responsibly.

02:23:01
<transcript>: Top commenters on my Twitchet now I could get down with interact with the Twitch API some more. The problem is where is the interactivity? Where is the like creating like we gotta do something where there's some mutations, if you will. I know it's not graphical, but you know I'm saying.

02:23:03
cowfacedude99: tomdoestech did a video on how to upload files on s3 with t3 stack.

02:23:05
shaaah: Theo, theory , T3 all starts with T lol

02:23:05
backadd: Wordle clone is a fun idea

02:23:06
<transcript>: Instant create update. Delete.

02:23:06
<transcript>: have you used

02:23:11
<transcript>: Have you used CrPC? I've not Shaw. We're about to use it for the first time. For the very first time.

02:23:16
<transcript>: An app. We upload a photo of your lunch every day. Sounds awesome.

02:23:16
<transcript>: and then

02:23:21
<transcript>: And then we upload. We can have some, like up voting of lunch, photos.

02:23:21
<transcript>: while

02:23:24
stroopwafel26: Th3o

02:23:25
<transcript>: While you're thinking about projects, how about a little.

02:23:25
<transcript>: ng

02:23:28
<transcript>: Ng Gyu.

02:23:31
<transcript>: What's that stand for? Dever.

02:23:31
<transcript>: ransom

02:23:34
<transcript>: Ransom Hot takes just feed the simple pins.

02:23:37
<transcript>: Wordal clone maybe for guessings and.

02:23:37
<transcript>: that's so

02:23:39
<transcript>: That's so jarring.

02:23:39
<transcript>: gets me

02:23:41
<transcript>: Gets me every time David.

02:23:44
<transcript>: We just got Rick rolled so hard.

02:23:59
<transcript>: Maybe for guessing something else. I've seen guessing movies. Actors? I don't know. That's not a bad idea. Tom does. Tech did a video on how to upload files on S three with T three SEC. Okay, so that's been done.

02:24:05
<transcript>: Co theory. T three. All starts with T. Somebody. T's TypeScript.

02:24:05
<transcript>: trp

02:24:08
<transcript>: Trpc tailwind.

02:24:14
<transcript>: Word will clone is a fun idea. Yeah, that is kind of a fun idea. Do you want to do a word of clown.

02:24:21
<transcript>: Do we want to do a way clone that sounds kind of fun, actually, and it is interactive. So check that box.

02:24:21
<transcript>: alright

02:24:23
<transcript>: Alright where do quantity is.

02:24:30
<transcript>: I feel like this has been done. Like I feel like there's been a few Whirl clones. How could we put our own twist on a Whirl clone? Anybody.

02:24:30
<transcript>: have any ideas

02:24:31
<transcript>: Have any ideas.

02:24:37
<transcript>: Thank you for the follow.

02:24:40
sikmofo: every word only matches backwards

02:24:41
backadd: wordle clone with a duel mode?

02:24:43
<transcript>: Helm HLM. Mata and Cassie Dev.

02:24:47
<transcript>: I appreciate your follows. Every word only matches backwards.

02:24:50
<transcript>: With a dual mode.

02:24:50
<transcript>: ooh

02:24:53
<transcript>: Ooh like multiplayer.

02:24:55
backadd: 1v1

02:24:57
jaystation3x: Pixelated image. Guess what it is. Image becomes less pixelated the more letters you get right.

02:24:59
<transcript>: Say more Words off by John That's a cool name. Thanks for the follow off by John.

02:25:04
neochromer: wordle clone idea: AWS services terms

02:25:06
sikmofo: co-op

02:25:07
zappy_oc: only programming words

02:25:17
<transcript>: Pixelate image. Guess what it is. Image becomes less pixeled. The more letters you get. Right. Jay, that is brilliant. I feel like that might be a really, actually cool thing to build. We're building it. I'm stealing it. I mean, you did put it in my chat, so I feel like I can steal that. That's a great idea.

02:25:27
<transcript>: Okay, we're doing. We're doing. Jays.

02:25:37
stroopwafel26: @jaystation3x billion dollar idea

02:25:40
<transcript>: Time to get serious.

02:25:40
<transcript>: what will

02:25:42
<transcript>: What will my project we called.

02:25:48
<transcript>: How do you combine the words pixelated and Wordle.

02:25:56
<transcript>: Idea.

02:26:00
<transcript>: You may know a name we could call it.

02:26:00
<transcript>: x

02:26:01
shaaah: pexa

02:26:03
<transcript>: Xldol no.

02:26:04
<transcript>: Wixel.

02:26:09
jaystation3x: Blurdle

02:26:11
<transcript>: Quick so like Wordle and Pixel.

02:26:14
<transcript>: Or image.

02:26:14
<transcript>: it's like

02:26:14
pointykone: Purdle

02:26:17
<transcript>: It's like image word Blurtle.

02:26:19
<transcript>: Blurtle.

02:26:22
<transcript>: Blur. Oh, it looks like it's blurring. The image.

02:26:22
<transcript>: jay

02:26:24
<transcript>: Jay.

02:26:24
<transcript>: you're too good at this

02:26:25
<transcript>: You're too good at this.

02:26:25
backadd: Blurdle is perfect

02:26:30
<transcript>: Okay. Blur. Dope Blurtle is it. And we are using TypeScript.

02:26:30
<transcript>: will there be

02:26:31
sikmofo: jay is on one today

02:26:34
<transcript>: Will there be auth? Do we want to have off, like a leaderboard or something? Yeah.

02:26:34
<transcript>: so

02:26:37
<transcript>: So what the full T three experience? You know, I'm saying.

02:26:42
stroopwafel26: jay is on fire

02:26:43
<transcript>: And I do use nexop. So that's like of all these. Okay. So you still win. I know half of these.

02:26:43
<transcript>: i used

02:26:46
shaaah: damn jay planned this whole thing out

02:26:50
<transcript>: I used half of these on almost every project. So Prism and TRPG, that's what we're really getting some exposure to. Thank you so much for the following board.

02:26:53
<transcript>: I appreciate Jay is on fire.

02:26:53
<transcript>: he's on one

02:26:59
<transcript>: He's on one. He did. I feel like at this point I should have been J come up and just write the thing, too, because.

02:26:59
<transcript>: this feels

02:27:02
<transcript>: This feels wrong for me to just, like, build his whole idea.

02:27:05
<transcript>: New Get Repository. Yes.

02:27:05
<transcript>: i

02:27:08
<transcript>: I'm in like a subdirectory. Right.

02:27:13
sikmofo: jay about to post the github link

02:27:15
<transcript>: No. Just in case.

02:27:16
sikmofo: "already made in the fridge"

02:27:19
<transcript>: Just in case it doesn't create a subdirectory.

02:27:26
stroopwafel26: "did this in like 5 minutes"

02:27:29
<transcript>: I've made some seal eyes in my day. It's fun to watch CLI's and know exactly like all the tools that they're using.

02:27:31
<transcript>: For their CLI.

02:27:32
stroopwafel26: - jay, 2022

02:27:38
<transcript>: Okay CD Blurtle Impeachment Stall MPX Prisma DB push.

02:27:44
<transcript>: All right, here's the thing we're gonna use Pnpm. Because.

02:27:44
<transcript>: i always forget

02:27:49
<transcript>: I always forget to use it. And the times that I've used it, I love it so much.

02:27:53
<transcript>: And in this case, I'm not doing CDK, so I don't need to worry about that.

02:28:02
<transcript>: Today about the push to get a blink. That's awesome.

02:28:02
bluemeansgay: would you like to move to vscode?

02:28:04
<transcript>: Okay.

02:28:09
<transcript>: Would you like to move to vs. Code? No. Blue. Welcome to chat.

02:28:09
<transcript>: i

02:28:12
<transcript>: I actually move from via.

02:28:12
<transcript>: to envy

02:28:15
<transcript>: To envym, and I love it.

02:28:15
<transcript>: mpm

02:28:19
<transcript>: Mpm install so we're gonna do PMPM install.

02:28:21
bluemeansgay: hey how's it going?

02:28:23
<transcript>: Then we're gonna do.

02:28:27
<transcript>: Mpx Prisma DB push.

02:28:32
<transcript>: I need to get me some new PMPM.

02:28:32
<transcript>: that's old

02:28:34
<transcript>: That's old.

02:28:44
cowfacedude99: @BlueMeansGay all my uptime gone down to drain LUL

02:28:52
<transcript>: Okay, so we're gonna need a database of words.

02:28:52
<transcript>: single

02:28:55
andreull: Gangsters eat lara bars

02:28:56
<transcript>: Single five, is it five digits? Is World five or six.

02:28:56
<transcript>: we're gonna

02:29:00
<transcript>: We're gonna need a ditch database of single word and a photo of that thing.

02:29:04
<transcript>: You know, I'm saying.

02:29:07
andreull: faxx

02:29:11
<transcript>: Hey, Blue, it's going well I think you for the Follows, Mr.

02:29:11
<transcript>: zerni

02:29:12
pointykone: Oh wow you made everything just better since last time I was here

02:29:13
<transcript>: Zerni in Lassen.

02:29:16
<transcript>: Gangsters eat Lara Bars. That's right.

02:29:21
stroopwafel26: @andreull no cap

02:29:23
<transcript>: No, I'm not moving to VSCO.

02:29:23
<transcript>: cavaes you can

02:29:26
<transcript>: Cavaes you can stick around Nookap.

02:29:31
<transcript>: Pointycon. I made everything better.

02:29:31
<transcript>: since last time

02:29:32
andreull: it's lit

02:29:35
<transcript>: Since last time you're here what all is better I use new of it now is that better.

02:29:38
<transcript>: Look at this neo Vemon.

02:29:42
<transcript>: Flying around with my Jays and my KS.

02:29:44
sikmofo: chewing with a cig in your mouth is a pain isnt it

02:29:50
<transcript>: In my mouth.

02:29:52
<transcript>: That is pain.

02:29:52
<transcript>: okay so what we're gonna

02:29:56
<transcript>: Okay, so what we're gonna do? We're gonna explore some TRPC.

02:30:00
<transcript>: Well, we'll do the whole the whole T three SEC. We're gonna explore.

02:30:04
<transcript>: What's ready to read me? I bet it's a good README.

02:30:08
<transcript>: He's got a person. They make sure they have good READMEs, you know.

02:30:11
<transcript>: I'm not one of those people, but Theo.

02:30:11
<transcript>: could

02:30:17
<transcript>: Could read me this is an app boost up according to the initips stack also knows a T three stack.

02:30:23
<transcript>: Why are there JS files in here? That's a great question. As per T three Axiom.

02:30:23
<transcript>: we

02:30:25
sikmofo: im pretty sure theo isnt responsible for any of it?

02:30:26
shaaah: You are not that guy pal, you are not that guy

02:30:28
<transcript>: We take type safety as a first class citizen. Unfortunately not all for frameworks and plugins.

02:30:28
<transcript>: let's

02:30:29
pointykone: Your neovim looks cool and im pretty sure the music wasn‚Äôt there too just all of it

02:30:30
<transcript>: Let's make this bigger.

02:30:35
<transcript>: I know what this thing on the side I'm doing with. I'm probably gonna pull up a browser instead.

02:30:35
shaaah: @sikmofo Facts

02:30:39
<transcript>: And let's switch it over here.

02:30:41
<transcript>: And let's make it bigger.

02:30:48
<transcript>: As per T tree. Oh, you guys want some keycaster.

02:30:48
<transcript>: there we go

02:30:49
<transcript>: There we go.

02:30:56
<transcript>: As per T three Axiom. We take Wait, what is an Axiom? Is that like.

02:30:58
<transcript>: They have like a Creed.

02:31:00
<transcript>: Thisis community have like.

02:31:02
<transcript>: Commandments.

02:31:02
<transcript>: is an

02:31:08
<transcript>: Is an Axiom, like a statement that we have made as a community. Is that what that is someone telling me.

02:31:14
<transcript>: I feel so like inferior to Theo in every way right now.

02:31:16
bluemeansgay: it's like axios but axiom

02:31:24
madlep: axiom is a fundamentally true logical premise

02:31:25
<transcript>: Yeah, Pony. We built out all that the music. We didn't have music going until a couple weeks ago. We built all that on stream, too.

02:31:32
<transcript>: I'm not that guy. Oh, I'm not the guy with the cigarette. You mean, yeah, I'm not that guy. That's what makes it funny to me.

02:31:32
shaaah: https://axiom.org/docs/

02:31:36
<transcript>: Thank you for the follow. Ready.

02:31:36
<transcript>: and minute

02:31:37
<transcript>: And minute.

02:31:40
<transcript>: And QQ. Melon.

02:31:44
<transcript>: Activism is a fundamentally true logical premise.

02:31:46
<transcript>: Thank you.

02:31:46
<transcript>: so

02:31:52
<transcript>: So this. They have axioms. I need to know. I need to know more about their axioms.

02:31:55
<transcript>: I've got some problems here. There we go.

02:31:57
coil_twitch_bot: Cheer100

02:32:00
<transcript>: No, don't open my email. Just anything but that. I got to turn that off.

02:32:06
<transcript>: Oh, boy, where did I go with this.

02:32:13
bluemeansgay: oh boy

02:32:29
fredvanrijswijk: Is a Log system

02:32:30
<transcript>: Look at these T three actives. We'll be Frank. This is an opinionated project. I love opinionated projects. I want opinions in my life. I've been at begging you all in switch chat to tell me what to do. So I.

02:32:50
<transcript>: 'll solve problems. It's easy to follow the trap of adding everything. We especially don't want to do that everything added to create T three apps should solve a specific problem that exists within the core technologies included. This means we won't add things like state libraries. Cool don't use them, but we will add things like Next off. Yep, love it and integrate.

02:32:50
<transcript>: prism tr

02:32:54
<transcript>: Prism TRC? Trpc for you love it okay.

02:32:54
<transcript>: bleed

02:32:54
fredvanrijswijk: Great for Vercel logging

02:32:55
<transcript>: Bleed. Responsible.

02:32:55
<transcript>: we love

02:33:03
fredvanrijswijk: Axiom

02:33:16
<transcript>: We love our breeding edge check the amount of speed and honestly fun that comes out of new shit is really cool. We think it's important to bleed responsibly using riskier tech is the less risky parts using riskier tech in the less risky parts. Got it. This means we wouldn't bet on risky new database tech. Sql is great, but we happily bet on TrpC since it's just function.

02:33:16
<transcript>: functions

02:33:18
<transcript>: Functions that are trivial to move off.

02:33:30
<transcript>: Do I agree with this? I'm not a hot take guy again. I'm not a theoretical guy. I'm a proud guy, but even my practical guy, nature.

02:33:30
<transcript>: maybe

02:33:36
<transcript>: Maybe has a slight pause. Just a slight one. I'm again.

02:33:36
<transcript>: theo

02:33:47
<transcript>: Theo is awesome, and his community is incredible. I have no room to criticize anything they do in any way, but I'm just gonna point out two things. One.

02:33:51
<transcript>: Risky new database deck so SQL.

02:33:55
<transcript>: Has been around a lot of time. That does not mean that any new.

02:33:55
<transcript>: database

02:33:56
<transcript>: Database.

02:33:56
<transcript>: is

02:34:01
<transcript>: Is risky new tech if Amazon.com can run on DynamoDB.

02:34:01
<transcript>: i don't think

02:34:14
<transcript>: I don't think it's like we're not talking about risky new tech. If it's been out a decade. Probably not risky new tech. That's just my only little knit. It's just a NIT. If this were a PR view, that's my NIT. But I get the spirit of what he's saying. And the spirit is true.

02:34:21
<transcript>: Don't don't do risky new things. Don't learn new tech if it's an important project to you, don't do new databases.

02:34:21
<transcript>: like just

02:34:26
<transcript>: Like just don't huge thing you know sequel is great and that's true statement.

02:34:26
<transcript>: i'm really

02:34:28
<transcript>: I'm really reading between the lines. I think.

02:34:30
<transcript>: And.

02:34:30
<transcript>: i'm knitting

02:34:33
<transcript>: I'm knitting at something he didn't even say.

02:34:45
<transcript>: But we happily bet on Tier PC. This is my other NIT. I guess. Like is TrpC bleeding responsibly is your entire like API layer. I know it's just functions, but like.

02:34:45
<transcript>: is that really

02:34:55
<transcript>: Is that really easy to move away from? That's something I'd like to know the answer to. I'd like to know how easy is it to move from TRPC into other things.

02:34:55
<transcript>: if you need

02:35:15
<transcript>: If you need to my biggest question Mark and what we're gonna learn, we're gonna play with it not enough. I'll learn enough just from playing with it. But my biggest question Mark around here, PC is just the story of, like, year two in year three. So people optimize a lot for how easy it is to build something initially. But how easy is it to maintain and to all of those things down the road? That's my question.

02:35:19
<transcript>: Oh, thanks for the.

02:35:19
<transcript>: cheer

02:35:25
<transcript>: Cheer coil, coil, Twitch box thank you so much for the hundred bits.

02:35:29
<transcript>: Oh boy.

02:35:31
nexxeln: hihi

02:35:32
<transcript>: Yo, boy in Me, blue.

02:35:39
nexxeln: OMG YOU'RE CREAT-T3-APP

02:35:42
<transcript>: Is a log system. Hey, Fred, welcome to Chat. Grateful version. Oh, Axiom is a lot. Yeah, yeah, that's also a startup, but I knew he was using the word Axiom in a different way.

02:35:42
<transcript>: he's using it

02:35:45
<transcript>: He's using it like this. These are factual statements.

02:35:53
nexxeln: my profile pic is the there haha

02:35:55
<transcript>: Like they're Creed type safety isn't optional. I totally agree with that. 100%. I mean, I 100% agree with all this. I just had a couple of knits.

02:35:55
<transcript>: little nits

02:35:59
<transcript>: Little nits, and he could probably debunk them like 10 seconds if we were talking.

02:35:59
<transcript>: and i had

02:36:05
<transcript>: And I had, like, 10 seconds of this time right now, you'd probably just be like, no, you're dumb kind of a kid, right.

02:36:15
<transcript>: The Bell. Listen to me. We take time safety as the first assistant. Unfortunately, our frameworks. Okay, we try to emphasize that these files are JavaScript for a reason by exclusively declaring its type.

02:36:15
<transcript>: dj

02:36:19
<transcript>: Djs so come JS or MJS for.

02:36:19
<transcript>: es module

02:36:34
<transcript>: Es modules. Right. Depending on what why is it wrapping like that? Depending on what supported by the library. Oh, it is used by also all the JS files in this project. What JS files are people complaining about cognitive people. Sometimes you gotta have some JavaScript files doesn't mean you're.

02:36:34
<transcript>: i know

02:36:43
<transcript>: I know we have to write that because people were like, what are the jokes that's so dumb? Don't pick on people like that. Just accept great work when you see it. This is great work.

02:36:43
<transcript>: i work the

02:36:45
<transcript>: I work the Owen company.

02:36:45
nexxeln: haha yes you're right

02:36:48
<transcript>: Oh.

02:36:48
<transcript>: i want

02:36:48
andreull: i only saw .mjs

02:36:51
<transcript>: I want to make my this thing.

02:36:51
<transcript>: want to make it

02:36:53
<transcript>: Want to make it bigger.

02:36:55
fredvanrijswijk: Oh haha

02:36:57
<transcript>: I'm gonna make inventory bigger.

02:37:01
<transcript>: How do I? How do I do that? So.

02:37:01
<transcript>: control

02:37:05
<transcript>: Control. I'm just gonna drag it. You know, sometimes you just use your mouse. Sometimes.

02:37:05
<transcript>: mouth time

02:37:07
<transcript>: Mouth, time.

02:37:07
<transcript>: i shouldn't see these

02:37:09
<transcript>: I shouldn't see these long file names.

02:37:11
<transcript>: Okay.

02:37:11
<transcript>: so

02:37:20
<transcript>: So I'm just gonna start the top. We have a Git, we have Prisma, steam it up pretty cool. Cool. Why did, uh, why did inventory gets us more.

02:37:20
<transcript>: i just made

02:37:22
bluemeansgay: well we should use Prisma instead of Next.js I guess?

02:37:23
<transcript>: I just made it big. Why'd you do that.

02:37:23
<transcript>: don't do that to me

02:37:24
<transcript>: Don't do that to me.

02:37:24
<transcript>: so public

02:37:28
<transcript>: So public has a Fave icon. Is this an XJS project? Wait a minute.

02:37:28
<transcript>: is this

02:37:31
<transcript>: Is this an? Yeah. Okay. It's a next JS project. Cool.

02:37:35
<transcript>: As he hasn't ported this whole thing over to Astro yet.

02:37:38
<transcript>: Seem to be pretty into the Astro.

02:37:38
<transcript>: next

02:37:42
<transcript>: Next one I am we're doing Create T Three App. That's what we're doing right now.

02:37:46
niftynate80: Stop. Mouse time.

02:37:47
<transcript>: Your profile pick is what.

02:37:51
<transcript>: What is that? Profile pick. Next one, it's a ghost.

02:37:55
nexxeln: astro isn't for dynamic apps

02:37:57
<transcript>: Is there? Your profile pick is right here. Where is it.

02:38:00
nexxeln: yeah the ghost is me

02:38:01
<transcript>: Did I just see that go somewhere? It does seem familiar.

02:38:03
shaaah: nah he moved from astro to docusarus

02:38:06
<transcript>: Did you? Were you singing it's on here.

02:38:10
<transcript>: I need more information. Next one.

02:38:10
<transcript>: more

02:38:12
<transcript>: More give me more.

02:38:14
tiredbeaver: that's bc it is his project

02:38:17
nexxeln: in the contributors section

02:38:19
<transcript>: Okay. Come on. You buy. Come on. Let's not do this. Let's not fight. We just. We're having a good time.

02:38:22
<transcript>: There we go.

02:38:24
tiredbeaver: manz tryna sneak a brag in

02:38:24
<transcript>: Okay.

02:38:25
tiredbeaver: smh

02:38:27
nexxeln: yabai moment

02:38:27
<transcript>: Did you buy even running.

02:38:27
<transcript>: why is that not

02:38:29
<transcript>: Why is that not.

02:38:34
nexxeln: @tiredbeaver LMAO

02:38:35
<transcript>: I don't need this one. Let's just quit this one.

02:38:42
<transcript>: Okay. Did I turn on keycaster for you all? Do you all want keycaster? I think I did.

02:38:47
<transcript>: I only saw.

02:38:47
<transcript>: mj

02:38:51
<transcript>: Mj. So we should just print it instead of next to us, I guess.

02:38:59
<transcript>: Both. Right. Prisma is just like Prism instead of using a graphical API or Rest API. I guess maybe you don't use.

02:39:00
<transcript>: api

02:39:08
<transcript>: Api routes in the same way you would when you use your PC like you have less need for API routes, but I think even TRPC runs in.

02:39:08
<transcript>: an

02:39:11
<transcript>: An XJS API route, right.

02:39:11
<transcript>: rohees

02:39:15
<transcript>: Rohees, thank you so much for the follow. I appreciate that. Stop mouse time.

02:39:15
<transcript>: astrosm for

02:39:21
<transcript>: Astrosm for Dynamic Apps. Yeah, the Ghost is Me. Where's the Ghost? Where did I see the Ghost? Next one.

02:39:21
andreull: astro would be great for a portfolio website or stuff like that

02:39:22
nexxeln: trpc runs in a dynamic api route yeah

02:39:28
<transcript>: From Astrophys Docusaurus. That's because it is project. Oh, this is your project Maximum in the Contributor section.

02:39:28
<transcript>: are you

02:39:30
<transcript>: Are you.

02:39:30
<transcript>: 're a contributor

02:39:31
<transcript>: 're a contributor.

02:39:31
<transcript>: oh my

02:39:37
<transcript>: Oh, my goodness. There you are. He's a number one contributor. We have next home, next one.

02:39:37
<transcript>: is

02:39:38
icedcoffefe: contributing = brag rights

02:39:40
<transcript>: Is a star look at this guy.

02:39:44
bluemeansgay: wow

02:39:46
<transcript>: I didn't even know that about you. Next film. I'm still new here. I'm still getting to know people in the community.

02:39:49
<transcript>: Look at this.

02:39:52
<transcript>: Next on what.

02:39:52
<transcript>: look look at you

02:39:55
nexxeln: i started it yeah

02:39:56
privann: @nexxeln how many times have u changed the readme?

02:40:00
<transcript>: Look, look at you. Asher would be great for a portfolio website or stuff like that. Yeah, I was just making a joke, Andre. I mean, I was just teasing. It like it kind of like became.

02:40:02
nexxeln: julius took it over now

02:40:05
<transcript>: The mind Share it just took over all of our brains. Everyone talks about Astro all the time now.

02:40:13
nexxeln: @privann theo modified it more than me tbh

02:40:17
andreull: haha true

02:40:17
<transcript>: Next on TrpC runs a Dynamic API wrap. Cool, Cool Ice Coffee. Welcome to Trat Contributing. He was a background. No contributing is doing hard work and just letting people know that's just what you do.

02:40:30
<transcript>: Blue means great. Wow. Started. Yeah. Okay. How many times have you changed the README. You're so good at READMEs. Next one. What I gotta do does feel pay you to write this stuff. I'll pay you. I have money.

02:40:40
nexxeln: theo wrote that readme @adamelmore

02:40:42
<transcript>: Julius taken over. Now, Theo modified it more than me, to be honest. Well, you started it. And there's. That's why Founders get all the equity. They start things.

02:40:42
<transcript>: doesn't matter

02:40:43
<transcript>: Doesn't matter how much you do.

02:40:44
mergin: thanks for stream sir. after long job research with svelte, now im learning react with typescript. your stream shows me new ways for projects

02:40:45
<transcript>: In that right. J.

02:40:45
<transcript>: jew

02:40:47
<transcript>: Jew.

02:40:47
nexxeln: im not good at the readme LUL

02:40:54
<transcript>: Oh, he wrote the Remy. Okay, I probably couldn't hire Theo to write my readmese.

02:40:54
<transcript>: that's probably

02:41:01
jaystation3x: üò¢

02:41:11
shaaah: so if i use trpc and have react in my frontend, how do i get the type checking when both the backend and front end are in different places

02:41:15
<transcript>: That's probably beneath him. Thanks for streams, sir. After long job research was felt. Now I'm learning react to TypeScript. Your stream shows me new ways for projects. Well, I'm glad I could somehow be the person that showed you T three SEC. I'm the last person in the world to finally play with T three. I think it feels that way, having existed on Twitter for some time, but I'm glad that I'm the one that was able to show you T three.

02:41:15
<transcript>: stack

02:41:16
<transcript>: Stack.

02:41:23
<transcript>: You're not good at the read me. You're just good at making cool stuff. And that's. That's perfectly fine. Next one. Mergin. Thanks for the follow.

02:41:26
<transcript>: following

02:41:27
<transcript>: Following.

02:41:29
nexxeln: @shaaah it needs to be monorepo

02:41:30
<transcript>: Got a follow.

02:41:33
<transcript>: But didn't see a notification.

02:41:33
<transcript>: ha

02:41:35
<transcript>: Hang on.

02:41:38
<transcript>: I didn't hear.

02:41:38
<transcript>: a not

02:41:39
niftynate80: @icedcoffefe +1

02:41:40
<transcript>: A notification.

02:41:42
shaaah: @nexxeln oh I see

02:41:43
<transcript>: Di.

02:41:43
<transcript>: dinner

02:41:44
<transcript>: Dinner, break something.

02:41:49
<transcript>: Did I just miss it? Did it happen? I just didn't see it.

02:41:49
<transcript>: twitch chat

02:41:51
<transcript>: Twitch chat event.

02:41:51
<transcript>: i don't see

02:41:53
<transcript>: I don't see a fall on notification.

02:42:00
<transcript>: Wait. Is that it merging. Oh, yeah, there it is. Okay. Did it pop up on the screen? Do I just miss it? Whatever.

02:42:00
<transcript>: i'm

02:42:04
<transcript>: I'm so anal I just gotta stop it.

02:42:04
<transcript>: stop

02:42:06
bluemeansgay: @nexxeln do you stream on twitch?

02:42:08
<transcript>: Stop being that way. Okay, so we have a Schema Prisma.

02:42:15
nexxeln: @BlueMeansGay sometimes

02:42:19
nexxeln: i've started recently

02:42:20
<transcript>: We have a source directory, and then we have all these. This is just what comes with JavaScript these days. These are like the tag on the mattress. Just don't remove them. Just leave them. Don't touch them. Leave them there.

02:42:23
<transcript>: Rip them off.

02:42:24
andreull: LOL

02:42:28
<transcript>: Course in pages. Server styles type utils.

02:42:31
<transcript>: Started recently.

02:42:34
<transcript>: So you stream on Twitter next one.

02:42:34
<transcript>: i'm follow

02:42:34
bluemeansgay: @nexxeln followed

02:42:36
<transcript>: I'm following you immediately.

02:42:36
<transcript>: can't believe we have

02:42:37
mergin: definetely you are. i hate all social medias and using twitch and discord only. so thanks again. now i will make my gnome inspired website with react and ts again

02:42:39
<transcript>: Can't believe we have the Creator of T Three Stack himself.

02:42:39
<transcript>: or her

02:42:41
<transcript>: Or herself in Chat right now.

02:42:44
nexxeln: appreciate it @BlueMeansGay

02:42:52
<transcript>: Definitely you are a hate all social medias using Twitch and Discord only. So thanks again. Now we'll make my Gnome inspired website with Reactant. Yes again, that sounds great. Mergin.

02:42:52
<transcript>: i wish i

02:42:54
stroopwafel26: @nexxeln insta follow

02:42:56
nexxeln: him

02:42:56
<transcript>: I wish I knew whether the notification popped up when you when you followed me.

02:42:56
<transcript>: so

02:42:59
<transcript>: So I could think about right now.

02:43:00
<transcript>: Okay.

02:43:00
<transcript>: moving on

02:43:03
<transcript>: Moving on, we're moving past it.

02:43:06
<transcript>: Let's look at this. Sorcery we've got an INF.

02:43:06
<transcript>: i'm so curious about

02:43:07
nexxeln: im not on insta @stroopwafel26

02:43:11
<transcript>: I'm so curious about all this stuff. I know what a Pages directory does. Don't need to look at that server.

02:43:15
stroopwafel26: lol

02:43:19
stroopwafel26: good

02:43:24
<transcript>: They'll use a custom server. Or is this now? I'm just gonna learn. We're gonna learn style. I know this better. Just be what I expect. Yeah, exactly. Those three lines. When I see a global CSS.

02:43:24
<transcript>: just assume

02:43:27
<transcript>: Just assume you know, I assume that is what's in it.

02:43:29
<transcript>: Felon is awesome.

02:43:31
nexxeln: server is where the trpc code lives

02:43:34
<transcript>: Types. Next off types and then utils.

02:43:41
<transcript>: Trpc? Ts. Okay, so things I want to look at harder. This one. All of the server directory.

02:43:41
<transcript>: let's look at the

02:43:44
<transcript>: Let's look at the API route real quick just because.

02:43:44
<transcript>: the multip

02:43:46
<transcript>: The Multiple API.

02:43:46
<transcript>: i know

02:44:02
<transcript>: I know what Next Mobile looks like, but I want to see what this Bylet default. I've written a lot of Next Off config. You know, I've actually worked with this. I want to see, what do they do? How are they working with Next Off? Let's see providers. Discord. How interesting? By default. Login with discord.

02:44:02
<transcript>: okay

02:44:03
<transcript>: Okay.

02:44:05
<transcript>: Cool.

02:44:05
<transcript>: maybe

02:44:06
uberrick: Hey, what are you up to? Had to drop off, packing ready to go on our first family holiday tomorrow morning :)

02:44:11
<transcript>: Maybe Twitch. If for our thing. What do we want us to be? Login with discord. You gotta join the discord. There's a plug.

02:44:22
<transcript>: Okay, so sessions. They did. I've got some callback recession. They add the user ID to the session. Cool.

02:44:24
<transcript>: Prisma adapter.

02:44:31
<transcript>: That built in. I've never used Prisma, so they've got an X soft prism adapter. Cool, cool.

02:44:31
<transcript>: provider

02:44:33
shaaah: why is the env coming from a js file and not a .env

02:44:36
<transcript>: Providers. Discord provider. So I just got to get some discord secrets. Cool. Okay.

02:44:36
<transcript>: sounds good

02:44:39
stroopwafel26: @UberRick Where to? Have a good one!

02:44:43
<transcript>: Sounds good. Now what is TRPC look like? So this is just is this every TRPC API looks like this.

02:44:43
<transcript>: so we've

02:44:43
nexxeln: yep built in

02:44:46
<transcript>: So we've got create next API handler.

02:44:51
<transcript>: And then we have our from our server directory. We've got some stuff.

02:44:51
<transcript>: so you pass it

02:44:57
nexxeln: @shaaah we have typesafe env variables

02:44:58
<transcript>: So you pass it a router and create context. Okay. We're about to look at all that stuff real soon.

02:45:01
<transcript>: So do I need to look at anything else in here.

02:45:01
<transcript>: restricted

02:45:06
<transcript>: Restricted app we'll look at pages in a little bit. I think I'm good for now.

02:45:06
shaaah: @nexxeln ahh smart

02:45:08
<transcript>: So, what are these environments.

02:45:08
<transcript>: files

02:45:10
<transcript>: Files.

02:45:12
<transcript>: Next I'll.

02:45:12
<transcript>: these are

02:45:14
<transcript>: These are JavaScript files.

02:45:14
<transcript>: i

02:45:18
uberrick: @stroopwafel26 going to Menorca and thank you!

02:45:21
<transcript>: I thought this was a TypeScript type script safe library. Why are you using JavaScript.

02:45:26
<transcript>: Sorry. I just had to troll. I just had to do that because of what I'm sure you've already received.

02:45:28
nexxeln: LUL

02:45:30
<transcript>: Type safe environment variables.

02:45:30
<transcript>: that's awesome

02:45:31
<transcript>: That's awesome.

02:45:42
<transcript>: Oh, Shah, I was not making. I was not teasing you there about asking for a JavaScript file. I was teasing because in the README, they clearly had to get ahead of people complaining through JavaScript files.

02:45:42
<transcript>: great

02:45:45
privann: Why are you not coding rust

02:45:47
privann: KappaClaus

02:45:47
mergin: i never used orm before. im handling SQL queries with pool.query. one of my mentors said there is performance difference between native sql queries and ORM's. but lots of people use orm. is there much performance difference? do you suggest?

02:45:48
<transcript>: Great question about why it's on a end. Rick, what are you up to? Had to drop off packing. Ready? We're building.

02:45:48
stroopwafel26: @UberRick ooh you're gonna love it

02:45:53
<transcript>: Blurple or something? What's it called J. What's it called.

02:45:53
jaystation3x: @UberRick Nice ‚Äî enjoy!

02:46:02
jaystation3x: Blurdle

02:46:03
<transcript>: We're creating a Wordle clone where there's an image. This is all Jay's idea. Jay is brilliant. It's an image. The word is of the image. It's blurry.

02:46:03
<transcript>: it gives less

02:46:06
bluemeansgay: nice try to troll (no)

02:46:09
niftynate80: LUL

02:46:11
<transcript>: It gives less blurry as you get closer. So as you get more letters, it gets more in focus and it's easier to get the answer right.

02:46:15
<transcript>: That's a good idea. Even has a cool name and I start remember what it is.

02:46:15
<transcript>: servers

02:46:17
nexxeln: amazing idea LUL

02:46:22
<transcript>: Servers where the TRPC code lives. Okay, so there is code in TRPC. It's not just completely magic. I just thought TRPC was magic.

02:46:22
<transcript>: like you

02:46:30
<transcript>: Like you just imagine you want stuff to come from the server. And it just materializes. That's what I thought. So what I put in my head.

02:46:36
nexxeln: trpc is just functions

02:46:41
<transcript>: Where are we? So that's what we're up to, Rick, we're building that project with T three Stack, because I've just wanted to play with the RPC for a long time, and I just keep not doing it.

02:46:45
<transcript>: Going to Minorca.

02:46:52
<transcript>: Going on a little trip. I'm gonna vacation this way. Greg. We're Friday. If that counts us this week, why am I not coding wrists or rust.

02:46:54
<transcript>: Because I don't know, right.

02:47:04
<transcript>: And I feel like at this point, I've already switched over to Neil them. If I start coding Rust, it's way too obvious. I'm just trying to be primagin, like I am just trying to be proud of him, but I want to make it less obvious.

02:47:04
<transcript>: you know i'm saying

02:47:06
<transcript>: You know, I'm saying.

02:47:06
<transcript>: i don't need to make

02:47:06
uberrick: haha nice! Yeah I've been meaning to try trpc

02:47:11
<transcript>: I don't need to make it that obvious. Need to hide it a little bit. I've already ordered his keyboard.

02:47:14
<transcript>: I'm such a nerd.

02:47:19
shaaah: do ruby then

02:47:19
danielgerep: As long as you are not using a yoga ball, you are good.

02:47:29
shaaah: ruby is fun

02:47:30
<transcript>: Never used Oran before. I'm hitting sequence with pool query. One of my mentors said there is performance overnight news. You create an RM's, but lots of people use or M. Is there a much performance difference you suggest? So I think it depends on the or M. I know back in the day I used to do a lot of Dotnet development.

02:47:34
jaystation3x: I just googled it and someone else made this already. Seems to take forever to load, though. https://blurdle.photo/

02:47:42
uberrick: Currently trying sst for the first time instead of using the CDK directly

02:47:50
<transcript>: We use entity Framework Unity frameworks like the or M for C. Sharp or net more broadly. And I know there were a lot of complaints back then. I'm sure it's been eight years or something. Tenured. I don't know. It's been a long time. I'm sure things have gotten better, but back then it did produce some pretty gnarly sequel queries that wouldn't necessarily be performant, but they're in.

02:47:50
<transcript>: lies

02:47:52
<transcript>: Lies the problem with SQLbased databases.

02:48:00
mergin: for mysql and postgresql on nodejs.

02:48:02
<transcript>: It's very easy to craft a query that's not performant. That's the problem it's hard to keep in your head or to ever understand how a query Optimizer works.

02:48:02
<transcript>: and it

02:48:07
<transcript>: And it makes it hard for tooling like Orms to do the same.

02:48:14
<transcript>: So there's not really a blanket answer. I'm sorry, but some are in do craft pretty inefficient queries. It's very possible because it's sequel.

02:48:14
<transcript>: that's

02:48:17
<transcript>: That's what I'll say about sequel today.

02:48:17
<transcript>: probably

02:48:18
<transcript>: Probably.

02:48:18
<transcript>: blurtle

02:48:20
<transcript>: Blurtle. Thank you.

02:48:23
<transcript>: Okay.

02:48:23
<transcript>: nice try to

02:48:26
<transcript>: Nice try to troll. No.

02:48:30
<transcript>: Is that a bad troll? I'm not very good at trolling.

02:48:33
<transcript>: To your PC is just functions. Okay.

02:48:36
<transcript>: So is it just functions. Got it.

02:48:51
shaaah: @jaystation3x Dont worry we will make it blazing fast

02:48:57
<transcript>: Do Ruby, then Ruby is fun. Not a big fan. I mean, I've done some Ruby in my day. Just. I'm just not there. Just not there. Not feeling Ruby. As long as you're not using a yoga ball, you're good. Okay, honestly, I've said this before. I used to sit on a yoga ball. I swear I did it before I ever knew who promised. I've known hoopramagin is.

02:48:57
<transcript>: for two months

02:48:57
jaystation3x: And another one, made by another Adam https://blurdle.aydev.uk/

02:48:58
neochromer: Ruby is the language I had the most fun with

02:49:06
<transcript>: For two months. Okay, when I joined Twitch, that's the first I ever learned to primerton, which is the travesty. I can't believe I didn't know about Prime Jim before that, but I just learned to Prime Jun last two months.

02:49:08
<transcript>: Rewind three years ago.

02:49:08
<transcript>: when we were

02:49:23
<transcript>: When we were in our condo, before we built our house, when I didn't have this amazing office, I sat on a Swiss ball, an exercise ball because I didn't have a tear. And my wife thought it'd be good for my back. So I used to do that.

02:49:23
<transcript>: if you used to work

02:49:26
<transcript>: If you used to work with me two, three years ago.

02:49:26
<transcript>: you saw me

02:49:31
<transcript>: You saw me on calls. Setting there on my medicine ball bouncing around. I used to do it.

02:49:31
<transcript>: not saying

02:49:36
<transcript>: Not saying that prime didn't stole it for me because I wasn't on the internet at the time. No one knew who I was.

02:49:36
<transcript>: but

02:49:39
stroopwafel26: @jaystation3x love it

02:49:41
<transcript>: But I'm just saying, if I ever go back to Medicine Ball, that's just because it's good for your back.

02:49:44
jenswoeste: as long as you are not using coconut oil youre good

02:49:48
<transcript>: I just Googled it and someone else made this already seems to take forever to load, though. Oh, my goodness. They'd literally named it Blurtle.

02:49:56
<transcript>: Jay, this whole thing is a lie. Do you steal this whole idea? I'm just kidding. I know you didn't, but this is an actual thing.

02:50:00
<transcript>: Blurtle? Oh, yeah? This takes forever to load? We're gonna do better.

02:50:05
<transcript>: Sorry, that's not a Slam on whoever made Blurtle.

02:50:05
<transcript>: it just

02:50:09
<transcript>: It just occurred to me. So the first project I've ever created where I don't have a domain yet.

02:50:11
<transcript>: Or a logo.

02:50:15
<transcript>: I haven't hired David to make a logo for this thing. I haven't had time.

02:50:22
<transcript>: Rick, I would be very curious about your experience with SSD.

02:50:22
<transcript>: dax is

02:50:25
<transcript>: Dax is one of my dearest Twitter friends.

02:50:25
<transcript>: and i

02:50:40
<transcript>: And I still haven't used SST. It's something I'm ashamed of, actually, every day that I remember, I haven't used SSD. I remember that we can probably only be so close. Me and Dad's, I can probably only be so close to DAX if I haven't used his thing.

02:50:51
uberrick: blurdle.photo is using our machine to mine crypto

02:50:53
<transcript>: Okay, don't worry. We'll make it blazingly fast. Yeah, I still haven't seen this thing load. So we're gonna continue forward. Even the name? I don't know. Another one made by another atom. What Blurtle is like.

02:50:53
<transcript>: we're making

02:50:55
<transcript>: We're making the third Blurtle.

02:50:55
<transcript>: we call it third

02:50:57
<transcript>: We call it Third Blurtle.

02:51:08
<transcript>: New Burdle is available using the search bar at the bottom. Your task is to guess what the Blurtle is, and if you guesses possible, be careful. You have Max six tries. Let's try it. Adam, look at this.

02:51:10
uberrick: That's a joke but still not loaded for me either :D

02:51:11
shaaah: blurdle the third

02:51:12
<transcript>: We'd be the second Blurtle made by an atom.

02:51:17
<transcript>: What is this? I get to choose what it is.

02:51:24
<transcript>: I'm sorry. What? Oh, this just is just guessing. It's not like we're at all. This is like.

02:51:24
<transcript>: guess what

02:51:27
<transcript>: Guess what the animal is. Well, that's definitely like.

02:51:28
bluemeansgay: LUL

02:51:30
<transcript>: An Emu or something, right? Yeah.

02:51:32
k1ng440: lamma?

02:51:33
<transcript>: No.

02:51:35
stroopwafel26: you can type

02:51:36
<transcript>: Is it a.

02:51:37
andreull: Llama

02:51:39
<transcript>: It's like a llama.

02:51:41
jaystation3x: brontosaurus

02:51:42
e13e7: it's a jackal!

02:51:45
<transcript>: There we go. That's the word and Emu is not what I was thinking. It was. Is it.

02:51:53
<transcript>: Next borderline. Okay, so we're gonna do different than this. But I do hate that the name is Blurtle. That there's two other blurdles that feels bad.

02:52:06
<transcript>: Our neocomer really enjoys Ruby. Okay, as long as you're not using coconut oil, you're good. Okay. I mean, my wife does use a lot of coconut oil, but I'm not gonna I'm not gonna start that conversation.

02:52:06
<transcript>: i don't want

02:52:09
<transcript>: I don't want to be prime. He's just so cool.

02:52:09
<transcript>: how can you not

02:52:11
tnodotre: https://blurdle.me at least 3 :)

02:52:12
k1ng440: damn what theme are you using in neovim?

02:52:17
k1ng440: dont say tokyonight?

02:52:20
<transcript>: How can you not watch Prime Stream on Twitch and not want to be him a little bit, right? Like I don't want to be anybody else I know. Be yourself, be the best you you can be all the stuff I get it.

02:52:20
<transcript>: but prime's so cool

02:52:21
<transcript>: But Prime's, so cool.

02:52:23
k1ng440: i dont wanna be him

02:52:26
k1ng440: i wanna be myself

02:52:32
e13e7: I'm like prime when I'm not on my meds

02:52:32
shaaah: You are not that guy pal, you are not that guy

02:52:33
uberrick: I didn't realise sst was Dax's baby haha. First impression has been really good

02:52:41
<transcript>: I just it's it's easier with prime to not, like, feel bad when to be in because I know everybody wants to be in. But also, there's no bit of me that thinks I could be him because I don't know how his brain works that fast. I don't know how anyone's brain is capable of working that fast. That makes it like he's like Michael Jordan. It's like nobody else.

02:52:48
<transcript>: Is trying to be him because they know they can't be him. I know I can't be prime, but I can deliver him from afar.

02:52:48
<transcript>: blue

02:52:50
<transcript>: Blue thanks so much for the follow.

02:52:53
<transcript>: Using our machine to mine crypto.

02:52:53
<transcript>: cheese

02:52:57
<transcript>: Cheese. Yeah, it's still not loaded. Okay, we're gonna close this one.

02:52:57
<transcript>: this

02:53:00
<transcript>: This Blurtle. But this one is real.

02:53:04
<transcript>: Blurtle the third.

02:53:05
tnodotre: https://blurdle.fun seems closer toe the one u plan on making

02:53:09
<transcript>: You can type oh, I just didn't know you can type bronzeaurus.

02:53:09
<transcript>: it's a jack

02:53:12
<transcript>: It's a Jackal. Welcome to Chat E. One.

02:53:15
<transcript>: First time chat TNO.

02:53:16
<transcript>: tnori

02:53:16
<transcript>: tnori welcome

02:53:17
<transcript>: Tnori welcome.

02:53:17
<transcript>: welcome welcome welcome welcome

02:53:21
<transcript>: Welcome, welcome, welcome, welcome, Blurtle Up Me There's a already three of them welcome to chat.

02:53:23
tnodotre: (but not the same either)

02:53:23
<transcript>: Jeez.

02:53:23
<transcript>: how many blur

02:53:29
tnodotre: HeyGuys

02:53:30
<transcript>: How many blurdles? J? I thought this was. I thought you had an original idea. This is actually the one where you type.

02:53:34
<transcript>: This is how you type? Okay, who's that look? Like.

02:53:34
<transcript>: dan

02:53:37
<transcript>: Danny DeVito for sure.

02:53:39
<transcript>: No.

02:53:42
danielgerep: The fact you don't have bangers playing in the background is a + in my opinion, you are not ThePrimeagem =)

02:53:43
<transcript>: Who is this? Who is this.

02:53:46
niftynate80: @mergin I think you can get type safety and perhaps transactions on top of a pooled connection with keysely https://www.npmjs.com/package/kysely

02:53:52
jenswoeste: hugh grant?

02:53:52
<transcript>: Sam, I'm just making something up so I can see if it gets less blurry? Oh, it's the jewelry. Johnny Depp, Johnny, John.

02:53:52
<transcript>: dip

02:53:54
<transcript>: Dip.

02:53:58
<transcript>: There he is. That's totally giant. Up, right.

02:53:58
<transcript>: got it

02:54:00
<transcript>: Got it. Nailed it.

02:54:00
<transcript>: what

02:54:03
jaystation3x: There are no original ideas, apparently. I once "invented" a UV-sterilizing toothbrush case.

02:54:03
e13e7: johnny davito

02:54:04
<transcript>: What theme am I using? A new of him you can go to.

02:54:05
adamelmore: !github

02:54:05
fossabot: Adam's neovim config lives here: https://github.com/adamelmore/nvim

02:54:10
<transcript>: This GitHub repo and see it's Dracula in terms of the colors. It's not cookie at night.

02:54:14
nexxeln: gg

02:54:15
<transcript>: You don't want to be him. You want to be yourself. Same here, King. I'm with you. Let's be ourselves.

02:54:18
<transcript>: Mike Prime When I'm not on myths.

02:54:25
<transcript>: You're not that guy, pal. You are not that guy. I am not sure. Are you talking about me? And are you talking about me not being.

02:54:25
<transcript>: prime because

02:54:27
<transcript>: Prime because I'm definitely not.

02:54:27
<transcript>: i didn't

02:54:31
k1ng440: what font?

02:54:32
<transcript>: I didn't realize SSC with Dax's, baby. Yeah, first impression was really good.

02:54:32
<transcript>: i mean

02:54:41
<transcript>: I mean, DAX is. I don't know. I think he's a founder. I think he's, like, kind of came in after the two founders had started it. And now he's kind of like another founder. He does so many things there.

02:54:43
<transcript>: Blurtle, fun.

02:54:43
<transcript>: how many birds

02:54:44
<transcript>: How many birds.

02:54:51
<transcript>: How many blurdles are there? Here? I thought we were making something original. Something new. Unique. Play. The intentionally.

02:54:51
<transcript>: or intern

02:55:00
<transcript>: Or internationally popular word game, but with a twist. Hidden image is real as you choose correct letters. This is the idea. Oh, but not like that. That's not how we want to do it.

02:55:03
<transcript>: We're not doing it that way.

02:55:06
shaaah: imagein jay is the creator of all of it

02:55:07
<transcript>: I appreciate the creativity, but that's not how we're doing it.

02:55:09
<transcript>: Okay.

02:55:26
<transcript>: Okay. The fact that you don't have bangers playing in the background is a plus. In my opinion, you are not the primary. I agree, Daniel. I'm not surprised in I cannot be the private in. I think you can get type safety and perhaps transactions on top of a bold connection with Kaisely. Yes.

02:55:29
<transcript>: That's right.

02:55:29
<transcript>: kaisely

02:55:31
<transcript>: Kaisely is really cool. Nifty. Nate.

02:55:37
<transcript>: Dax is a big fan of Kaisely, and I know the SSD folks are.

02:55:46
<transcript>: Okay, I'm just catching up. I just saw where Yin's guest Hugh Grant. That was a good guess. No original ideas, apparently.

02:55:56
<transcript>: He wants invented a UV sterilizing toothbrush case. Is that a thing? Because I want one Johnny DeVito. That's funny. Okay. What font? Its operator mono. Okay, here we go.

02:56:08
<transcript>: We're gonna actually build blurdle, even though there's four of them already. I guess we're gonna build the fifth Blurtle here's. Adam. Yeah. Oh, cool. I like it. So a lot blazing fast.

02:56:11
<transcript>: I hope that's Ironically.

02:56:21
<transcript>: How should I search? So you write the blog. Okay. Why am I doing this? Why am I doing this? I'm so distracted. Let's do it. Let's build our thing.

02:56:21
<transcript>: so

02:56:24
<transcript>: So I was kind of curious. Why.

02:56:24
<transcript>: the

02:56:33
<transcript>: The why Niev is blowing up on this file tree sitter highlighter error error executing we've got some issues you know my neovim has seen better days.

02:56:33
<transcript>: any of

02:56:35
<transcript>: Any of them config.

02:56:35
<transcript>: it's kind of struggling

02:56:37
<transcript>: It's kind of struggling.

02:56:40
<transcript>: Trees that are highlighter.

02:56:40
<transcript>: it's struggling enough

02:56:42
<transcript>: It's struggling enough that I kind of want to fix it.

02:56:46
<transcript>: How do I want to fix it? Let's just open it up. Here.

02:56:48
mergin: @adamelmore im a fresh web developer actually. its been 10 months as full time web developer. i was out of idea and i couldnt create a website. because i hate stealing peoples idea. so i stole idea from my desktop. i love and use gnome on linux system for more than 10 years and it looks like gnome. is it a good idea or should i change it to something?

02:56:51
<transcript>: We're gonna go to Yep.

02:56:52
nexxeln: just restart neovim maybe?

02:56:58
<transcript>: The six new of M with Neovem. The only way you can fix new of them is with Neil them.

02:57:01
<transcript>: So we've added some plugins.

02:57:01
<transcript>: and i

02:57:02
<transcript>: And I.

02:57:02
<transcript>: think

02:57:04
<transcript>: Think.

02:57:04
<transcript>: things got

02:57:06
bluemeansgay: PackerSync?

02:57:07
<transcript>: Things got bad when we added some plugins.

02:57:08
<transcript>: Oh, look at this.

02:57:08
<transcript>: see do you see

02:57:10
<transcript>: See? Do you see that.

02:57:13
mergin: @niftynate80  i will check it out. thanks

02:57:15
<transcript>: Random random stuff breaking feels bad.

02:57:18
<transcript>: We'll start by Packer, syncing.

02:57:18
<transcript>: or it'll just say

02:57:20
<transcript>: Or it'll just say, this file. I think that'll be.

02:57:23
<transcript>: What.

02:57:23
<transcript>: no

02:57:25
<transcript>: No, don't. Override what.

02:57:32
<transcript>: I don't know what it means overwrite this file, so I have it open somewhere else. I guess I do.

02:57:38
<transcript>: Okay. Let's see if we can just update some plugins, and maybe things will be better.

02:57:48
<transcript>: It's all the plugins that we're having issues for me have updates. So I'm feeling good, feeling good about our chances here.

02:57:51
<transcript>: Okay.

02:57:51
<transcript>: let's just

02:57:55
<transcript>: Let's just let's just hope that fix it. Let's go back to our T. Three SEC.

02:57:59
<transcript>: I didn't change anything today.

02:57:59
<transcript>: no

02:58:01
<transcript>: No, don't? Yeah.

02:58:01
<transcript>: here we go

02:58:02
<transcript>: Here we go.

02:58:08
<transcript>: So we were looking in here in environment, trying to understand.

02:58:13
<transcript>: That's still broken. Thanks for the follows Abdor and the sociologist.

02:58:13
<transcript>: and

02:58:15
<transcript>: And satrak.

02:58:19
<transcript>: So it didn't fix this issue, did it.

02:58:23
<transcript>: Didn't fix it. Still an issue.

02:58:28
luhagel: TSUpdate?

02:58:29
<transcript>: It'll have a tree sitter highlighter error error error expected.

02:58:30
danielgerep: What's the error message?

02:58:30
bluemeansgay: :TSInfo I guess

02:58:32
<transcript>: Lua something.

02:58:40
<transcript>: Like it's a big, big, big air. Look at this. Look at all these errors.

02:58:40
<transcript>: oh feels bad

02:58:41
<transcript>: Oh, feels bad.

02:58:41
<transcript>: i

02:58:45
<transcript>: I opened anything. Let's see. Let's open a TypeScript file.

02:58:45
<transcript>: yeah

02:58:48
<transcript>: Yeah. Okay. So it's working on TypeScript. Just not on.

02:58:53
<transcript>: Not on.

02:58:59
<transcript>: Js files or not come to us. Esm. Javascript.

02:59:03
bluemeansgay: that's why like neovim

02:59:04
<transcript>: Bummer. Well, I wanted to look at these. It hurts my eyes a bit.

02:59:04
<transcript>: my

02:59:06
nexxeln: do you have treesitter parser for js installed?

02:59:07
<transcript>: My eyes to look at these files because of all the errors.

02:59:07
<transcript>: but

02:59:14
<transcript>: But basically this is just environment variables. Is that what I'm gathering next one to have creates the departure for JSON solved.

02:59:18
<transcript>: Precider parser.

02:59:18
<transcript>: i believe so

02:59:19
<transcript>: I believe so.

02:59:22
<transcript>: No LS.

02:59:25
<transcript>: Ts Server flow.

02:59:29
<transcript>: Wait, tree, sitter parser.

02:59:31
<transcript>: I don't know what you mean.

02:59:32
nexxeln: :TSInfo

02:59:34
<transcript>: Consider parser. I've got it installed.

02:59:36
<transcript>: Got three sitter.

02:59:39
<transcript>: Ts info.

02:59:44
<transcript>: On an editor command.

02:59:48
<transcript>: Ps.

02:59:52
<transcript>: Install Info Module info.

03:00:00
<transcript>: We'll try TS module info.

03:00:02
<transcript>: No.

03:00:02
<transcript>: not this thing

03:00:03
<transcript>: Not this thing.

03:00:04
k1ng440: run TSupdate

03:00:08
<transcript>: Let's try TS.

03:00:08
<transcript>: install

03:00:09
<transcript>: Install info.

03:00:13
<transcript>: And I'm looking for what was it.

03:00:16
<transcript>: Js. For JavaScript.

03:00:18
<transcript>: Javascript installed.

03:00:22
nexxeln: javascript

03:00:24
<transcript>: I do, I do.

03:00:32
<transcript>: Update.

03:00:37
<transcript>: Okay.

03:00:37
<transcript>: it's

03:00:39
<transcript>: It's trying.

03:00:47
<transcript>: I'm feeling I need to remove some plugins. I think I just installed something and everything broke.

03:00:53
bluemeansgay: NotLikeThis

03:00:56
<transcript>: Okay.

03:01:09
crohm: Larabar ? PogChamp

03:01:10
<transcript>: Oh, look at that.

03:01:12
<transcript>: Look at that.

03:01:12
<transcript>: thank you

03:01:14
<transcript>: Thank you so much.

03:01:20
<transcript>: Thank you, thank you. Thank you. That is a Lar bar. That was a Pinbird chocolate chip bar.

03:01:20
<transcript>: i think it's an actual

03:01:20
nexxeln: NICE

03:01:22
bluemeansgay: SeemsGood

03:01:22
<transcript>: I think it's an actual men King for help me out there.

03:01:34
<transcript>: Also Lou. However, welcome to Chat. Thank you for the TS update recommendation. I just missed it.

03:01:37
<transcript>: Okay.

03:01:37
<transcript>: so we are

03:01:39
<transcript>: So we are T three stacking.

03:01:39
<transcript>: we're just

03:01:41
<transcript>: We're just trying to look at what these files are.

03:01:42
stroopwafel26: this stream is sponsored by larabar

03:01:48
<transcript>: They didn't include sod.

03:01:51
<transcript>: That errors.

03:01:56
<transcript>: I validate that client side environment variables are exposed to the client. Okay.

03:01:59
<transcript>: It doesn't.

03:01:59
k1ng440: what font?

03:02:00
k1ng440: i want it

03:02:01
<transcript>: Try to understand here.

03:02:01
<transcript>: this

03:02:03
nexxeln: so whenever you need to add env variables, you put it in env/schma.js

03:02:04
<transcript>: This is to give me type safety in my client.

03:02:04
<transcript>: in my environment

03:02:07
<transcript>: In my environment. Variables. Is that what I'm gathering.

03:02:07
<transcript>: because

03:02:09
<transcript>: Because what you told me.

03:02:09
nexxeln: @k1ng440 operator mono

03:02:13
<transcript>: Here. We got some of this.

03:02:15
<transcript>: Inside. Okay.

03:02:22
<transcript>: So whenever you need to add environment variables, you put them in environment. Schema. Js. Okay.

03:02:29
<transcript>: So ski map? Js was this one.

03:02:29
<transcript>: oh here

03:02:32
<transcript>: Oh here. So I just add. Okay.

03:02:38
<transcript>: These are reading them from something.

03:02:44
<transcript>: You were saying I put them right here.

03:02:49
<transcript>: Oh, this is the scheme of.

03:02:49
<transcript>: these are the

03:02:51
<transcript>: These are the actual.

03:02:51
<transcript>: what

03:02:53
<transcript>: What.

03:02:53
nexxeln: zod is for validating @adamelmore

03:03:01
<transcript>: All right, I'm explaining. It like I'm five. Next one Zott is for validing. Yeah. Okay. That's a team of validation. I remember that now.

03:03:01
<transcript>: but where do i

03:03:02
nexxeln: you put your env vars in .env

03:03:04
<transcript>: But where do I define them? Like I would do.

03:03:04
<transcript>: the client

03:03:12
<transcript>: The client schema. This is a server schema. And this is the client in Vim environment. If I wanted a server environment, I would define.

03:03:12
<transcript>: similar

03:03:13
<transcript>: Similar.

03:03:16
<transcript>: Server ends, and then I just.

03:03:16
<transcript>: write

03:03:17
<transcript>: Write.

03:03:21
<transcript>: Like this one is pulling from the environment.

03:03:21
<transcript>: i still

03:03:25
<transcript>: I still have to define them in a dot in file or no.

03:03:25
<transcript>: i

03:03:29
<transcript>: I could read all these comments, but you're like here, and I just feel like I should ask you.

03:03:29
<transcript>: you

03:03:35
<transcript>: You put your environment available in them. Yeah. Okay. That's. So we'd have a dot in here.

03:03:40
<transcript>: Is there one.

03:03:40
<transcript>: is this hidden

03:03:41
<transcript>: Is this hidden? Or.

03:03:41
<transcript>: there's not

03:03:43
<transcript>: There's not one.

03:03:46
<transcript>: Bad one.

03:03:46
<transcript>: that is

03:03:48
<transcript>: That is not local.

03:03:49
nexxeln: yeah we include one

03:03:52
<transcript>: What did I just do.

03:03:52
<transcript>: right

03:03:53
<transcript>: Right.

03:03:53
<transcript>: i put it

03:03:55
<transcript>: I put it in the wrong directory.

03:03:58
nexxeln: its hidden in your nvim-tree

03:04:00
<transcript>: Where is it.

03:04:04
nexxeln: we have it in .env

03:04:04
<transcript>: What is this? Inventory.

03:04:04
<transcript>: refresh or

03:04:06
<transcript>: Refresh or something.

03:04:09
<transcript>: Oh, it's hidden.

03:04:12
<transcript>: You already have it in Dynamic, just hidden. Okay.

03:04:16
nexxeln: you have hidden env vars in your nvim-tree

03:04:18
<transcript>: Is there anything sensitive? Can I just open that misdead? Oh, look at that.

03:04:22
<transcript>: Cool, cool cloak. Thanks, laden.

03:04:22
<transcript>: 's the best

03:04:23
<transcript>: 's the best.

03:04:28
<transcript>: This is where you put a secret discord client. Id. Cool. Okay. This is great.

03:04:33
<transcript>: Cool, cool.

03:04:33
<transcript>: let's see

03:04:34
nexxeln: nothing sensitive

03:04:36
<transcript>: Let's see so that's our dot in.

03:04:40
<transcript>: Out of the TypeScript stuff works.

03:04:40
<transcript>: we look at

03:04:48
<transcript>: We look at pages. Let's look at our server. This is our Kierpc code. This is where I really want to. I want to start digging in. Right. So, client DB.

03:04:54
<transcript>: I'll just all those TRPC experts. They're just gonna watch me learn stuff that you've known forever.

03:04:54
<transcript>: global

03:04:56
<transcript>: Global Prisma client.

03:05:05
<transcript>: Export Cost Prisma is Global Prisma or New Prismal client. Okay.

03:05:13
double112233: Hi Adam

03:05:16
<transcript>: Note in development query error worn here. Okay. So it's like logging levels. And then if node environment doesn't make a production global Prisma equals Prisma.

03:05:16
<transcript>: so

03:05:20
<transcript>: So in production, you don't set it on global.

03:05:21
<transcript>: I'm gathering.

03:05:22
nexxeln: this is just how you define the prisma client, its the recommended way by the prisma guys in nextjs

03:05:25
<transcript>: Okay.

03:05:37
claudiofreitas3: is it some neovim plugin that is hiding the env var values?

03:05:44
<transcript>: I'm learning all kinds of new things. High double. Welcome to chat.

03:05:46
double112233: @adamelmore does fetch/axios follow redirect response?

03:05:50
nexxeln: https://create-t3-app-git-fork-c-ehrlich-docker-db-t3-oss.vercel.app/en/usage/env-variables here's some docs

03:05:54
<transcript>: This is just how you define the Prisma client. It's a recommended way by the Prisma guys. And next to us. Yeah, I figured so.

03:05:54
<transcript>: i'm

03:05:55
k1ng440: wtf is superjson

03:06:01
<transcript>: I'm just learning so many new things at once. Some of them are T three related. Some of them are just the tools related.

03:06:13
<transcript>: It is Claudio. It's cloak. Someone already answered you. No, no, they didn't. It's cloak. By Leighton. Our very own latent. I don't know if latent. Still here. But say Hi, laden.

03:06:13
<transcript>: so smart thanks

03:06:15
<transcript>: So smart thanks for the follow.

03:06:15
<transcript>: thank you so much

03:06:28
<transcript>: Thank you so much for your follows. I get really excited when I see your follows. You know why? Because that means you might come back if you followed me. It's probably because you like what we got going here. There's something about it. It's like we had a first date. You liked it.

03:06:33
stroopwafel26: 1500+ followers wow

03:06:42
<transcript>: And that means I might see you back. And I really like having people to talk with while I work. It's the best. After 15 years of doing this stuff, I did it all alone for 15 years, which was so dumb. I could have had people right here with me.

03:06:42
<transcript>: in twitch chat

03:06:44
<transcript>: In Twitch, chat.

03:06:47
<transcript>: 1500 followers.

03:06:47
<transcript>: wow

03:06:48
<transcript>: Wow.

03:06:48
<transcript>: we just

03:06:50
<transcript>: We just did our thousand followers.

03:06:50
<transcript>: celebration not that

03:06:54
double112233: does fetch/axios follow redirect response?

03:06:55
<transcript>: Celebration not that long ago. Feels like 500 new friends so quickly.

03:07:01
<transcript>: Router. Okay, so index. What am I looking at? What is super? Json. Who wants to tell me what that is.

03:07:03
<transcript>: So I don't Google it.

03:07:08
<transcript>: Does fetch Axios follow redirect response.

03:07:11
<transcript>: Actually don't know.

03:07:11
<transcript>: feel like i should know

03:07:12
stroopwafel26: 2000 follower party coming up soon

03:07:13
<transcript>: Feel like I should know the answer to that. And I don't know.

03:07:15
andreull: Man I am staring at this app for 3 days now. I only made a e-commerce in CReactApp up until now.

03:07:25
<transcript>: Okay app router create router which is from context.

03:07:25
<transcript>: now i

03:07:28
k1ng440: @double112233 yes

03:07:28
neochromer: superjson - Safely serialize JavaScript expressions to a superset of JSON, which includes Dates, BigInts, and more. -

03:07:28
<transcript>: Now I got to know what context is.

03:07:32
<transcript>: Create context, inner.

03:07:32
<transcript>: we're

03:07:38
luhagel: Superjson extends the json serialization so more complex types like dates can be sent to the client

03:07:39
<transcript>: We're gonna spend, like most of the time, this learning Petrie sack. And then we're gonna spend a little bit of time making Blurtle the five, Blurtle, the fists.

03:07:41
<transcript>: Click context.

03:07:43
nexxeln: superjson is json extended, lets say you have a datetime, json will make that a string when you serialize it, superjson will keep that a datetime

03:07:45
<transcript>: The actual context of the user router.

03:07:51
<transcript>: This is really well structured. Nextle got to say.

03:07:53
<transcript>: This is really well made.

03:08:00
<transcript>: If you have comments you have comments in here which are so nice.

03:08:01
nexxeln: also you should see the docs i sent

03:08:04
<transcript>: You tell I'm not like a library author author because I'm impressed by comments.

03:08:08
<transcript>: The bar is low when you're a Pragmatic app development.

03:08:11
<transcript>: Obsession.

03:08:11
<transcript>: use this

03:08:15
<transcript>: Use this helper for testing. Create context inner.

03:08:17
<transcript>: Create context.

03:08:17
<transcript>: bit

03:08:20
<transcript>: Bit server auth session let's go there.

03:08:27
<transcript>: Unstable get server session, which is a next Auth API. Okay.

03:08:36
<transcript>: Get server session so I've used next off quite a bit I guess I've never used this.

03:08:39
<transcript>: And now I'm curious.

03:08:39
<transcript>: get

03:08:41
<transcript>: Get server session.

03:08:55
<transcript>: Feel like I get the session on the server, but I do it a different way. And I'm wondering, what is this? Do.

03:08:56
nexxeln: that lets you access the session in the server side trpc code

03:09:01
<transcript>: Thanks for the Follow Veil tour. That's valpyour.

03:09:02
nexxeln: through the trpc context

03:09:04
<transcript>: Okay super JSON.

03:09:06
stroopwafel26: many new followers today going by the sounds

03:09:07
<transcript>: Super JSON.

03:09:13
<transcript>: Safely serialized JavaScript expressions to a superset of JSON.

03:09:13
<transcript>: which includ

03:09:17
<transcript>: Which includes dates, begins, and more. Oh, that's cool.

03:09:17
<transcript>: since adjacent

03:09:17
valtior123: wanna see something cool I made? maybe you can add it to a web app sometime

03:09:23
<transcript>: Since adjacent's two relationships so more complex types of dates can be sent to client that's actually really cool. Never heard of it.

03:09:23
<transcript>: let's say you have

03:09:39
<transcript>: Let's say you have a daytime just. I'll make that. Yeah, a string when you serialize it super. Jess. I will keep it as a date time. Very cool. Should see the docs you sent. Where did you send them? Necklain. That lets you access the session in the servers. Side TFC code through TRFC context.

03:09:39
<transcript>: okay

03:09:40
<transcript>: Okay.

03:09:40
<transcript>: let's see something cool

03:09:44
<transcript>: Let's see something cool. I mean, maybe you can add it to a web app sometime. Sure. Valtior.

03:09:44
<transcript>: where

03:09:50
<transcript>: Where are the docs? Where are the docs? There they are. I miss this next one. Sorry. Here's some docs. Copy. Like.

03:10:16
<transcript>: Let's see. So these are Docs for the environment variables. Oh, this is just Docs for the whole Create T three app. Oh, this is great. I can stop bugging you next one, you might need to take a bathroom break or just leave the stream because you're tired of it. And now I've got Docs. I should have looked for these from the beginning.

03:10:22
<transcript>: Okay.

03:10:26
nexxeln: it isn't finished @adamelmore

03:10:27
<transcript>: So this is going over all the files. So I don't have to blindly.

03:10:27
<transcript>: look through them

03:10:28
<transcript>: Look through them.

03:10:35
<transcript>: Very cool.

03:10:35
<transcript>: deployment

03:10:38
<transcript>: Deployment on Versailles is what we will do.

03:10:42
<transcript>: Okay.

03:10:42
<transcript>: let's

03:10:48
<transcript>: Let's let's start building it. What do you say? We ready to start building it. Protect examples. Here's a route.

03:10:51
<transcript>: Create protected router.

03:11:02
<transcript>: Message get session.

03:11:02
<transcript>: create pro

03:11:07
<transcript>: Create procted router let's just do so it has the middleware.

03:11:07
<transcript>: if there's not

03:11:13
<transcript>: If there's not a session or not a user, then we do TrpC error unauthorized cool.

03:11:13
<transcript>: otherwise

03:11:16
<transcript>: Otherwise we return the context with the session. Okay.

03:11:16
<transcript>: all

03:11:19
<transcript>: All great stuff. This is great.

03:11:22
<transcript>: I'm excited to build something with it.

03:11:22
<transcript>: so

03:11:25
<transcript>: So I guess I need to go to my schema.

03:11:34
<transcript>: I need to go up here to my schema. And we need to talk about what is our schema? What does it look like.

03:11:34
<transcript>: provider

03:11:40
<transcript>: Provider sequel light when using Postgres. Mysql or SQL server uncommon the DB text we're going to use.

03:11:46
<transcript>: Plan. Scale. Right. Host it all the way. Everything hosted.

03:11:51
<transcript>: Alright.

03:11:51
<transcript>: i need to take another

03:11:53
<transcript>: I need to take another break.

03:11:53
<transcript>: and

03:11:55
<transcript>: And what are we at 3 hours.

03:11:57
ako_freshman: that's what she said

03:11:59
<transcript>: When I come back, it isn't finished.

03:12:06
<transcript>: Welcome to Chad Echo. That's a good one. That was a good one to enter into chat with.

03:12:26
<transcript>: I'm gonna be right back and we will set up planet scale. We'll start configuring this whole thing, laying out our game, figuring out what our schema looks like. We're building this thing Blurtle. We're building another blurdle. The world does not have enough lirdles. In my opinion, we're building another blurredle. Be right back.

03:12:29
andreull: blurdle v2.0

03:13:09
claudiofreitas3: this waiting scene is so polished, love it! :D

03:19:44
jenswoeste: sounds like a DeLonghi coffee machine?

03:23:13
<transcript>: All right.

03:23:20
<transcript>: So I'm not sold on Blurtle. I think the name we need to come up with a different name.

03:23:27
<transcript>: I can't handle the fact that there's already like three or four blurdles. It just bothers me.

03:23:33
<transcript>: Hey as separate still here step rows. You enjoy the music hope so.

03:23:34
privann: "Not Wordle" ?

03:23:36
<transcript>: All right, let's get back to it.

03:23:41
<transcript>: Not Wordle. That's not bad. I like that PROVON.

03:23:41
<transcript>: not

03:23:43
<transcript>: Not Wordle.

03:23:46
<transcript>: It's almost weirdle, but not weirdle.

03:23:46
valtior123: here is the repository check it out if you like. https://github.com/orderisnotchaos/calculator

03:23:48
<transcript>: Okay so provider.

03:23:52
<transcript>: Provider is not SQL Light provider.

03:23:59
jenswoeste: neoblurdle

03:23:59
<transcript>: There's going to be MySQL I guess that's my guess.

03:23:59
<transcript>: what was it time safe

03:24:01
<transcript>: What was it? Time. Safe.

03:24:04
<transcript>: Is it type safe.

03:24:08
<transcript>: Are these things. Look at that.

03:24:15
<transcript>: Got nothing on those.

03:24:17
jenswoeste: blurdleplusplus

03:24:18
<transcript>: I'm guessing.

03:24:18
<transcript>: oh my

03:24:19
<transcript>: Oh my.

03:24:22
<transcript>: Uncommon the DB.

03:24:22
<transcript>: text

03:24:25
<transcript>: Text annotations in my.

03:24:25
<transcript>: account below

03:24:27
<transcript>: Account below. Okay.

03:24:27
<transcript>: so these

03:24:29
<transcript>: So these should be DVD text.

03:24:42
<transcript>: Okay, next serve for next off. So these are accounts in necks off. This is the session.

03:24:45
<transcript>: This is the user.

03:24:55
<transcript>: And a verification token. Okay, let's see what we got. Let's deploy all this and see, let's set a planet scale, I guess.

03:24:55
<transcript>: data

03:24:57
<transcript>: Database, URL.

03:25:04
<transcript>: Planet scale.

03:25:12
<transcript>: How do I log in.

03:25:12
<transcript>: login

03:25:14
log1400: what are we doing?

03:25:15
<transcript>: Login, go to dashboard.

03:25:19
<transcript>: Let's do I need to go fuzzy here. I think I need to go fuzzy.

03:25:19
<transcript>: what are we doing

03:25:23
<transcript>: What are we doing? Long. We're creating a new app.

03:25:23
<transcript>: oh i get

03:25:29
<transcript>: Oh, I get one free database. I need to add a credit card, additional scalar plan database compared for $29 each month.

03:25:30
jenswoeste: birdle (bird is the word - The Trashmen - Surfing Bird)

03:25:32
<transcript>: Do I need this first database.

03:25:37
<transcript>: I want to pay them $30 per day to base each month.

03:25:37
<transcript>: i guess

03:25:38
<transcript>: I guess.

03:25:42
<transcript>: I guess I do my fuzzy. Yeah. Okay.

03:25:46
<transcript>: Let's turn off well, guess I can just do this.

03:25:48
<transcript>: Ooh.

03:25:49
cowfacedude99: time for go hidy-hidy.....

03:25:51
<transcript>: Turn that off.

03:25:58
<transcript>: Keycaster. I guess it gets blurred too, doesn't it.

03:26:02
<transcript>: It gets blurred to.

03:26:02
<transcript>: turn it back

03:26:05
<transcript>: Turn it back on. Okay.

03:26:17
<transcript>: Someday I need I really need to, like, figure out.

03:26:17
<transcript>: all

03:26:20
<transcript>: All of the things.

03:26:31
<transcript>: All of the SAS subscription I have and clean the mouse. I pay a lot of people a lot of money over the month each month and I probably don't use half of it. I need a price to that sometimes.

03:26:31
<transcript>: okay

03:26:36
<transcript>: Okay. Overview. So I want to add a new database. Create new database.

03:26:38
<transcript>: Name.

03:26:38
<transcript>: i don't

03:26:44
<transcript>: I don't want to call it Blurtle, because, like, we don't want to name it Blurtle. Bertle.

03:26:44
<transcript>: bird is

03:26:47
<transcript>: Bird is the word the Trashman. Surfing, bird.

03:26:53
<transcript>: Blurtlefuff Plus Neo Blurtle.

03:26:58
<transcript>: Vetor. Valtor sent me a calculator.

03:26:58
<transcript>: he said

03:27:00
<transcript>: He said, I might use that.

03:27:12
<transcript>: We're just gonna call it Lirl. We're gonna call the database Blurtle at least. And maybe we'll just have a database name. Something weird when we don't name our project. That okay. You can use.

03:27:12
<transcript>: this

03:27:13
<transcript>: This.

03:27:21
<transcript>: Okay. We got a Blurtle database. Cool. So then planet scale. Let's see here.

03:27:24
<transcript>: Unfuzzy.

03:27:27
<transcript>: Prisma.

03:27:27
<transcript>: with plant

03:27:31
jenswoeste: yablurdle (yet another ...)

03:27:32
<transcript>: With plant scale. What do I need to know here? Can planet scale. Here we go.

03:27:35
<transcript>: Quick Start for Prisma.

03:27:36
<transcript>: I've already created.

03:27:36
<transcript>: the db

03:27:38
<transcript>: The DB.

03:27:42
<transcript>: Set up next JS. App.

03:27:45
<transcript>: I think I need to do that. Okay? Prisma.

03:27:48
rudixworld: Hello

03:27:53
<transcript>: I just need to add the database.

03:27:53
cowfacedude99: I guess you can just drop the db url into env.

03:27:55
<transcript>: Url, I guess.

03:27:59
<transcript>: Referential, Referential, integrity.

03:27:59
<transcript>: prism

03:28:00
log1400: just add de enviroment

03:28:01
<transcript>: Prisma. I need to add that here.

03:28:04
<transcript>: Referential.

03:28:07
<transcript>: Inegrity.

03:28:10
<transcript>: Equals Prisma.

03:28:16
<transcript>: Then we have our database, URL and our MySQL provider.

03:28:22
<transcript>: Okay, that looks pretty good.

03:28:24
<transcript>: Pretty good.

03:28:29
<transcript>: Preview Features Referential integrity. Do I want to add browse preview features? I guess so.

03:28:29
<transcript>: i guess i do

03:28:31
<transcript>: I guess I do.

03:28:31
<transcript>: preview

03:28:32
<transcript>: Preview.

03:28:32
<transcript>: features

03:28:34
<transcript>: Features equals.

03:28:36
<transcript>: Referential.

03:28:36
<transcript>: integrity

03:28:40
<transcript>: Integrity hope I spelled the first time you know what I'm saying.

03:28:40
<transcript>: hello

03:28:43
<transcript>: Hello, Rudix. Welcome to chat.

03:28:47
<transcript>: Welcome, welcome, time for Go, Heidi, Heidi.

03:28:57
<transcript>: Yab lirtle yet another blurdle. Hey, that's not bad, Yens. I like that one. Guess you can just drop the DB URL into environment. Yeah, that's what we're gonna do. Cafe.

03:29:02
<transcript>: Just add the environment. Okay, cool.

03:29:06
<transcript>: So I want to add it to dot in local. Probably.

03:29:25
<transcript>: Need a locally proxy into your plans. Go database branches. What I have to do this.

03:29:25
<transcript>: why not have to do that

03:29:28
<transcript>: Why not have to do that? What can I just connect straight to it.

03:29:32
rudixworld: don't you need/miss features like CoPilot with neovim?

03:29:33
log1400: you can use the remote url

03:29:34
<transcript>: I wonder why.

03:29:38
log1400: of the database

03:29:42
<transcript>: You can use remote URL. Okay, we'll just do that. I don't know why I would want to do the local proxy.

03:29:44
<transcript>: Does it say why.

03:29:44
<transcript>: secure

03:29:46
<transcript>: Secure connection.

03:29:51
<transcript>: If I want to connect to a MySQL client, I don't.

03:29:53
stroopwafel26: @RudixWorld you can do copilot in nvim

03:29:54
<transcript>: I don't want to.

03:29:54
<transcript>: push

03:29:57
<transcript>: Push Prisma schema to plant scale.

03:29:58
<transcript>: Okay.

03:29:58
<transcript>: so

03:30:02
<transcript>: So let's work on our schema first and then.

03:30:02
<transcript>: we'll

03:30:03
<transcript>: We'll do that.

03:30:04
rudixworld: oh really?

03:30:09
log1400: this is usefull if you are trying stuff around a new branch

03:30:12
nexxeln: local proxy is convinient

03:30:15
<transcript>: Yeah, Rudyx, you can use copilot. I've actually turned it off.

03:30:15
<transcript>: it was bothering me

03:30:24
<transcript>: It was bothering me in neovim, so I turned it off, but yeah, nothing I miss. I'm gonna make a YouTube video about going from Vs. Code like five years ago.

03:30:31
<transcript>: Totally about in move to neovim totally happy, but not probably for the reasons you'd think that's my clickbaity title.

03:30:35
<transcript>: I'm fully sold on Neil. Them.

03:30:35
<transcript>: and i

03:30:39
<transcript>: And I know all the arguments against, like, spinning time on the stuff. I get it.

03:30:39
<transcript>: but you know what it's

03:30:47
<transcript>: But you know what? It's a hobby. And that's the thing I think is missed in some of the dialogue is like this is just fun. It's just broad.

03:30:47
<transcript>: thing that

03:30:50
<transcript>: Thing that I enjoy doing with my work.

03:30:50
<transcript>: is messing with

03:30:51
stroopwafel26: moved my development setup to nvim, you won't believe what happened next

03:30:58
<transcript>: Is messing with my Editors, and I'm sure Keys is like made lots of content about this. Like it's not just about productivity. In fact, I don't care about productivity pretty much at all.

03:30:58
<transcript>: it's

03:31:00
nexxeln: if it makes you happy it makes you happy

03:31:03
<transcript>: It's about fun. This is a lot of fun. And that's why I use it.

03:31:03
<transcript>: okay

03:31:04
<transcript>: Okay.

03:31:13
rudixworld: sometimes you need change yeah ... I like this product: Nova by Panic Inc.

03:31:13
<transcript>: There's just a feeling like when you do a VM command, like a new one, or you do one that you just got down and it's like you just got it down recently.

03:31:13
<transcript>: that feeling

03:31:16
<transcript>: That feeling of accomplishing something so smoothly.

03:31:19
<transcript>: It's good stuff.

03:31:19
<transcript>: good stuff

03:31:20
<transcript>: Good stuff.

03:31:20
<transcript>: it makes

03:31:21
rudixworld: unfortunately no copilot there

03:31:23
<transcript>: It makes you happy. It makes you happy. Exactly.

03:31:27
<transcript>: Local proxy is convenient. Okay.

03:31:40
<transcript>: So should we? Do you vote next on your word here means lots of me. Do you vote? I use the local proxy.

03:31:44
cowfacedude99: imo the barrier to entry for messing with the editor is the lowest with neovim.

03:31:46
<transcript>: Nova by panic.

03:31:50
nexxeln: yes local proxy

03:31:57
<transcript>: Okay. Yes. Local proxy. Let's do it.

03:31:57
nexxeln: then you can even show the env file

03:32:02
<transcript>: Actually need to install the planet scale CLI seven on that.

03:32:06
otifex: i use nvim a lot for small things, havent fully commited for my python dev work

03:32:19
zappy_oc: Building your own config is a nice side project in itself :)

03:32:21
<transcript>: Let's do it, let's do it.

03:32:21
otifex: the IDE helps with debugging

03:32:28
<transcript>: Exactly zappy.

03:32:31
<transcript>: It's a fun side project.

03:32:31
<transcript>: and you get to

03:32:38
<transcript>: And you get to kind of like work alongside other projects. You don't have to just work on your new of Mcompig. You can kind of like make it better as you go.

03:32:52
<transcript>: Okay.

03:32:57
<transcript>: So I have the CLI.

03:33:01
cowfacedude99: We gotta teach you to use tmux.... One thing a month.

03:33:02
zappy_oc: yup, rolling release xD

03:33:03
<transcript>: Now we're going to.

03:33:06
<transcript>: We already have a database.

03:33:10
<transcript>: We're gonna create a branch, I guess initial setup.

03:33:17
<transcript>: I guess I need to know.

03:33:21
<transcript>: How do I get the name? It's just named Blurtle. I guess.

03:33:25
kenjito2: Is brew a package manager? I am noob sry

03:33:27
nexxeln: you don't need to create a branch just connect to name @adamelmore

03:33:30
<transcript>: Did you notice I'm having a second line.

03:33:36
nexxeln: connect to main*

03:33:37
<transcript>: I should really only eat one a day some days Aide to.

03:33:41
nexxeln: why did i type name wtf

03:33:50
<transcript>: Make sure the ball mustache Also odifx.

03:33:53
cowfacedude99: @kenjito2 it's homebrew. cli package manager for mac

03:33:56
<transcript>: And just in case I missed it. Thanks for following.

03:33:58
<transcript>: Probably said that.

03:34:06
<transcript>: Okay. You said don't need to.

03:34:12
<transcript>: Now you got to teach me T. Max. One thing a month. I Greek our face. We'll look at that in October.

03:34:16
<transcript>: I definitely want to learn tmucks.

03:34:21
<transcript>: So I'm not just like closing stuff to open something new.

03:34:26
<transcript>: Don't need a greater branch just connect a name.

03:34:26
<transcript>: to main okay

03:34:27
<transcript>: To main. Okay.

03:34:27
<transcript>: just

03:34:28
nexxeln: i can't work without tmux

03:34:29
<transcript>: Just stick to main.

03:34:32
nexxeln: you can learn tmux in a day

03:34:38
<transcript>: Also for tmux calf Axel.

03:34:42
<transcript>: I respect both those folks immensely.

03:34:42
<transcript>: i respect you all

03:34:44
<transcript>: I respect you all but.

03:34:49
<transcript>: If you guys say tmux, then I will learn tmux in a day.

03:34:49
<transcript>: that's a day

03:34:53
<transcript>: That's a day that will maybe devote this week we'll see.

03:34:59
<transcript>: Okay. What was gonna do? I was gonna do this. Oh, no. I don't need a credit branch. Forget it.

03:35:01
<transcript>: Forget that.

03:35:09
<transcript>: Okay. We've already installed Prisma, so let's look at our schema.

03:35:16
<transcript>: We've got a proxy. Now. Did I start the proxy yet? No.

03:35:21
<transcript>: Maybe I'm not supposed to yet.

03:35:25
zappy_oc: maybe even less

03:35:25
<transcript>: So here's my database. Url. I guess that's not sensitive.

03:35:25
<transcript>: i just put that

03:35:28
<transcript>: I just put that straight in.

03:35:31
<transcript>: E in.

03:35:36
<transcript>: A URL. I wonder what it already is.

03:35:40
<transcript>: Is it already.

03:35:50
<transcript>: This thing.

03:35:51
otifex: there is nothing better than tmux with nvim

03:35:56
<transcript>: Oh, cloak is gonna make this a little hard for me.

03:36:03
<transcript>: I need to edit this somewhere else. I guess.

03:36:08
<transcript>: I need to take this value and edit it right here.

03:36:10
log1400: DATABASE_URL="mysql://root@127.0.0.1:3309/DB_NAME"

03:36:12
nexxeln: pscale connect databaseName main --port 3309

03:36:14
<transcript>: Lirdle blur. No. Okay, now I'm just paste it.

03:36:14
<transcript>: firefall

03:36:17
<transcript>: Firefall latent looks the best.

03:36:21
<transcript>: I need to create a random, secret, fuzzy.

03:36:28
nexxeln: run this command in another tab and keep it running

03:36:30
<transcript>: Nothing better than TMX with NeoVM. I'm sold.

03:36:37
<transcript>: I'm sold peacekill? I thank you so much for the follow? Hey, hey, hey, peacecale Connect database name.

03:36:37
<transcript>: main

03:36:40
<transcript>: Main Port. Three, three, nine. Okay.

03:36:42
cowfacedude99: I think I can get you started with tmux in two hours.

03:36:45
<transcript>: Keep it running in a no tab. Okay, first, I need to get a random secret.

03:36:45
<transcript>: random

03:36:48
<transcript>: Random secret generator.

03:36:51
<transcript>: While I'm so fuzzy.

03:36:55
<transcript>: Okay. Those look good.

03:36:57
<transcript>: Looks great.

03:37:01
<transcript>: That was just from an exhaust secret.

03:37:03
<transcript>: Then I need to do Discord, but we'll do that one.

03:37:07
<transcript>: I guess we're gonna log in with Discord. Does that sound good? Everybody.

03:37:08
<transcript>: Sure.

03:37:20
<transcript>: I get eaten. Two of them got talking on my finger.

03:37:33
<transcript>: We set our environment variables.

03:37:35
<transcript>: Now we're going to.

03:37:37
<transcript>: Do our connect.

03:37:37
<transcript>: thing

03:37:38
<transcript>: Thing.

03:37:44
<transcript>: Another tab. I'm using Alacrity. Now.

03:37:44
<transcript>: so

03:37:45
<transcript>: So I have no tab.

03:37:45
<transcript>: i just opened

03:37:49
<transcript>: I just opened new things. Like this one.

03:37:57
nexxeln: thats what tmux is for haha

03:38:10
<transcript>: T Max is for exactly.

03:38:19
<transcript>: You can be sorry with T Max and 2 hours. That sounds fantastic cow base we might do it tomorrow if you're around.

03:38:24
<transcript>: Not an indicated oh, peace? Go off login.

03:38:26
nexxeln: you need to do pscale auth login first

03:38:27
<transcript>: Oh no oh no.

03:38:30
<transcript>: Oh no.

03:38:30
<transcript>: wait was

03:38:32
<transcript>: Wait. Was that sensitive? I don't even know.

03:38:35
<transcript>: Whatever.

03:38:38
<transcript>: Maybe it was.

03:38:41
<transcript>: I guess I hope not, but.

03:38:43
nexxeln: its fine to show

03:38:43
danielgerep: I think not

03:38:43
<transcript>: Here we go.

03:38:45
nexxeln: one time code

03:38:50
<transcript>: Yeah. Did I just give everyone access to my plant scale? Someone. Tell me, please.

03:38:50
<transcript>: like not

03:38:53
dot_heyhey: are you using a tiling window manager on macos?

03:38:53
<transcript>: Like not one time code cool, find a show cool.

03:38:56
<transcript>: Now we can do this thing.

03:39:01
<transcript>: Can I connected.

03:39:04
<transcript>: Come on, minimize it this way.

03:39:06
<transcript>: We'll just throw it over here.

03:39:08
<transcript>: Okay.

03:39:08
<transcript>: cool

03:39:11
<transcript>: Cool. Now, what.

03:39:11
<transcript>: we'll see

03:39:12
zappy_oc: https://github.com/psliwka/vim-smoothie Smooth scrolling kinda helps me to maintain context when using Ctrl+d or Ctrl+u

03:39:14
<transcript>: We'll see plant scale isolation.

03:39:14
<transcript>: i don't need

03:39:16
<transcript>: I don't need that.

03:39:21
<transcript>: Now I can do the DB push. I never did that. Intentionally. Waited.

03:39:25
<transcript>: Yes.

03:39:31
<transcript>: I guess I should update the Schema, whatever.

03:39:36
<transcript>: I didn't. Thanks for file lawmixer. Did I see that one? I think I saw that one.

03:39:42
<transcript>: I guess we'll just get the thing running and then we'll go from there.

03:39:45
<transcript>: Thanks for the follow Sierra.

03:39:56
<transcript>: Hey, hey, welcome to Chat. Are you using a tiling window manager? I am I'm using you by.

03:39:59
<transcript>: I have lovehate relationship with you by.

03:39:59
<transcript>: we've had

03:40:06
<transcript>: We've had periods of our relationship where I threw it out. I was done with it. Then I came back, came crawling back.

03:40:06
<transcript>: and here

03:40:11
<transcript>: And here we are. Smooth scrolling, kind of helps me to maintain context using control.

03:40:11
<transcript>: d or control

03:40:23
<transcript>: D or Control U smooth scrolling vim smoothie is it written in Lula? I'm kind of a Lewis knob. I feel like my whole config is Loua. I should stick with my whole config being Lua. At this point I got turned down my music a little bit.

03:40:23
<transcript>: oh boy

03:40:25
<transcript>: Oh boy.

03:40:28
<transcript>: Oh yeah I still have.

03:40:30
<transcript>: I still have.

03:40:30
<transcript>: item

03:40:33
<transcript>: Item for this purpose.

03:40:42
<transcript>: I still have eye term installed when I want tabs because I haven't learned TMX yet, so I could have thrown that thing over here on one of these. Maybe I will do that.

03:40:45
<transcript>: Yeah. Let's do that.

03:40:45
<transcript>: so this is

03:40:47
<transcript>: So this is the command.

03:40:53
<transcript>: Put it in a tab.

03:40:55
<transcript>: Keeping this.

03:40:55
<transcript>: eye term around

03:40:59
<transcript>: Eye term around until I've learned tmux.

03:41:03
nexxeln: you also need to do some pscale specific stuff for prisma, did you do that?

03:41:04
<transcript>: Okay. So we've got that proxy thing running.

03:41:04
<transcript>: we did a

03:41:08
<transcript>: We did a Database Prisma thing. Push.

03:41:15
<transcript>: You use DB Push instead of Prisma migrate.

03:41:15
<transcript>: okay

03:41:17
log1400: npx prisma studio

03:41:22
urobeat: what do you hate about yabai? i'm coming from i3 looking for something similar for my work laptop

03:41:23
<transcript>: Okay, play scale. Davis. Give now matches a prison scanner. You configure this look Blurtle. Let's look at our let's look at our.

03:41:23
<transcript>: i'm gonna

03:41:25
<transcript>: I'm gonna go to the console.

03:41:29
<transcript>: Just gonna show my secret in it.

03:41:29
<transcript>: no okay

03:41:30
<transcript>: No. Okay.

03:41:33
<transcript>: Schema.

03:41:35
<transcript>: Oh, no schema.

03:41:38
<transcript>: There it is.

03:41:38
<transcript>: account

03:41:47
<transcript>: Account example. This is cool. Okay. I'm sold. Well, it's still early. Let's as you go a little further, but I'm feeling pretty sold. I'm part of it. So the next one effect.

03:41:47
<transcript>: we got next one

03:41:49
<transcript>: We got next one here with me.

03:41:49
<transcript>: creator of t

03:41:51
<transcript>: Creator of T. Three thing.

03:41:54
<transcript>: So I'm feeling.

03:42:00
<transcript>: A little starstruck and it's selling me but I'm feeling very sold.

03:42:04
<transcript>: Okay. And then this is saying, I can open a shell.

03:42:06
<transcript>: Like this.

03:42:06
<transcript>: this ps

03:42:12
<transcript>: This pscale shell I wonder, does it default to my current app and my current whatever.

03:42:17
<transcript>: Nope. I got to say Blurtle.

03:42:17
<transcript>: guess there is no

03:42:21
<transcript>: Guess there is no current anything. I've got two databases. Blurtle main.

03:42:24
<transcript>: Show, tables.

03:42:28
<transcript>: Cool.

03:42:30
<transcript>: Okay.

03:42:34
<transcript>: And data.

03:42:37
mustackk: I'm a little late to the party. Could you talk more about what appeals to you with planetscale?

03:42:41
nexxeln: it is pretty neat

03:42:41
<transcript>: What? We're gonna add data with our app, right? So I don't need to do any of this. Why was I even doing this? I don't know.

03:42:41
<transcript>: i just

03:42:45
<transcript>: I just want to get the the official like Planet Scale plus Prisma.

03:42:45
<transcript>: what

03:42:50
<transcript>: What's the official steps, now that we've got that.

03:42:52
<transcript>: Let's go back to.

03:42:55
<transcript>: I guess we can just start up the.

03:42:55
<transcript>: this thing

03:42:56
<transcript>: This thing.

03:42:58
<transcript>: I'm gonna do over here.

03:43:04
<transcript>: Let's go to CD playground.

03:43:05
zappy_oc: a lot apps doesn't split perfectly when using yabai. I keep going back to it's config to add exceptions all the time tbh.

03:43:10
<transcript>: Lirdle and let's do yarn, no TMPM.

03:43:13
<transcript>: Run.

03:43:13
<transcript>: dev

03:43:15
<transcript>: Dev, look at it.

03:43:19
<transcript>: Turn next one is probably already Typed. An answer.

03:43:21
<transcript>: Dev.

03:43:28
nexxeln: also keep your database proxy running

03:43:38
<transcript>: Here it is. Everyone. We did it.

03:43:38
<transcript>: that's a nice

03:43:40
<transcript>: That's a nice styling.

03:43:44
<transcript>: I like it. We got a little animation stuff going on here.

03:43:44
<transcript>: fancy

03:43:45
<transcript>: Fancy.

03:43:45
<transcript>: fancy

03:43:47
<transcript>: Fancy.

03:43:51
<transcript>: I could do without the borders. I'm kind of a no border guy, but other than that.

03:43:51
<transcript>: you don't see

03:44:01
<transcript>: You don't see a lot of, like, Project Starters with good styling. I don't know. I don't generally like the way it looks, but this looks nice. I like the color here on the T three. Okay. Anyway.

03:44:05
<transcript>: What I hear about you by.

03:44:05
<transcript>: i hate

03:44:07
<transcript>: I hate.

03:44:07
<transcript>: when

03:44:20
log1400: try to spin up the prisma studio

03:44:21
<transcript>: When it won't let me move something when I'm like, I want this window right over here. And it just says, Nope. Full screen. I'm like, no, please just take it over here. Full screen. And that drives me crazy. It does that for a while, and then I just get frustrated and I shut it up.

03:44:28
<transcript>: You also need to do some pscale specific stuff for prison. Did you do that? We did that next one. I think we just went through that.

03:44:28
<transcript>: mbx

03:44:32
<transcript>: Mbx Prisma Studio What does that do.

03:44:36
<transcript>: What MPX Prisma.

03:44:36
<transcript>: studio

03:44:37
<transcript>: Studio.

03:44:42
<transcript>: This is cool.

03:44:42
<transcript>: there's

03:44:44
<transcript>: There's my models. Okay.

03:44:44
<transcript>: i would actually

03:44:45
stroopwafel26: @urobeat I use Rectangle and I'm pretty happy with it

03:44:47
<transcript>: I would actually queries the data. Oh, I don't know.

03:44:47
<transcript>: mysql cl

03:44:49
<transcript>: Mysql client. You kidding me.

03:44:49
<transcript>: i was

03:44:55
nexxeln: oh studio is magic

03:45:02
<transcript>: I was about to do sequel queries in my CLI like a caveman. Did you see this? I had this pulled up like this was how I was gonna interact with my database. Geez, there's a prism of studio studio people. That's cool.

03:45:11
<transcript>: What do you hate about yoga? Okay. Yeah. Coming from I three, looking for something similar. I think you'll love it. If you're coming from I three, you sound like you know what you're doing? I do not.

03:45:11
<transcript>: so

03:45:14
<transcript>: So we'll probably have very different experiences.

03:45:14
<transcript>: welcome to chat

03:45:16
giovanijs: what mouse are u using?

03:45:24
<transcript>: Welcome to Chat Mustache. I'm a very late. No, I'm a little late to the party. Could you talk more about what appeals to you with plant scale? You know, Mustache, I'm late to the Planet Skill party.

03:45:31
<transcript>: I think what appeals to me about any service is how little do I have to think about the underlying thing.

03:45:31
<transcript>: so

03:45:36
foobfoob: just joined late to the window manager party :P is that amethyst?

03:45:37
<transcript>: So databases. I said at the beginning stream, you know, we've had sort of commoditized.

03:45:37
<transcript>: serverless

03:45:39
stroopwafel26: Planetscale is such a great name

03:45:39
<transcript>: Serverless compute for a while now.

03:45:39
<transcript>: five

03:45:41
<transcript>: Five, six years.

03:45:53
<transcript>: That we're sort of used to really easy hosting with Versaille, where we're used to like, we can run code without thinking about servers. We can just write functions and run them on any one of.

03:45:53
<transcript>: cloud providers

03:45:56
<transcript>: Cloud Providers, Functions as a Service services.

03:46:05
nexxeln: i personally like cockroachDB more because i like postgres more

03:46:14
gorickisnotdead: Hey good morning, i just created a framework for React Native, but nobody saw until now, could you take a look? :)

03:46:14
nexxeln: it also handles the scaling

03:46:15
<transcript>: We have all that pretty well hammered down with Compute, but with databases, it's kind of lagged behind. There's not great serverless database offerings. Planet Scale seems to be checking those boxes. I've not used it much so. I don't know. Someone could tell me if they've run into issues with stability or with other things. I don't know. I've not used it enough to like Vouch for it in production.

03:46:15
<transcript>: but

03:46:27
<transcript>: But from a offering standpoint, like from a service standpoint, they seem to be checking a lot of the serverless boxes that AWS has yet to check off with any of their primitives so like Aurora.

03:46:27
<transcript>: service

03:46:37
<transcript>: Service, version one and version two. There's kind of major flaws with each of those services. And this is just constructive feedback. I hope someone on the to best team here's this and takes it as feedback.

03:46:37
<transcript>: that

03:46:38
<transcript>: That.

03:46:38
<transcript>: i think i mean

03:46:46
<transcript>: I think I mean, you've heard it. If you're on that team, I think the community's been pretty vocal about the problems with those offerings, but still feels like we're lacking.

03:46:46
<transcript>: a true serv

03:46:52
<transcript>: A true serverless sequel offering, and I think PlanetScale is poised to maybe be that so that's what draws me to it.

03:46:59
<transcript>: I'll apps don't split early.

03:46:59
<transcript>: yeah

03:47:04
<transcript>: Yeah, yeah? I need to work on my biconfig.

03:47:04
<transcript>: i think i need

03:47:07
<transcript>: I think I need to invest more time in it. I just copied.

03:47:07
<transcript>: bash bun

03:47:15
<transcript>: Bash bunnies. Also keep your database proxy running. Yeah, yeah, I think I've got it running for good. It's just in a tab here. Not gonna touch it.

03:47:21
<transcript>: Try to spin up the prison studio. Yeah, that was so cool. Log. Thank you so much for that. I use Rectangle Street for a long time.

03:47:21
<transcript>: and

03:47:25
<transcript>: And I think someone told me how I could.

03:47:25
<transcript>: how

03:47:34
<transcript>: How we could maybe keep the bottom bar exception so we might go back to rectangle. I've kind of got new, though. Like you buy just moving stuff for me. I like that.

03:47:40
<transcript>: There's this theme in my life right now. I want people to take over and tell me what to do. I want people to boss me around a little bit, you know.

03:47:40
<transcript>: tired

03:47:48
<transcript>: Tired of making all the decisions studio is magic. What mouse? I use a trackpad Globin or geo Giovanni.

03:47:48
<transcript>: welcome to ch

03:47:58
rudixworld: recently I discovered serverless edge too , pretty impressed ... what it bothers me is that the database is in static location and it does not benefit from the "edges" locations

03:48:00
<transcript>: Welcome to Chat. Giovanni. I appreciate you joining us in Chat. Just joined late to the window manager party. Is that amethys? No, I'm using you by. Well, we're running you by and rectangle, but I'm only using you by.

03:48:04
<transcript>: Playscale is a good name. I agree. Street bubble.

03:48:25
nexxeln: yes they have serverless

03:48:25
<transcript>: Do you like Cockroach TV more because they like Postgres more. Yeah. So is Cockroach serverless because someone was complaining yesterday on Twitter about how there's not a great serverless offering for Postgres. We have plans going with MySQL I think Postgres is much more invoke people seem to prefer Postgres and I get why but are the managed offerings good? Is Cockroach good.

03:48:25
<transcript>: is it like do you

03:48:26
<transcript>: Is it like, do you have to think about.

03:48:26
<transcript>: servers

03:48:33
nexxeln: there's also neon.tech its pretty new

03:48:34
foobfoob: serverless postgres: https://neon.tech/

03:48:39
<transcript>: Servers or Postgres config or anything like that that I don't want to think about ever, ever, first time chat go. Rick is not dead. Welcome to Chat. Hey, good morning. I just created a framework for React Native, but nobody saw until now. Could you take a look.

03:48:45
<transcript>: Yeah, I'm trying to stay on track, but go ahead and post it. I'll open it a tab and we'll look at it a little bit.

03:48:45
<transcript>: also

03:48:47
<transcript>: Also handles the scaling.

03:48:48
gorickisnotdead: https://github.com/akallidreams/create-akalli-app

03:48:53
gorickisnotdead: here it is

03:49:05
<transcript>: Cool. Cool. Yeah. I never want to think about, like, Vertical Scale and everyone to think about any of that stuff with my database offering. I just want it to be good, and I just interact with an API. That's why I like DynamoDB so much, but it's definitely a different thing. You gotta learn. It's not another tooling, is there? Like, we don't have Prisma for DynamoDB.

03:49:13
<transcript>: Discover service edge too pretty impressed. What it bothers me is that the database is static location and it does not benefit from the edges location.

03:49:21
<transcript>: Yeah, I use global tables and DynamoDB. So I have, like my Dynamo table deployed in four or five regions.

03:49:26
<transcript>: It's way over engineered, and it probably doesn't. Well, it doesn't matter, because.

03:49:26
<transcript>: if you build something

03:49:32
<transcript>: If you build something and people overseas use it. They shouldn't have a bad experience just because they live somewhere nonamerica.

03:49:32
<transcript>: it should be fast

03:49:35
<transcript>: It should be fast. So that's a way to make it fast everywhere.

03:49:47
<transcript>: They have serverless there's also Neon Tech. Yeah. So I saw that cause yesterday Neon Tech. I heard it maybe slightly less serverless e. Then play it scale, but at least.

03:49:47
<transcript>: there's somebody working

03:49:48
<transcript>: There's somebody working on it.

03:49:48
<transcript>: cool

03:49:50
<transcript>: Cool.

03:49:50
<transcript>: there is

03:50:00
<transcript>: There is your create thing. I'm gonna copy that link. Go, Rick and I will paste it in here and try to remind me later in the stream. We will take a look at that.

03:50:02
<transcript>: Okay.

03:50:02
<transcript>: so here's

03:50:03
nexxeln: cockroach serverless is actually gonna be globally distributed sooon

03:50:04
<transcript>: So here's our studio.

03:50:09
<transcript>: Let's start building the actual thing. We're building Blurtle.

03:50:09
<transcript>: we're not going to

03:50:15
mustackk: Thanks for elaborating on pscale. I was looking for the same thing for my project, and I ended up going with Firebase/Firestore. Curious how you think pscale compares.

03:50:15
<transcript>: We're not going to design it. We're just going to start building. Sometimes I open, like, Sigma and start like laying stuff out.

03:50:15
<transcript>: we're gonna

03:50:17
<transcript>: We're gonna do that today.

03:50:17
<transcript>: we're just going

03:50:19
<transcript>: We're just going to let's see.

03:50:26
<transcript>: So here's our app.

03:50:35
<transcript>: So we're gonna need, like, I'm not gonna put in the database. I'm just gonna put, like, we're gonna have, like, a static map to start.

03:50:38
<transcript>: Of image.

03:50:46
<transcript>: And the words associated with them is Wordal. Five letters, that be W, R, D le. Is it six.

03:50:49
<transcript>: Five or six.

03:50:57
<transcript>: Are running upstairs. Sorry if you just got blasted with all that.

03:51:00
<transcript>: Six tries, five letter, word.

03:51:00
<transcript>: okay

03:51:02
nexxeln: 5 letter words 6 tries

03:51:04
<transcript>: Okay. Six tries, five letter word. Got it.

03:51:11
<transcript>: So let's go to our server. That's gonna be a bit of an experience. We're learning some things.

03:51:14
<transcript>: Common DB.

03:51:14
<transcript>: router

03:51:15
<transcript>: Router.

03:51:22
<transcript>: So if I want to add some like server logic stuff.

03:51:22
<transcript>: i

03:51:24
stroopwafel26: gen z wordle how many letters

03:51:27
<transcript>: I probably put that just in a file in server. Just close all these down and just like.

03:51:27
<transcript>: call

03:51:29
<transcript>: Call it.

03:51:31
nexxeln: fun fact: my first typescript project was a wordle clone

03:51:34
<transcript>: Puzzles. What do you call? Like, what are we gonna call an individual.

03:51:37
<transcript>: Let's call it Game TS for now, and we'll just.

03:51:40
<transcript>: Work here until we can't work here anymore.

03:51:46
<transcript>: Because it is what.

03:51:54
nexxeln: you will create a trpc router in server/router/routername.ts

03:51:55
<transcript>: Consider global script file at an import. Oh, this is GI. I got to do something.

03:52:02
<transcript>: Just do something. Please, please do something as far. Well, I would have been recording a macro. Why am I recording a macro? How do I get rid of that.

03:52:04
<transcript>: Oh.

03:52:04
<transcript>: vim

03:52:06
<transcript>: Vim. Panic is a thing.

03:52:06
<transcript>: has to be

03:52:12
<transcript>: Has to be an actual psychological effect. I can't get out. I don't know how.

03:52:12
<transcript>: putting

03:52:18
<transcript>: Putting the whole thing. Get out of here. I did it. Okay, let's import something before it dries in crazy.

03:52:20
<transcript>: Import.

03:52:23
nexxeln: just click q to stop recording the macro

03:52:31
<transcript>: Just ignore me. I'm just doing that. So it's that yellowing at me. Okay, so what are we gonna have in here? We're gonna have a map.

03:52:33
<transcript>: Export.

03:52:43
<transcript>: Or I guess just an array of these things that are gonna look like.

03:52:47
<transcript>: This they're gonna have a image.

03:52:47
<transcript>: and they're gonna

03:52:49
<transcript>: And They're gonna have.

03:52:49
<transcript>: a

03:52:50
<transcript>: A.

03:52:50
<transcript>: word

03:52:52
<transcript>: Word.

03:52:53
<transcript>: Okay.

03:52:53
nexxeln: oh i guess this is just a global thing? put it in utils maybe?

03:53:00
<transcript>: Identifier. Expression. What am I doing.

03:53:02
nexxeln: idk what you're doing lol

03:53:05
<transcript>: Puzzles. I don't know what I call it.

03:53:09
<transcript>: Cops Array. That was awesome.

03:53:18
<transcript>: Okay, so they're gonna have, like, let's call them. I gotta come up with a name for this. What do I want to call them? Export interface.

03:53:22
<transcript>: Puzzle.

03:53:25
<transcript>: I don't know like variations of the same.

03:53:25
<transcript>: you don't

03:53:27
<transcript>: You don't know what I'm doing.

03:53:31
<transcript>: Put it in utils.

03:53:36
<transcript>: You'll create Trvc, Router and Server router.

03:53:36
<transcript>: so i'm just writing

03:53:41
<transcript>: So I'm just writing some like Lib stuff. Like some just like code that I'm gonna use.

03:53:41
<transcript>: i'm not thinking in terms

03:53:42
xxsallythegoosexx: !dotfiles

03:53:47
xxsallythegoosexx: !dotfile

03:53:47
<transcript>: I'm not thinking in terms of, like, how it's gonna be consumed yet. I'm just trying to kind of, like, think through the game.

03:53:51
<transcript>: So global thing put it in utils.

03:53:51
xxsallythegoosexx: !config

03:53:52
nexxeln: yeah utils is best then @adamelmore

03:54:03
<transcript>: Where's you tell? Oh, here global thing. It's like the logic of my game. Like I'm gonna just try and hash out, what is this game.

03:54:05
<transcript>: Gonna look like.

03:54:05
<transcript>: you know what i'm saying

03:54:06
<transcript>: You know what I'm saying.

03:54:06
<transcript>: i

03:54:12
<transcript>: I hate to use the word business logic. I just sound like an old person, but it's like business logic.

03:54:17
<transcript>: The big business of Blurtle.

03:54:19
stroopwafel26: @XxSallyTheGooseXx https://github.com/adamelmore/dotfiles

03:54:19
<transcript>: Util's. Best. Okay, cool.

03:54:19
<transcript>: let's see

03:54:21
<transcript>: Let's see.

03:54:21
<transcript>: oops

03:54:22
<transcript>: Oops.

03:54:22
<transcript>: so

03:54:23
nexxeln: or you could create lib folder but i hate that

03:54:25
<transcript>: So if I'm here, I can kind of move this.

03:54:29
<transcript>: Move and inventory.

03:54:33
<transcript>: Just rename it and then just do server.

03:54:36
xxsallythegoosexx: Ty! @stroopwafel26

03:54:37
<transcript>: No utils.

03:54:37
<transcript>: game

03:54:39
<transcript>: Game TS just like that.

03:54:39
<transcript>: yeah

03:54:41
<transcript>: Yeah.

03:54:45
<transcript>: Just like that. Okay. Puzzle.

03:54:48
<transcript>: Has a.

03:54:50
<transcript>: Image.

03:54:52
<transcript>: String.

03:54:52
<transcript>: and

03:54:54
<transcript>: And.

03:54:54
<transcript>: a

03:54:55
mustackk: ew, he said "business logic".. are we gonna have to plan a touch point so we can align on our north star now?

03:54:56
<transcript>: A word, string.

03:54:56
<transcript>: there's

03:55:07
<transcript>: There's probably some cool TypeScript way to say that this word has to have a link five. Is there a cool way to do that? Who knows who can tell me Where's trash Dev when I need them? I bet this is in the type challenges or something.

03:55:07
<transcript>: john

03:55:12
nexxeln: @adamelmore you can use zod

03:55:15
stroopwafel26: @Mustackk let's leave that in parking lot

03:55:16
texoport: trpc. sick

03:55:18
<transcript>: John Dupsy, Jan Doitzi. Thank you so much for the follow. I appreciate that. Did I tell Quads? Are. Thanks for the follow. Cuz. Thank you. Quasar. Just use Zod. Okay.

03:55:24
<transcript>: Just use odd for the five characters. This is like a TypeScript thing.

03:55:33
<transcript>: My dot files are terrible. Don't read no, don't use them. That goes for most everyone Dofiles just like get inspiration from them. But.

03:55:33
<transcript>: i don't think

03:55:38
nexxeln: z.string().minLength(5)

03:55:44
foobfoob: did you disable SIP in macos for getting yabai running?

03:55:47
<transcript>: I don't think copying some of the stuff else is ever probably a good deal. Good idea. My dot files don't even have my invent config in them. It's in a separate Reaper right now. I'm gonna consolidate all of it, but it's yeah, could create a Lib folder, but I hate that. Okay, well, I don't do anything in the next one hates.

03:55:47
stroopwafel26: dotfiles: buyer beware

03:55:48
xxsallythegoosexx: just ported my dotfiles to lua with a decent folder structure and its soooo much better!!!!

03:55:48
nexxeln: its either minLength or min i don't remember

03:55:50
mustackk: @Mustackk Ha!

03:55:52
<transcript>: Business logic. Are we gonna have to play in a touch point so we can line on our north side.

03:55:56
laytanl_: !project

03:55:56
fossabot: Building a Twitch overlay in Next.JS

03:56:04
<transcript>: Trpc. Yeah, we're working on Tiers. We're doing some stuff, Texo. We're playing with T. Three Stack, Z string.

03:56:04
<transcript>: min

03:56:06
<transcript>: Minlink. Five.

03:56:16
<transcript>: I did not disable sip. I don't think foopfoob. Why did something. Honestly, I don't even know what I did. I had to go into the boot menu and do something. Maybe that was sip.

03:56:16
<transcript>: i'm the kind of person

03:56:18
<transcript>: I'm the kind of person that gets preyed up.

03:56:18
<transcript>: i'm the kind of person

03:56:21
<transcript>: I'm the kind of person hackers are like this guy.

03:56:22
xxsallythegoosexx: then you did disable it

03:56:26
imanyone: Great song

03:56:27
<transcript>: Thank for the follow Minji the midgetti.

03:56:36
<transcript>: Just poured in my dot file Saloo with a decent bulge record. So much better. Mid length are men. I don't remember. So I guess.

03:56:38
<transcript>: To.

03:56:41
cowfacedude99: I assume it would also have maxLength too.

03:56:42
<transcript>: Yeah, I guess I did disable it. Sally.

03:56:44
<transcript>: Welcome to Chad. I'm. Anyone.

03:56:51
<transcript>: Also have Max link, but what you guys don't want to do is with TypeScript. Like why use zombie when I could use type script.

03:56:51
<transcript>: watch this

03:56:53
<transcript>: Watch this type script.

03:56:56
<transcript>: Minty TypeScript.

03:56:56
<transcript>: of

03:56:59
<transcript>: Of string of links.

03:57:02
<transcript>: Watch this.

03:57:02
<transcript>: watch

03:57:03
nexxeln: cause zod is better

03:57:04
<transcript>: Watch this.

03:57:07
<transcript>: Now I want to say it has to be enforced.

03:57:14
<transcript>: To Specific links.

03:57:14
<transcript>: there is

03:57:15
<transcript>: There is in a way.

03:57:16
texoport: Nah, zod is the way to go

03:57:21
<transcript>: Ignore me. Oh, wait. There is it is possible to do. I told you.

03:57:21
<transcript>: type

03:57:22
andreull: typescript is old. zod is the new thing

03:57:24
<transcript>: Type length of string.

03:57:24
<transcript>: well this looks really

03:57:26
<transcript>: Well, this looks really hard.

03:57:35
<transcript>: So if there's an easier way to do it than that trash Dev, look at this.

03:57:36
nexxeln: nah you do not want that haha LUL

03:57:37
texoport: Even if there was a way, it wouldn't enforce it during run time anyway

03:57:39
<transcript>: Trash Dev.

03:57:39
<transcript>: you

03:57:46
nexxeln: exactly @texoport

03:57:49
<transcript>: You get a length of something in TypeScript you've recursively pushed to an array, then grab length. I use something along these lines all the time and type challenges but can't think of any real world use case. Well, I can think of one trash.

03:57:49
<transcript>: guess

03:58:00
<transcript>: Guess what? We just thought of a real one. We're making a world clone called Blurtle, and we need five characterlinked strings only, please. So this is how I'm gonna do it. Let's do it.

03:58:02
<transcript>: Just a little bit everything today.

03:58:05
texoport: Plz no

03:58:11
nexxeln: DON'T DO IT

03:58:11
<transcript>: So we're gonna say type links of string.

03:58:11
<transcript>: s

03:58:11
stroopwafel26: trash ftw

03:58:13
<transcript>: S. Extends.

03:58:13
<transcript>: string

03:58:15
<transcript>: String? A.

03:58:15
<transcript>: extend

03:58:19
<transcript>: Extends any array.

03:58:20
<transcript>: La.

03:58:23
<transcript>: Equals s.

03:58:26
<transcript>: This is easy.

03:58:26
<transcript>: why didn't i think

03:58:28
<transcript>: Why didn't I think of this.

03:58:31
<transcript>: First letter.

03:58:31
<transcript>: type

03:58:33
<transcript>: Type is hilarious.

03:58:35
nexxeln: OH GOD

03:58:37
<transcript>: Infer.

03:58:37
<transcript>: rest

03:58:39
<transcript>: Rest.

03:58:41
<transcript>: Okay.

03:58:43
<transcript>: So then then what.

03:58:46
<transcript>: Infer rest.

03:58:48
<transcript>: Question.

03:58:48
<transcript>: link

03:58:51
<transcript>: Link of string.

03:58:52
<transcript>: Rest.

03:58:52
<transcript>: spread

03:58:56
<transcript>: Spread the a of course. And then the first letter.

03:58:59
<transcript>: And then.

03:59:01
texoport: PepePls

03:59:02
stroopwafel26: someone clip this

03:59:07
mustackk: If it makes you happy, it makes you happy

03:59:15
<transcript>: A link? Oh, I forgot, I forgot something.

03:59:25
<transcript>: Yeah, of course. That's how you do. Linked with string.

03:59:25
<transcript>: so

03:59:32
<transcript>: So this word is not a string. Get out of here with that laziness. It's a length of string.

03:59:37
<transcript>: Now why I have to pass a string to it. And then what.

03:59:38
nexxeln: my eyes

03:59:43
texoport: You don't want this.

03:59:44
<transcript>: Wait, wait. This isn't what I thought it was. With it.

03:59:44
<transcript>: this isn't

03:59:46
<transcript>: This isn't what I thought it was.

03:59:46
<transcript>: this

03:59:49
<transcript>: This isn't gonna enforce anything.

03:59:49
<transcript>: don't do it

03:59:51
<transcript>: Don't do it. Please. No, I just saw all these. Sorry.

03:59:53
yozd82: omg the horror

03:59:53
<transcript>: Even as we.

03:59:53
<transcript>: wouldn't force

03:59:54
nexxeln: he just made a validator not a type @adamelmore

04:00:00
<transcript>: Wouldn't force it during runtime. You guys are right. Okay, you do not want to do that. Typescript is old. Soda is a new thing.

04:00:05
nexxeln: and guess what a validator is ZOD

04:00:06
<transcript>: I'm just reading all this stuff. Sorry, guys, don't do it. Okay. I did it. I'm sorry. Well, we had fun anyway.

04:00:06
<transcript>: i just made

04:00:07
cowfacedude99: oh. LUL

04:00:08
stroopwafel26: if it works it works, it's in ~/playground

04:00:09
<transcript>: I just made a validator yeah, Yeah.

04:00:09
<transcript>: guess what

04:00:19
<transcript>: Guess what validator is Zaad. Okay, next one, you convinced me. Fine. But that was kind of fun, wasn't it? I mean, just looking at how you do that kind of stuff and type skip kind of fun. I don't know me.

04:00:23
<transcript>: Each their own. Okay, let's do this. The.

04:00:23
<transcript>: zon way

04:00:25
<transcript>: Zon way.

04:00:36
mustackk: word.length !== 5 {throw aFit}

04:00:38
<transcript>: I feel like next one you have opinion. Probably about this. I'm about to do something. And I feel like you might have opinions. And I'm sorry. Is this just if I lose your respect after this, I apologize.

04:00:42
<transcript>: But it's worth it to me so prettier.

04:00:45
<transcript>: Am I.

04:00:50
mustackk: whoops, forgot an "if"

04:00:51
<transcript>: Just. I don't know why I just know that you're not gonna like that.

04:00:51
<transcript>: why do i

04:00:53
<transcript>: Why do I know that.

04:00:53
<transcript>: where did i get

04:00:55
<transcript>: Where did I get that from.

04:00:56
nexxeln: NO

04:01:00
<transcript>: Do you like it? Maybe you like it. Maybe you like customize.

04:01:00
<transcript>: no oh i

04:01:05
tayloreddev: I like it

04:01:07
<transcript>: No. Oh, I knew it. I just knew it. Okay. Let's do the Zod thing. I'll make it up to you. Next one, we're gonna do this odd thing.

04:01:07
<transcript>: taylor

04:01:09
<transcript>: Taylor likes it.

04:01:12
nexxeln: i hate it

04:01:13
cowfacedude99: You have zod already

04:01:13
nexxeln: LUL

04:01:14
texoport: (()=>{})()

04:01:20
<transcript>: I think I knew you wouldn't like it because clearly, if you made this repo, there's a reason you didn't do the semi nose to my thing by default.

04:01:31
<transcript>: You have thought already. It's true. No. You guys have convinced me. Settle down. It's okay. I'm gonna do this odd thing. I just don't know how I'm gonna import Zod. That's how I'm gonna do it. Where am I.

04:01:31
<transcript>: where am i

04:01:33
<transcript>: Where am I.

04:01:33
mustackk: I prefer no semi, but I prefer not configuring Prettier even more

04:01:36
<transcript>: And if.

04:01:42
<transcript>: You can further not prefer not configuring prettier even more. That makes sense.

04:01:44
<transcript>: Let's go.

04:01:46
<transcript>: Let's do this.

04:01:48
<transcript>: Nope.

04:01:52
claudiofreitas3: the guardrails are gone :o

04:01:52
<transcript>: Let's say import.

04:01:52
<transcript>: z

04:01:52
nexxeln: @Mustackk same

04:01:54
<transcript>: Z from Zod.

04:01:57
<transcript>: This is the new hotness.

04:02:00
<transcript>: How to do some Zod stuff.

04:02:00
<transcript>: so this is gonna

04:02:05
<transcript>: So this is gonna be a Z dot, Z string. You said, what is it.

04:02:08
<transcript>: Can look it up.

04:02:11
<transcript>: Z dot.

04:02:12
<transcript>: There we go.

04:02:13
texoport: Ah no, you want to start with a z.object

04:02:16
andreull: z.string()

04:02:22
nexxeln: https://zod.dev/?id=basic-usage

04:02:27
<transcript>: Z that string.

04:02:27
<transcript>: then there's like

04:02:30
<transcript>: Then there's like a Max length or a minimum or something. Okay.

04:02:30
<transcript>: z

04:02:32
<transcript>: Z.

04:02:32
<transcript>: at

04:02:33
nexxeln: you need to make a schema

04:02:33
<transcript>: At.

04:02:33
<transcript>: string

04:02:34
<transcript>: String.

04:02:43
cowfacedude99: @texoport don't remind me of this!!! I have read some pretty insane stuff with modules

04:02:43
<transcript>: Why is this my does this wrong? Need to make a steam oh basic usage. Thank you for linking. You want to start with a Z object.

04:02:48
<transcript>: No. Okay. So this whole thing, instead of an interface, I'm making a schema.

04:02:49
nexxeln: its {z}

04:02:54
<transcript>: Tell me right now I'm gonna make a schema.

04:02:59
stroopwafel26: Is Zod named after General Zod from Man of Steel?

04:02:59
nexxeln: yes

04:03:00
<transcript>: Make this one Z object.

04:03:01
cowfacedude99: @texoport old commonutils modules

04:03:08
<transcript>: Let's kind of yank this thing. What would I do? Yank compared graph. What did it copy? Let's see.

04:03:16
<transcript>: Let's just.

04:03:16
<transcript>: get the

04:03:19
<transcript>: Get the mustarded way like that.

04:03:23
<transcript>: Okay.

04:03:23
<transcript>: now

04:03:25
<transcript>: Now, what.

04:03:25
<transcript>: i mean

04:03:28
<transcript>: I mean aside from make it actually.

04:03:28
<transcript>: so

04:03:30
<transcript>: So puzzle.

04:03:34
nexxeln: 8yy would have worked

04:03:35
<transcript>: I'm really committing to this name. I don't really feel good about it, but puzzle steama.

04:03:44
<transcript>: Let's do image.

04:03:44
<transcript>: z

04:03:46
<transcript>: Z Dot string.

04:03:47
mustackk: I didn't know about Zod.. this looks neat

04:03:50
<transcript>: And word is a Z dot string.

04:03:53
<transcript>: Max link.

04:03:55
nexxeln: you need to import {z } from "zod"

04:03:57
<transcript>: Hi.

04:04:00
<transcript>: I'm doing exact link.

04:04:03
<transcript>: links

04:04:04
<transcript>: Links.

04:04:08
<transcript>: Yeah. Maybe like that.

04:04:10
<transcript>: At work.

04:04:10
<transcript>: and then what would i do

04:04:16
<transcript>: And then what would I do? You need to import Z from that. Oh, sorry. That's why I'm getting no types. Okay.

04:04:16
<transcript>: invents around

04:04:19
<transcript>: Invents around. Let's do it. Cs.

04:04:23
<transcript>: Cs. How do I do that? Invent surround. Come on.

04:04:25
<transcript>: Csa.

04:04:26
fullstacklive: ys

04:04:27
fredvanrijswijk: adamel4Ope

04:04:29
<transcript>: Nope Nope Nope Nope.

04:04:31
<transcript>: Cs.

04:04:35
texoport: and type Puzzle = z.infer<typeof puzzleSchema>

04:04:37
<transcript>: I want to surround this thing with brackets, so I'm gonna do CS.

04:04:41
texoport: ysiw

04:04:42
texoport: ysiw{

04:04:44
<transcript>: Nope Nope Nope.

04:04:48
fullstacklive: ysw}

04:04:51
<transcript>: Okay, tell me y SIW quote.

04:04:51
<transcript>: ysw

04:04:52
cowfacedude99: cs is for changing.

04:04:55
<transcript>: Ysw or not quote okay, like that.

04:04:55
<transcript>: y

04:04:57
<transcript>: Ys? W.

04:05:02
imanyone: csw{

04:05:05
<transcript>: That was easy enough. Thank you so much.

04:05:08
<transcript>: Css is free for changing.

04:05:12
<transcript>: That's right. I wanted YS for a new one.

04:05:12
<transcript>: and then i'm gonna

04:05:16
<transcript>: And then I'm gonna do type puzzle Z infer.

04:05:19
<transcript>: inferior

04:05:21
<transcript>: Inferior.

04:05:23
<transcript>: Type puzzle.

04:05:29
nexxeln: i did not know that command thats coooool

04:05:30
<transcript>: Puzzle equals.

04:05:30
<transcript>: fur

04:05:32
<transcript>: Fur.

04:05:39
<transcript>: Type of puzzle schema.

04:05:41
<transcript>: Okay.

04:05:42
parttimemarried: !project

04:05:42
fossabot: Building a Twitch overlay in Next.JS

04:05:43
<transcript>: Type of puzzle.

04:05:48
<transcript>: I really need to get my act together or next one's not gonna show up again.

04:05:48
<transcript>: if i forget

04:05:50
<transcript>: If I forget this guy.

04:05:57
<transcript>: Welcome to Chat. Parttime married.

04:05:59
<transcript>: Parttime married.

04:05:59
<transcript>: it's an

04:06:01
<transcript>: It's an interesting thought.

04:06:03
<transcript>: Parttime married.

04:06:04
nexxeln: LUL

04:06:07
<transcript>: We are not building a Twitch overlay in Chat. I'm terrible.

04:06:07
<transcript>: i'm terrible

04:06:09
<transcript>: I'm terrible at making.

04:06:09
<transcript>: my

04:06:09
texoport: zod is life changing.

04:06:13
<transcript>: My commands up to date. I'm so sorry. I need to do something.

04:06:13
<transcript>: to enforce

04:06:15
<transcript>: To enforce that.

04:06:15
imanyone: Can do csw and it'll "change" the surrounding nothing too, not what you'd expect perhaps

04:06:21
nexxeln: zod is the way to write typescript

04:06:23
<transcript>: Okay. So we have a puzzle, which infers from puzzle schema. Okay. So this thing now when I created a puzzle.

04:06:23
<transcript>: like

04:06:27
<transcript>: Like if I say, down here, this is gonna be an array.

04:06:29
<transcript>: Puzzles.

04:06:40
<transcript>: Now, if I say this is a new puzzle, I can say it's an image.

04:06:40
<transcript>: and it has like

04:06:44
<transcript>: And it has like, something. But then if I say it's a word and I'm like.

04:06:44
<transcript>: it's a

04:06:46
<transcript>: It's a.

04:06:51
<transcript>: Four digit word, four letter word. Let me do that.

04:06:57
<transcript>: Where does on come in and run it run time. I guess it doesn't give me the type checking here.

04:06:57
texoport: You could also use this to convert a TS interface to zod https://transform.tools/typescript-to-zod

04:06:59
<transcript>: It's just it run time.

04:07:13
<transcript>: That is the way to write TypeScript. Okay, inside is lifechanging. I feel like I'm joining the cult of Zod. Can you do CSW? And it'll change the surrounding nothing to not expect. Perhaps.

04:07:15
<transcript>: Yeah.

04:07:26
<transcript>: There was nothing there. So yeah, you can also use this to convert a T three interface. What's a TypeScript interface.

04:07:26
<transcript>: to zod

04:07:26
neochromer: I personally don't like zod that much

04:07:27
<transcript>: To Zod.

04:07:29
<transcript>: Typescript.

04:07:31
neochromer: as it adds additional sugar to my code

04:07:33
<transcript>: Oh Neocromer personally doesn't like doesn't like Zod that much.

04:07:34
neochromer: but yeah to each their own

04:07:37
<transcript>: Additional sugar.

04:07:41
andreull: banned

04:07:47
<transcript>: Neocromer not into the sugar, but they each their own. So I guess I guess I expected to get some like.

04:07:53
<transcript>: Safety. There. There's Link's. Not what I think it is.

04:07:54
nexxeln: what do you preder @NeoChromer for validating then?

04:08:02
<transcript>: It's fine, though Bam.

04:08:06
<transcript>: Okay. So we want to add a bunch of these manually.

04:08:06
<transcript>: really got

04:08:08
<transcript>: Really gotta pick up the face.

04:08:08
<transcript>: oh

04:08:10
<transcript>: Oh, what did I just do.

04:08:11
mustackk: NeoChromer finds prefers a dry type system to a sweet one

04:08:14
<transcript>: Sorry? What.

04:08:17
texoport: You don't need zod yet. It's only once you start taking in user input that zod begins to shine

04:08:19
<transcript>: 's Just do this.

04:08:25
nexxeln: yup ^

04:08:29
<transcript>: So it'll stop formatting it okay. So we're gonna have a bunch of images with words associated.

04:08:32
<transcript>: I'm gonna come up with a bunch of five letter words.

04:08:35
<transcript>: Five letter words.

04:08:40
<transcript>: There you go. Where'd? Finder Word, tips.

04:08:42
<transcript>: Five other words.

04:08:42
<transcript>: fuzzy

04:08:43
nexxeln: and for validating queries for apis

04:08:46
<transcript>: Fuzzy, these are a lot of Z's in the five liter words.

04:08:49
<transcript>: Okay.

04:08:49
<transcript>: so

04:08:52
<transcript>: So just the database of them I can download.

04:08:54
<transcript>: More.

04:08:57
<transcript>: Quirk.

04:08:58
neochromer: @nexxeln Don't validate that much at work especially we do have an API in Java where we generate types for our TS and thats what we use

04:09:00
<transcript>: Okay.

04:09:00
<transcript>: so maybe

04:09:02
<transcript>: So maybe this will work.

04:09:16
nexxeln: https://github.com/nexxeln/nexdle/blob/main/src/word-bank.json

04:09:16
<transcript>: For X.

04:09:20
neochromer: and we write interfaces for everything on a frontend

04:09:21
<transcript>: These are words.

04:09:23
<transcript>: Here, Mo.

04:09:26
<transcript>: Okay.

04:09:30
<transcript>: Taking in user input that.

04:09:30
<transcript>: begins to shine

04:09:31
nexxeln: @adamelmore i already made wordle so you can use my list

04:09:31
<transcript>: Begins to shine.

04:09:36
<transcript>: Validating querys API so that makes sense.

04:09:42
<transcript>: I was hoping to get some type safety. That was like, hey, that's not a five letter word.

04:09:49
<transcript>: You already made Wordal so you can use oh, next one you already have like a Wordle. Repo.

04:09:51
<transcript>: Excellent GitHub.

04:09:53
<transcript>: Gonna work.

04:09:55
<transcript>: Is this you.

04:09:58
<transcript>: Not to you.

04:09:58
<transcript>: that's

04:09:58
neochromer: I have also written a custom "schema" based typescript inputs.. so a "light" zod

04:09:59
<transcript>: That's you.

04:10:02
<transcript>: Excellent word.

04:10:02
<transcript>: next ole

04:10:04
<transcript>: Next Ole look at you.

04:10:04
<transcript>: look at

04:10:06
<transcript>: Look at you.

04:10:14
<transcript>: So I can use your list. Also written a custom schema based type scripting, but still like that I see I see things.

04:10:24
<transcript>: Okay. Oh, you've already deployed this. Do we even need to do this if you've already done it? I guess this doesn't have the blurred image.

04:10:24
<transcript>: so that's what

04:10:27
<transcript>: So that's what we're building. We're building the blurred image.

04:10:27
<transcript>: let's

04:10:30
nexxeln: @NeoChromer very cool

04:10:31
<transcript>: Let's get your you got like a list of words.

04:10:31
<transcript>: probably

04:10:32
<transcript>: Probably.

04:10:33
neochromer: se use a schema for example I can write schema.ts and put inside it input, number and then you can add even hooks to trigger effects

04:10:36
<transcript>: In here somewhere.

04:10:36
<transcript>: word bank

04:10:38
<transcript>: Word Bank.

04:10:41
<transcript>: Cool, it's.

04:10:41
neochromer: but its basic and it is enough for our needs so far

04:10:43
<transcript>: Valid.

04:10:47
<transcript>: Oh, you have a Invalid or something.

04:10:52
<transcript>: Invalid. You're got some words that shouldn't count.

04:10:53
nexxeln: this was my first typescript project

04:10:57
<transcript>: Isn't that just everything that's not valid? Explain yourself. Next one.

04:10:57
<transcript>: your first

04:10:59
<transcript>: Your first typescreen project Holy cow.

04:11:05
<transcript>: It's your first time. Scripture. Project Virtles. Like new, isn't it.

04:11:10
<transcript>: Have you not been using TypeScript long and you're already like a million times better than me at it.

04:11:13
texoport: I used to be big into io-ts but decided to move to zod

04:11:16
<transcript>: Because that makes me sad a little bit. But then I mean, it is next one. So I feel a little less bad.

04:11:22
<transcript>: I used to be big into IoT s beside to move to Zad.

04:11:30
<transcript>: Okay, I'm gonna download this thing.

04:11:33
nexxeln: its rare words that noboy can guess

04:11:34
<transcript>: Copy raw content.

04:11:38
<transcript>: Let's put it in.

04:11:40
<transcript>: Source.

04:11:42
<transcript>: Utils.

04:11:46
<transcript>: Put in your tilts words.

04:11:48
<transcript>: Json.

04:11:51
<transcript>: I don't know about that. Don't know about that placement.

04:11:58
<transcript>: Sure someone will give me their opinion though it's a bad place. It I need to understand though why have Invalid words.

04:12:00
nexxeln: im new to coding in general, only 10 months in

04:12:01
<transcript>: That all words that aren't valid.

04:12:01
<transcript>: all

04:12:04
<transcript>: All Accommodations of letters.

04:12:08
<transcript>: You're only ten months in a Cup.

04:12:14
texoport: If you're just doing Wordle though, I don't think you really need Zod here.

04:12:16
<transcript>: Next one's, Ten months into coding.

04:12:16
<transcript>: and next one

04:12:20
neochromer: @adamelmore I have the same reaction

04:12:20
<transcript>: And next one started the Create T three app repo.

04:12:20
<transcript>: and that makes

04:12:22
<transcript>: And that makes me want to just quit.

04:12:22
<transcript>: just hang it

04:12:26
<transcript>: Just hang it up and just start over with some new career.

04:12:26
<transcript>: i might just go be

04:12:27
delvoid: @nexxeln o.o WHAT

04:12:27
<transcript>: I might just go be.

04:12:29
<transcript>: ben if i

04:12:29
<transcript>: ben if i wasn't a programmer

04:12:31
<transcript>: Ben if I wasn't a programmer.

04:12:33
neochromer: Literally

04:12:36
neochromer: I go get some sheep

04:12:36
<transcript>: I have no idea.

04:12:40
nexxeln: omg LUL

04:12:40
<transcript>: Sometimes I think about that. What if like if you were born a hundred years ago.

04:12:40
<transcript>: there's like no

04:12:42
neochromer: I have a small farm back home

04:12:46
<transcript>: There's like no electricity. What would you have done? Because I just can't imagine myself doing anything else.

04:12:48
<transcript>: It's very hard to imagine.

04:12:48
<transcript>: and

04:12:53
<transcript>: And I'm so bad with my hands in the real world, doing anything.

04:12:53
<transcript>: this is really

04:12:56
<transcript>: This is really hard to imagine. I would have been good at anything.

04:12:56
neochromer: Just get some sheep its super easy

04:12:57
neochromer: and chill

04:13:02
neochromer: did it as a kid with grampa

04:13:02
<transcript>: Newcomer has the same reaction.

04:13:09
<transcript>: Ten months in wow. If you're just doing Wordle, though, I don't think you really need Zod. Here. Tech, soaport.

04:13:14
<transcript>: Maybe. Maybe not. I have the same reaction.

04:13:17
<transcript>: Go get some sheep.

04:13:21
andreull: definitely getting some Kashmir goats and move off grid

04:13:27
mustackk: I feel the same way. I think I would just try to marry rich.

04:13:28
<transcript>: Small farm back home. Oh, really? You're talking about? I thought you misspelled sleep. Yeah, I kind of wasn't sleeping that too. Just get some sheep. It's super easy and chill. That sounds actually kind of awesome.

04:13:28
<transcript>: my

04:13:33
nexxeln: yeah i think for wordle you don't need t3 @adamelmore

04:13:34
<transcript>: My wife wants to get goats, just like not have to mower lawn. So goats eat the lawn. That's so smart.

04:13:36
<transcript>: So smart.

04:13:36
nexxeln: its just a frontend project

04:13:39
<transcript>: It is a kid with grandpa. That sounds awesome.

04:13:46
<transcript>: Moving off the grid. I'm with Andre. Same way. I think I would try to marry Rich. That's a good idea.

04:13:49
<transcript>: Take for word or you don't need T three.

04:13:49
<transcript>: oh

04:13:51
<transcript>: Oh, it's just a front end project.

04:13:54
neochromer: I had also goats.. they are awesome but they poop a loooot

04:13:55
<transcript>: Word is just a front end project. No, no.

04:13:59
neochromer: they poop more then sheep for some reason

04:14:08
texoport: Ah sick, cool

04:14:08
<transcript>: Next one we're doing, leaderboards, we're gonna find a way to make it a full stack project. Okay, because we want to play with T three. And this was the best idea we had. Thank you for the follow Milan in hexadecille.

04:14:13
<transcript>: I also had goats. They're awesome, but they poop a lot.

04:14:14
<transcript>: A lot.

04:14:18
<transcript>: More than cheap just learn something new.

04:14:23
<transcript>: This learn something new. Okay, so we got words.

04:14:27
<transcript>: We got words now let's go back to our.

04:14:30
<transcript>: Okay.

04:14:30
<transcript>: i feel like

04:14:33
<transcript>: I feel like we're a long ways from having a real thing.

04:14:33
<transcript>: i feel like we're

04:14:35
<transcript>: I feel like we're quite a ways.

04:14:35
<transcript>: we're gonna keep

04:14:39
phdhorrible: The invalid thing is for valid words that are not final answers

04:14:40
<transcript>: We're gonna keep pushing through. Thank you so much for my gaze. For the follow.

04:14:45
<transcript>: Let's see the Invalid thing is for valid words that are not final answers.

04:14:47
<transcript>: Oh.

04:14:52
<transcript>: So real words might not be. But I guess what I'm saying is like.

04:14:55
<transcript>: Guess what I'm saying is.

04:14:58
<transcript>: Would I have to actually check.

04:15:04
<transcript>: I have to actually check that they're in the Invalid or can I just say.

04:15:04
<transcript>: no not

04:15:06
<transcript>: No, not in this list. So.

04:15:08
<transcript>: Not a valid word.

04:15:12
<transcript>: Is this just to be semantic.

04:15:12
<transcript>: like they are

04:15:19
<transcript>: Like they are words, but they're Invalid for our game, for our purposes. Okay, I'm getting hung up. You're getting caught up in the weeds.

04:15:22
<transcript>: Weeds, there's a five letter where.

04:15:22
nexxeln: invalid words work for submitting, but aren't picked for the answers

04:15:26
<transcript>: You weeds. But it's in here.

04:15:33
<transcript>: Weeds. Is it valid? It is.

04:15:33
<transcript>: about

04:15:34
nexxeln: if that makes sense

04:15:35
<transcript>: About it's valid.

04:15:36
texoport: @nexxeln ah makes sense

04:15:41
<transcript>: No, it's Invalid. Weeds is Invalid. Why? Seems like a good word.

04:15:51
<transcript>: In downwards work for submitting but aren't picked for the answers if that makes sense. Oh, I see.

04:15:55
icedcoffefe: wordle doesnt have plural

04:15:57
phdhorrible: If you don‚Äôt have the invalid list words like ‚Äúaaaaa‚Äù are technically valid

04:15:59
<transcript>: Oh, no, that's how we're to work. Yeah, yeah. So people can type real words in they have to be an Invalid word to be accepted as like.

04:15:59
<transcript>: you can move

04:16:00
<transcript>: You can move to the next step.

04:16:03
<transcript>: But they're not answering words.

04:16:07
<transcript>: Is that what we're saying? Okay, okay.

04:16:10
<transcript>: I got you.

04:16:10
<transcript>: yeah i got you

04:16:14
nexxeln: you got it

04:16:16
<transcript>: Yeah, I got you. Wordle doesn't have plural. Oh, okay. I didn't know that. Learned another new thing.

04:16:22
<transcript>: Thanks for the following space man. Why do I sometimes not hear notifications.

04:16:22
<transcript>: i don't think

04:16:24
<transcript>: I don't think they show up either.

04:16:24
<transcript>: i don't think

04:16:28
<transcript>: I don't think they show up on the stream and it bothers me.

04:16:28
<transcript>: both

04:16:31
<transcript>: Bothers me so much when my thing doesn't work.

04:16:37
<transcript>: My guys. Thanks for the follow as well.

04:16:37
<transcript>: either

04:16:44
<transcript>: Either I broke my notifications or they just sometimes don't work. Either one bothers me immensely.

04:16:49
texoport: Literally just got a location in the Ozarks in Geoguessr

04:16:55
<transcript>: Okay, we've got our game, and we're gonna pull words. So the main thing is I'm gonna have to have an image for every possible word.

04:16:59
<transcript>: That's a bummer.

04:16:59
<transcript>: the images

04:17:02
<transcript>: The images supposed to be a clue for the word right.

04:17:04
<transcript>: How am I gonna do that.

04:17:06
<transcript>: Okay.

04:17:06
<transcript>: well

04:17:08
<transcript>: Well what if.

04:17:13
<transcript>: Like if I just type a random one of these words into Google, like.

04:17:18
<transcript>: First result in Google Images. This is a terrible idea.

04:17:22
<transcript>: Nope. Get out of here.

04:17:25
<transcript>: I'm using the keyboard trying to be cool.

04:17:29
<transcript>: Polka.

04:17:29
<transcript>: from wikipedia

04:17:30
<transcript>: From Wikipedia.

04:17:30
<transcript>: does that look like

04:17:32
<transcript>: Does that look like polka.

04:17:32
<transcript>: i don't know

04:17:35
<transcript>: I don't know maybe let's try again.

04:17:35
<transcript>: a dap

04:17:36
<transcript>: A DAP.

04:17:43
<transcript>: That has the word in it. So maybe not.

04:17:45
cowfacedude99: I don't think it is a good idea LUL

04:17:45
tnodotre: Use pixabay

04:17:47
<transcript>: They also are going to have to be squared. What if we had to Wikipedia.

04:17:50
<transcript>: Xabay.

04:17:50
<transcript>: i don't think

04:17:53
<transcript>: I don't think it is a good idea. Thanks, cafe.

04:17:57
nexxeln: you could get images from an api i guess

04:17:58
texoport: the first image for "tepid" literally says tepid

04:18:02
<transcript>: You just got a location in the Ozarks and Geo guesser. I don't know what Jugga guesser is, but where was it, Neozark? Because I live in the Ozarks.

04:18:08
<transcript>: First image for Tepid. Literally, says tepid.

04:18:08
<transcript>: what if we

04:18:11
blavignac: how did you do that thing to get the numbers and change page in the browser ?>

04:18:13
<transcript>: What if we go to Wikipedia? We're gonna try Pixabay. What's? Pixabait? You know.

04:18:13
<transcript>: what

04:18:16
<transcript>: What if I search in here? So condo.

04:18:19
<transcript>: Is there an image for copy.

04:18:21
<transcript>: Like a default image.

04:18:30
<transcript>: What if I search adapt which is more of a concept.

04:18:32
cowfacedude99: @blavignac vimium

04:18:37
tnodotre: cc0 img db with api

04:18:38
<transcript>: I don't like that.

04:18:46
texoport: dall e?

04:18:48
<transcript>: Welcome to Chat Blabbing. I see cafes. Answer your question. Top it so Pixabay. What's this Pixabay you say.

04:18:50
<transcript>: Pick a Bay.

04:18:54
<transcript>: Search one word.

04:18:56
<transcript>: Get thing.

04:19:01
<transcript>: Depp.

04:19:11
<transcript>: How we do this? How do we do this with a lot of examples? Anyone have any ideas.

04:19:15
<transcript>: Didn't think through this before I started this project.

04:19:17
blavignac: @cowfacedude99 Thanks !!!

04:19:19
<transcript>: Cco Image DB with a Pi.

04:19:21
hmigo: Took me a while but I am slowly configuring my arch setup, got the wifi working, sound and sway

04:19:25
<transcript>: Oh, it has an API. Dolly. I do have Dolly access. I don't think we could.

04:19:25
<transcript>: generate

04:19:27
<transcript>: Generate enough images with Dolly before we hit the cap.

04:19:31
nexxeln: you would have to make your own list @adamelmore

04:19:35
<transcript>: You know what? I'm gonna hang on. I'm coming over here.

04:19:38
<transcript>: You'd have to make your own list. Yeah.

04:19:38
<transcript>: that would lim

04:19:41
texoport: maybe just 100 lol

04:19:42
<transcript>: That would limit us to the only so many of them. Right.

04:19:44
nexxeln: or you can make this niche like celebs or fruits and make your life easier

04:19:47
<transcript>: Maybe just a hundred. I'd still take a look.

04:19:51
<transcript>: Make this niche like celebs or fruits and make your life you do that's not a bad idea.

04:19:55
<transcript>: You know what I'm considering.

04:19:55
<transcript>: because

04:19:57
<transcript>: Because.

04:19:57
<transcript>: a new idea

04:20:00
jaystation3x: Personally, I don't think the 5 letters thing is essential, either.

04:20:09
<transcript>: A new idea because I was already kind of burned. Oh, 420 exactly. Right now. I'm not really that guy, but like, it's 420 exactly. When I was talking, I just like, I should say something. I don't think the five letter thing is essentially either. Oh.

04:20:09
<transcript>: interesting

04:20:10
<transcript>: Interesting.

04:20:10
<transcript>: so jay

04:20:14
<transcript>: So, Jay, I didn't know you're still here. I don't want this offend you, but I was considering.

04:20:14
<transcript>: just bailing

04:20:17
<transcript>: Just bailing on this idea and doing something else.

04:20:19
<transcript>: Because.

04:20:23
<transcript>: I don't know about this roadblock that we're hitting with the image thing.

04:20:23
<transcript>: i don't

04:20:25
jaystation3x: Bail away.

04:20:31
uberrick: We are your boss though

04:20:35
<transcript>: I don't want to look for 100 images right now. I guess we could just do a couple bail away. Okay, Jay's not offended. Thank you so much for the final space man. Did I already say that? I think I already said that. I'm just nervous. I'm not getting notifications now.

04:20:35
<transcript>: you

04:20:48
<transcript>: You are my boss. That's true, Rick. Okay, you guys are my boss. Tell me what we should build with T three. I just really want to learn. I want to play with Prisma, and I want to play with TRPC. I don't care what we build. I would like to build something that's, like.

04:20:48
<transcript>: doable on

04:20:52
<transcript>: Doable on stream and I'm not gonna have to find a hundred images.

04:20:55
<transcript>: Ideally, that would be great.

04:21:06
<transcript>: I do like the idea, though, of the blurring the image thing. We can do it with just one and just not care about just like do things that don't scale, you know, that's what they say.

04:21:06
<transcript>: it's like

04:21:08
texoport: There might be a data source with mappings between names->images and just pick images with 5 long names

04:21:08
uberrick: todo app haha

04:21:09
neochromer: Image filters?

04:21:10
nexxeln: multiplayer wordle

04:21:12
<transcript>: It's like, do one or two just to see, to get it all built. And then like, we could add more later. That's a good idea.

04:21:19
<transcript>: There might be a data source with mapping between names, images and just pick images with five long names. That's a good idea.

04:21:19
<transcript>: image

04:21:26
<transcript>: Image filters Multiplayer Wordle. Next one says Multiplayer Wordle. So instead of like images, just do multiplayer.

04:21:33
<transcript>: So it's like timed. Like you're trying to do it before the other person, or you're working together.

04:21:43
<transcript>: I was gonna look up if there's like a.

04:21:47
nexxeln: yeah like a duel

04:21:49
neochromer: but the "issue" is you have to handle sessions

04:21:49
<transcript>: One word, One word Images Image database.

04:21:51
neochromer: and stuff like that

04:21:52
nexxeln: you

04:21:53
<transcript>: Like a dual. That sounds pretty fun.

04:21:53
<transcript>: have to handle

04:21:55
<transcript>: Have to handle sessions.

04:21:57
<transcript>: Stuff like that.

04:21:57
<transcript>: what do you mean neoc

04:21:57
texoport: Ooh, maybe. tRPC does do websockets too

04:21:59
<transcript>: What do you mean? Neocromer.

04:22:03
<transcript>: You staying with image filters. The issue is I have to handle sessions.

04:22:05
guillermorodas: Oh that's an amazing strategy, you have the green screen to the side...

04:22:09
neochromer: no no

04:22:10
nexxeln: trpc websockets aren't fully ready and are a pain to work with

04:22:11
neochromer: with multiplayer

04:22:13
<transcript>: Maybe TrpC does do WebSockets, too. Does it really? Oh, even cooler.

04:22:13
<transcript>: oh they're

04:22:17
<transcript>: Oh, they're not fully ready. And a pain to work with. Okay.

04:22:17
nexxeln: i wouldn't recommend them

04:22:19
neochromer: you will have to handle shared web sessions and stuff

04:22:26
<transcript>: Welcome to Chat Germo. It's an amazing strategy. You have the green screen on site. Oh, that's right, gear Mow. I do. I've got a green screen right here. I can reach out and touch it.

04:22:26
<transcript>: and then

04:22:27
nexxeln: even the creator doesn't recommend it

04:22:33
<transcript>: And then I've got my cameras placed. It's very tight. The office is very precisely positioned.

04:22:33
<transcript>: if i move

04:22:39
<transcript>: If I move this camera just a little bit too much. This way you see the green screen. I move that one at all. You see all kinds of things.

04:22:47
<transcript>: So what do we decide here? Wouldn't recommend WebSockets with TRPC. Okay, good to know you'll have to handle shared web sessions and stuff.

04:22:47
<transcript>: i think

04:22:57
<transcript>: I think we're equipped to do pretty much anything with full stack Dev. Now we've got that's. What this? I mean, that's A. T. Three gives us we can do database stuff.

04:23:07
<transcript>: Even the creator doesn't recommend it, so Alex does not recommend the WebSocket stuff yet. It's just like Alpha Alpha mode.

04:23:10
<transcript>: You're saying with multiplayer you type.

04:23:16
<transcript>: I think I know what you're saying. Think I know what you're saying.

04:23:20
<transcript>: All right.

04:23:22
<transcript>: Let's.

04:23:29
<transcript>: Go back to the image thing. We're gonna just reach zoopo. This is a pull.

04:23:39
neochromer: I think that is the "hardest" problem you will have to have 2 sessions and sync them between people

04:23:40
nexxeln: i would recommend liveblocks.io for the websockets, but you could pick a differnet project

04:23:41
neochromer: its a bit pain

04:23:43
<transcript>: I could go back to the image thing because we could just say, Forget it. There's only gonna be like two of them to start and then I don't know. It's open source. Submit a PR if you want more images, she's just played the game twice and you've got no more games to play.

04:23:43
<transcript>: how'd you make you

04:23:45
<transcript>: How'd you make you one.

04:23:48
<transcript>: What.

04:23:48
<transcript>: should we do

04:23:50
<transcript>: Should we do.

04:23:54
<transcript>: I know be my boss please.

04:23:56
<transcript>: Sponsors.

04:24:00
<transcript>: Wordle with images.

04:24:13
<transcript>: Wrong word.

04:24:13
nexxeln: liveblocks willl make your life easy and you won't have to worry about what NeoChromer is saying

04:24:22
<transcript>: What's some other ideas? Do we have anything else? Somebody says.

04:24:22
<transcript>: to do

04:24:28
<transcript>: To do app. I really don't want to build it to do that. But if the people speak.

04:24:30
<transcript>: I'll do it.

04:24:34
<transcript>: Something else.

04:24:38
<transcript>: Entirely. Okay.

04:24:40
<transcript>: Duration.

04:24:40
<transcript>: sure

04:24:42
<transcript>: Sure.

04:24:43
uberrick: haha todo app was a troll

04:24:44
jaystation3x: AWS service guessing game

04:24:46
claudiofreitas3: minesweeper with leaderboard

04:24:47
<transcript>: It's a quick one so 1 minute poll people I could use your help be my boss.

04:24:54
nexxeln: @jaystation3x GOLDEN IDEA

04:24:55
<transcript>: Live block file for the WebSockets, but you could pick a different project. Okay.

04:24:57
<transcript>: What about.

04:24:57
<transcript>: what

04:24:59
<transcript>: What I just see.

04:25:02
<transcript>: What was it? Hang on.

04:25:05
<transcript>: So we just posted a real time thing.

04:25:11
<transcript>: Wait for it.

04:25:11
<transcript>: what about

04:25:12
<transcript>: What about.

04:25:16
<transcript>: Replica.

04:25:22
<transcript>: Zero latency live updating Web UI is based on real time sync.

04:25:22
<transcript>: anybody

04:25:24
<transcript>: Anybody.

04:25:24
<transcript>: may recommend it

04:25:26
<transcript>: May recommend it. That's what they use for the next JS. Comp.

04:25:28
<transcript>: Landing page.

04:25:29
neochromer: @nexxeln really.. will have to look at liveblocks

04:25:31
<transcript>: We could play with that.

04:25:37
<transcript>: I think that is the hardest problem. You'll have to have two sessions and sync them between people.

04:25:37
<transcript>: i like our

04:25:39
<transcript>: I like our problems. Those are fun.

04:25:44
<transcript>: But it does sound like a bit of a pain. Live box will make your life easy.

04:25:44
<transcript>: something else

04:25:47
uberrick: I've heard about it from that conf website too. Sounds interesting

04:25:50
neochromer: oooh Liveblocks seems amazin :O

04:25:50
<transcript>: Something else entirely. Nobody wants me to do Wordle. I get it. I don't know if I do either.

04:25:53
neochromer: solves the problem

04:25:55
andreull: @jaystation3x lol

04:25:59
<transcript>: To do app was not very okay. So the images thing got zero votes. Something else entirely. Well, let's talk. Who's got ideas.

04:26:03
<transcript>: I just want to play with T three. I don't really care what we do.

04:26:03
<transcript>: to do app

04:26:04
<transcript>: To do Apples to troll.

04:26:06
nexxeln: liveblocks is amazing, its a bit pricey tho

04:26:07
<transcript>: That's awesome.

04:26:07
<transcript>: i put it

04:26:09
<transcript>: I put it on the list anyway.

04:26:16
<transcript>: Service guessing game. That sounds kind of fun. I have an AWS person.

04:26:16
<transcript>: oh you

04:26:19
<transcript>: Oh, you know what? I've talked about doing that for a long time.

04:26:19
carlosgn: anyone has a good tutorial to make the neom setup?

04:26:21
<transcript>: Like.

04:26:24
<transcript>: You.

04:26:25
carlosgn: neovim*

04:26:32
0x80h: Are you using the Sony F1.2 lens now?

04:26:34
<transcript>: See the icon. You know how there's like 250 AWS services now have images like logo's. You see the logo and you have to like, say which one it is. If we can make a multiplayer.

04:26:34
<transcript>: sound

04:26:35
<transcript>: Sound.

04:26:35
<transcript>: but

04:26:38
<transcript>: But like none of this crowd's gonna know anything about It. Services.

04:26:38
<transcript>: i don't think

04:26:43
<transcript>: I don't think mine sleeper with Leaderboard I like mine super. I loved Minesweeper as a kid.

04:26:47
<transcript>: Have people recreated my super that would be so fun to build.

04:26:59
sasankthapa: multiplayer minesweeper?

04:26:59
<transcript>: J station. Okay, so next one likes the AWS service guessing game. Whoo we got? Next one's vote and Jay's vote, we'll have to look at live box. I've heard about it from the conference site to sensors. Interesting.

04:27:03
nexxeln: @carlosgn take a look at this https://www.youtube.com/playlist?list=PLhoH5vyxr6Qq41NFL4GvhFp-WLd5xzIzZ

04:27:08
<transcript>: Anyone have a good tutorial to make the new Vim set up Chris App Machine Carlos.

04:27:13
neochromer: ^ he started wit hthat

04:27:21
neochromer: oh nvm

04:27:21
<transcript>: Welcome to Chat zero times 80 height. Are you using the Sony F One Two lens? Now my F One Two is on the camera on the green screen, so it's a 50 millimeter.

04:27:22
neochromer: xD

04:27:23
<transcript>: That's over here.

04:27:25
<transcript>: This one.

04:27:25
<transcript>: is

04:27:26
<transcript>: Is.

04:27:28
<transcript>: 35 millimeter.

04:27:28
<transcript>: one

04:27:30
claudiofreitas3: I did a minesweeper, so I am suggesting so I can compare with mine later :D

04:27:30
<transcript>: One, Eight, Sony.

04:27:34
<transcript>: Sasa Multiplayer minesweeper. That's a great.

04:27:34
<transcript>: suggestion

04:27:37
0x80h: Thanks!

04:27:38
<transcript>: Suggestion. Take a look at this, Carlos. Okay, cool.

04:27:38
<transcript>: i

04:27:43
<transcript>: I did a minesweeper so I'm suggesting so I can pair with mine later. Nice.

04:27:43
<transcript>: so okay

04:27:47
yozd82: multiplayer neovim game..  get to a word / character within text as quick as possible

04:27:48
texoport: Those lego builds look so darn sick with the blur

04:27:48
<transcript>: So. Okay, the two leading ideas for me now are, AWS.

04:27:48
<transcript>: service guessing

04:27:50
<transcript>: Service guessing game which is near and dear to my heart.

04:27:50
<transcript>: as a native bis

04:27:51
guillermorodas: Why do you recommend Ozark in your links? LUL

04:27:52
<transcript>: As a native BIS.

04:27:52
<transcript>: community members

04:27:55
<transcript>: Community members. Somebody who's pretty big into AWS, that one would be fun.

04:27:58
<transcript>: But.

04:27:58
<transcript>: there's also a couple

04:27:58
guillermorodas: Sorry, I

04:28:01
<transcript>: There's also a couple votes for mine sweeper.

04:28:01
carlosgn: @nexxeln Thanks!

04:28:02
guillermorodas: I'm new

04:28:07
<transcript>: Multiplayer Neo Vim game get to a word character within Texas quick as possible.

04:28:07
<transcript>: ooh i love it

04:28:09
<transcript>: Ooh, I love it. I love that idea.

04:28:09
<transcript>: it's kind of

04:28:13
<transcript>: It's kind of like what's his name did.

04:28:24
nexxeln: i love that idea, might steal it

04:28:25
<transcript>: So many people on Twitter. I just forget names. It's what what's his name did with the Vim game thing? The Vincourse that you kind of like Gamified. It.

04:28:30
<transcript>: Those Lego block of builds look so slick with the blur you.

04:28:30
<transcript>: do

04:28:35
<transcript>: Do they do? How about my cowboy hat? So it looks like.

04:28:39
<transcript>: You're good gear mode. You're fine.

04:28:39
<transcript>: i've said it

04:28:49
<transcript>: I've said it earlier. This is a compliment welcoming zone. I think I saw him study time stream. It's no compliments on her stream. You can compliment me, though I don't care.

04:28:53
<transcript>: Which one do you love? Next one.

04:29:03
<transcript>: You're gonna steal something? I don't want to build the one you build. I want to build. Let's create two different things so we can create new things in the world. I'll build the other one. Whichever you don't build.

04:29:10
<transcript>: I think the A. Tobia Service thing. I think that's where I'm at.

04:29:11
nexxeln: neovim game

04:29:14
<transcript>: But yeah, all these ideas are really good.

04:29:19
<transcript>: Why do I recommend those Arc and my links? I just joke. I'm from the Ozarks.

04:29:19
<transcript>: multiply

04:29:19
nexxeln: no you build it, im too lazy

04:29:25
<transcript>: Multiply ne of them game. Yeah, I love that idea. I think that's probably too hard for me right now. I'm probably not far enough along.

04:29:25
<transcript>: in my

04:29:35
<transcript>: In my Neil Them knowledge to build that cintos. Thank you for the follow. You're too lazy. The Neil Them game. Yeah, just that one sounds pretty hard if I'm being honest.

04:29:37
<transcript>: Like would you.

04:29:37
<transcript>: how would you

04:29:39
yozd82: @nexxeln haha same here :P

04:29:41
<transcript>: How would you bring me of it? I guess it should be them.

04:29:44
guillermorodas: Oh, I see! haha

04:29:44
centos1236: I swear I was following before

04:29:48
<transcript>: It'd just be a simple vim pain? But you're too competing. Oh, that would be so fun. Does that not exist.

04:29:48
texoport: building a full blown vim emulation is pretty complex

04:29:52
<transcript>: Sent us. I thought you were following me too. But then I thought maybe was a different head. Does.

04:29:52
<transcript>: building full

04:29:56
texoport: You would need to use something like CM6

04:29:59
<transcript>: Building fullblown vim emulation is pretty complex. Yeah. I wonder if there's already. Like, okay, let's come over here and let's look at some stuff.

04:30:03
<transcript>: I wonder if there's already like a web.

04:30:03
<transcript>: web

04:30:04
<transcript>: Web.

04:30:06
<transcript>: Javascript.

04:30:06
<transcript>: vm

04:30:07
nexxeln: there's probably a package for vim keybindings

04:30:08
<transcript>: Vm.

04:30:08
<transcript>: simulator

04:30:11
<transcript>: Simulator. I don't know. Is there already like a web project for this.

04:30:11
<transcript>: web

04:30:11
texoport: CM6 has decent Vim emulation

04:30:13
<transcript>: Web Port of them.

04:30:15
<transcript>: Vimulator.

04:30:20
texoport: codemirror6

04:30:40
<transcript>: Teaching demonstrate them subset of normal mode commands in an insert mode. I mean, it would have to have, like, real commands in it if it didn't have all of it, then like, people would be upset when they're trying to play the game. And they're like, trying to own the other person. They're like, I know exactly how to get there. And it's like that key Cam that doesn't work. We didn't put that in our emulator.

04:30:40
<transcript>: sorry

04:30:42
<transcript>: Sorry.

04:30:44
<transcript>: So that's the tricky part, right.

04:30:46
<transcript>: Code, mirror.

04:30:46
<transcript>: six

04:30:53
<transcript>: Six CM six is decent. Vim emulation. There's probably a package. It's just. Would it be complete.

04:30:57
<transcript>: Would it be complete? I love this idea, though. I think I want to.

04:30:57
<transcript>: pin this one

04:30:59
<transcript>: Pin this one for like a future project.

04:30:59
<transcript>: just because i don't

04:31:02
<transcript>: Just because I don't know how far I'd get with it today.

04:31:06
<transcript>: But I love that idea. I'm gonna do some more research.

04:31:06
<transcript>: on like

04:31:12
<transcript>: On like vim emulation in the browser. Let's do the a debit service one though I feel like I could do that.

04:31:12
<transcript>: like

04:31:14
<transcript>: Like.

04:31:14
<transcript>: that's right at

04:31:19
<transcript>: That's right at my alley. Let's say delete our Wordle thing.

04:31:22
texoport: repl.it uses CM6 and the Vim emulation was decent

04:31:23
<transcript>: Let's we don't need this anymore.

04:31:26
<transcript>: Okay.

04:31:29
<transcript>: So we're back to just like a blank.

04:31:29
<transcript>: a blank

04:31:32
<transcript>: A blank. T. Three app. Right.

04:31:32
<transcript>: let's let's get

04:31:33
kylliangamer: adam PogBones

04:31:34
<transcript>: Let's let's get all the a BS service on.

04:31:38
<transcript>: Service icons.

04:31:38
<transcript>: somebody

04:31:41
<transcript>: Somebody in the community, I know somebody was gonna build this.

04:31:45
<transcript>: I'm really bad with names. Turns out.

04:31:45
<transcript>: rowan

04:31:55
<transcript>: Rowan was gonna build this, and I don't want to step on Rowan's toes. But also, that was like a year ago that I talked to Roan about this. And if you hadn't done it yet, I feel like it's free game. We can build this thing now.

04:31:55
<transcript>: i would love to

04:32:00
<transcript>: I would love to collaborate with Rowan, though if you want to come in and work on it.

04:32:00
<transcript>: but we're doing

04:32:03
<transcript>: But we're doing it. We're building it.

04:32:11
<transcript>: Download toolkit for PowerPoint. Why would you assume that? Why would I want that? I want these no asset package. Here we go.

04:32:14
<transcript>: Killing is here. Gillian.

04:32:25
<transcript>: Replic uses CM six, and the VM Emulation was decent. Okay, so that's a good option. I'm gonna pin that one. We are gonna come back. I'm very excited about building that actually.

04:32:25
<transcript>: maybe

04:32:27
<transcript>: Maybe too excited.

04:32:27
<transcript>: arguably

04:32:28
<transcript>: Arguably.

04:32:32
wuelnerdotexe: Hellow GlitchCat

04:32:44
<transcript>: More excited about than, like, a lot of the things I should be working on, but we're gonna do this one first. So we have AWS service icons, and we're gonna probably spend half the time just getting, like, our little database of these. So let's just pull these up. These are what they look like, right.

04:32:48
<transcript>: That's one of the AWS setters, that's a category.

04:32:48
<transcript>: category

04:32:51
<transcript>: Category, Icons, Resource, icons.

04:32:53
<transcript>: So if I go to like.

04:32:58
<transcript>: Let's go to compute. But there's like a Lambda.

04:33:05
<transcript>: 01:00 a.m.. I looking at.

04:33:10
<transcript>: You think I'd never looked at these? I've downloaded them like ten times.

04:33:15
<transcript>: That's so many instance types.

04:33:15
<transcript>: just all

04:33:17
<transcript>: Just all easy.

04:33:21
<transcript>: Beansock? Oh, there we go, Lambda? Here we go.

04:33:21
<transcript>: here's a lambda

04:33:23
<transcript>: Here's a Lambda function.

04:33:23
<transcript>: icon

04:33:28
<transcript>: Icon. Kind of. That's not the one I'm thinking of. Nope.

04:33:33
<transcript>: I literally have these on my wall. I literally have them printed on my wall.

04:33:35
<transcript>: I can't find them.

04:33:35
<transcript>: maybe

04:33:37
wuelnerdotexe: I saw Neovim, and I'm here... greetings from Guatemala, from latinoam√©rica üá¨üáπ

04:33:37
<transcript>: Maybe it's under architecture.

04:33:41
<transcript>: Architecture Service Icons Here we go, here we go.

04:33:44
<transcript>: Compute.

04:33:44
<transcript>: yeah yeah

04:33:46
<transcript>: Yeah, Yeah.

04:33:46
<transcript>: sixty four

04:33:49
<transcript>: 64. This is where this is what I remember.

04:33:56
<transcript>: Lambda SVG. We're gonna want to use SVG for all of these, but I want to see the PNG real quick.

04:33:59
<transcript>: Let's go to.

04:34:06
<transcript>: Fargate Lambda here we go. So we have.

04:34:06
<transcript>: a whole big

04:34:07
<transcript>: A whole big thing.

04:34:07
<transcript>: of these

04:34:11
<transcript>: Of these right. There they are. So it's gonna show you this.

04:34:11
<transcript>: and then you have

04:34:18
<transcript>: And then you have to click on the right service name. Right. So we need to build up a little database here of icons.

04:34:21
<transcript>: And.

04:34:25
texoport: Fargate is the coolest sounding AWS product IMO

04:34:30
<transcript>: In the service names. And the way we're gonna make this whole stack is we're gonna, like, do a whole leaderboard thing. Maybe we'll make a multiplayer eventually. I don't know. We'll see.

04:34:35
<transcript>: Will you.

04:34:41
<transcript>: Of M. And I'm here. Greetings from Guatemala, from Latin America. Nice to have you.

04:34:41
<transcript>: yes we

04:34:48
<transcript>: Yes, we are working in Neil them. I mean, we I'm using new Ven these days. Switched over from Vs code a few weeks ago.

04:34:50
<transcript>: Have been loving it.

04:35:01
<transcript>: Hello, Hello, Fargate is the coolest sounding aid of this project. It is a cool name. I don't like working with containers, basically at all. Fargate makes it a little less miserable.

04:35:01
<transcript>: and

04:35:08
<transcript>: And for that, it is a cool service. Okay, so we have this big database. We're gonna need to get all these images.

04:35:13
<transcript>: We're gonna put them in a big database. Let's see. I want to.

04:35:17
<transcript>: How this is gonna be fun. I'm very excited to build this.

04:35:21
<transcript>: Let's see.

04:35:28
<transcript>: So I'm gonna make like a data directory, I guess.

04:35:32
<transcript>: You approve next one.

04:35:32
<transcript>: but the data

04:35:33
<transcript>: But the data directory.

04:35:36
wuelnerdotexe: Welcome to vimmer's community, Neovim is amazing \0/

04:35:38
<transcript>: Data.

04:35:41
<transcript>: And then inside of data.

04:35:41
<transcript>: i'm going

04:35:43
<transcript>: I'm going to.

04:35:47
nexxeln: why not

04:35:48
<transcript>: Vimners community. I'm loving it, I love it. Wilner.

04:35:54
<transcript>: So in here, we're gonna have the images.

04:35:54
<transcript>: we'll call

04:35:55
<transcript>: We'll call.

04:35:59
<transcript>: Icons.

04:36:03
<transcript>: I just want to import these.

04:36:03
<transcript>: no

04:36:07
<transcript>: No, no. I want to put them in public. I'm done.

04:36:07
<transcript>: i'm dumb

04:36:09
<transcript>: I'm dumb.

04:36:12
<transcript>: We're gonna have a public images.

04:36:16
<transcript>: Directory. And then we'll have the.

04:36:16
<transcript>: database

04:36:21
<transcript>: Database the like little map will just map service name to image.

04:36:24
<transcript>: Yeah. Okay.

04:36:32
<transcript>: So let's go and move all of our images over. How do I want to do that? I want to grab. Okay. Somebody helped me. I want to do this the right way.

04:36:35
<transcript>: I'm gonna come out here.

04:36:42
<transcript>: So we have this name Blurtle. I need to rename this. I can't handle it being named brittle.

04:36:46
<transcript>: Project name.

04:36:52
<transcript>: Move Blurtle to.

04:36:59
<transcript>: I need a name, I need a name, I need a name and need it name for this thing? What is this thing called.

04:37:01
<transcript>: Service, AWS.

04:37:01
<transcript>: service

04:37:02
<transcript>: Service.

04:37:02
<transcript>: game i

04:37:05
<transcript>: Game I don't know service guesser.

04:37:11
<transcript>: Services.

04:37:11
<transcript>: i don't know

04:37:14
<transcript>: I don't know hey naming things.

04:37:16
<transcript>: Okay.

04:37:19
<transcript>: Let's.

04:37:22
<transcript>: Aws services.

04:37:28
<transcript>: Then we're gonna need to go in and change it here as well.

04:37:33
<transcript>: Okay.

04:37:35
cowfacedude99: aws-guesser

04:37:39
jaystation3x: Service Storm

04:37:45
<transcript>: So I want to actually copy all the images from this directory. Actually from.

04:37:49
<transcript>: This.

04:37:49
<transcript>: this directory

04:37:52
qubiz: awguess

04:37:54
<transcript>: This directory. So I want to, like, recursively, grab every image.

04:37:54
<transcript>: okay

04:37:54
mrczerny: awser

04:37:55
<transcript>: Okay.

04:37:58
<transcript>: From the 64 direction.

04:38:04
jaystation3x: @Qubiz üèÜ

04:38:05
<transcript>: Let's see here. Aws, sir. Aw, guess. Hey, welcome to Chat, both of you.

04:38:10
<transcript>: Cuba's. And MRC. Welcome to chat.

04:38:18
<transcript>: Awes. I get it. Cuba's. That's so good. It's like, AWS, but any of you get so good.

04:38:18
<transcript>: winter

04:38:20
<transcript>: Winter winner. Move.

04:38:20
<transcript>: a to be a

04:38:22
<transcript>: A to be a services.

04:38:22
<transcript>: to

04:38:25
<transcript>: To AW guess.

04:38:25
<transcript>: that's so good

04:38:26
qubiz: Hi! :D

04:38:30
<transcript>: That's so good. You gotta get credit for that wherever we list this thing. Oh, Geez, hang on.

04:38:34
<transcript>: Browser.

04:38:37
nexxeln: awguess is amazing

04:38:39
<transcript>: Maintain.

04:38:45
<transcript>: You know, interview guests, Dev, I guess. Or.com.

04:38:53
<transcript>: If you're watching, please don't buy this before I can.

04:38:56
<transcript>: Please don't.

04:39:06
<transcript>: Okay, Go and Fuzzy while we check out Go, go.

04:39:10
<transcript>: Just buy it. I don't care. Confirm.

04:39:14
<transcript>: Oh, I gotta log in oh, feels bad.

04:39:22
<transcript>: My password.

04:39:24
<transcript>: Oh no.

04:39:29
<transcript>: I'll disagree. We don't want to swipe this before I buy it.

04:39:29
<transcript>: oh

04:39:33
<transcript>: Oh, my gosh. I made five, three consecutive Phillips.

04:39:33
<transcript>: last

04:39:35
<transcript>: Last try.

04:39:38
<transcript>: What is going on.

04:39:38
nexxeln: i didn't know you were addicted to buying domains

04:39:39
uberrick: you can buy them from me for 1 million dollars

04:39:53
<transcript>: Why am I even having to.

04:39:57
<transcript>: $1 million.

04:39:57
<transcript>: i am

04:40:02
<transcript>: I am so addicted to buying domains. I spent $10,000 on Adam Dev.

04:40:04
cowfacedude99: do you want me to hold it for you?

04:40:05
<transcript>: Okay.

04:40:10
<transcript>: Last try? Oh, Geez.

04:40:10
<transcript>: it was right

04:40:11
<transcript>: It was right.

04:40:11
<transcript>: update

04:40:11
jaystation3x: If you know anyone in South Sudan, you can get awgue.ss

04:40:12
<transcript>: Update.

04:40:14
<transcript>: Jeez.

04:40:14
<transcript>: wow

04:40:16
<transcript>: Wow, that was stressful.

04:40:19
nexxeln: 10k? holyy

04:40:19
<transcript>: Okay.

04:40:27
<transcript>: I'm waiting for it and we're waiting for the not available anymore.

04:40:33
<transcript>: Calvis.

04:40:33
<transcript>: i don't

04:40:41
<transcript>: I don't think I need to take you up on it now. I think I got it. Oh, Jay, Station interview guessed the S's could be the TLD.

04:40:43
andreull: i wanted to buy a domain for a friend to make a website for him as a present. they asked $21k for it bro :(

04:40:49
<transcript>: Think we got it. Aws.com. Do I spell it right in my rush. Yeah, it is your guess it didn't.

04:40:54
<transcript>: That's so good. Aw, guess, Dev, we're building this on the very stream you're watching right now.

04:40:54
<transcript>: i'm very excited

04:40:56
<transcript>: I'm very excited.

04:40:56
<transcript>: we have the domain

04:40:58
<transcript>: We have the domain. Now, that's the important thing.

04:40:58
<transcript>: okay

04:41:00
<transcript>: Okay.

04:41:01
qubiz: awesomeüôè

04:41:02
<transcript>: Let me fuzzy again real quick.

04:41:02
<transcript>: close

04:41:03
<transcript>: Close this.

04:41:11
<transcript>: You kind of did make me want to get AW guess with the.

04:41:12
nexxeln: you got both .com and .dev LUL

04:41:12
<transcript>: Ss, two.

04:41:12
<transcript>: aw

04:41:13
<transcript>: Aw.

04:41:22
<transcript>: That's kind of nice? Oh unsupported on Namecheap? So if it's on support on Namecheap it's dead to me.

04:41:22
<transcript>: i could do

04:41:26
<transcript>: I could do a W guess GG says it's the game.

04:41:30
<transcript>: Okay.

04:41:37
<transcript>: I think that's just Theo admiration wanting to get all the GG don't.

04:41:37
mustackk: I love the name!

04:41:43
<transcript>: Come, I got Dev, I got GG, we are in business people.

04:41:44
nexxeln: wtf you're buying .gg too LUL

04:41:46
<transcript>: In business.

04:41:48
nexxeln: hoarding domains here

04:42:02
<transcript>: I'm buying GG. I don't just buy a domain. I buy every possible permutation and TLD of that domain. You should see the list of domains. It's. It's too many domains that I own. I have a problem. Someone stop me.

04:42:05
<transcript>: I do hoard them very badly.

04:42:10
<transcript>: 21k for it.

04:42:10
<transcript>: yeah they

04:42:15
mustackk: Good thing domains are free Kappa

04:42:18
icedcoffefe: my strange addiction: domain names

04:42:18
<transcript>: Yeah, they want a hundred K for Adam TV. And I thought about it for more than 10 seconds. That's how bad of a problem I have. Like, I have a problem. Problem.

04:42:20
<transcript>: Okay.

04:42:23
<transcript>: Back to unfuzzy.

04:42:30
cowfacedude99: I only got one. And I don't want to buy another

04:42:31
<transcript>: Good things domains are free.

04:42:31
<transcript>: yeah

04:42:45
<transcript>: Yeah, it's a problem. Okay. What are we doing? We're gonna I want to try and copy all these images. So we're gonna do a little like, scripting. Now this is like we got our domain. Time to script. I love scripting. I love this writing. Random script. So we have this directory, right.

04:42:45
<transcript>: maybe

04:42:45
nexxeln: i have two domains, one theo bought for me

04:42:48
<transcript>: Maybe we'll name it something a little friendlier.

04:42:51
<transcript>: Let's name this one.

04:42:53
nexxeln: theo one is cooler tbh

04:42:54
<transcript>: Downloads let's do.

04:42:54
delvoid: he did confirm hes going to buy adam.tv once he hits 100k followers

04:42:58
<transcript>: Oh, come on.

04:43:04
<transcript>: Just trying to rename you AWS, icons.

04:43:04
<transcript>: and then i

04:43:06
<transcript>: And then I want in this directory.

04:43:06
<transcript>: use these

04:43:08
<transcript>: Use these.

04:43:12
<transcript>: In this directory. We want to find all of these.

04:43:12
<transcript>: sixty

04:43:12
mrczerny: domains are the real deal long before and unlike nfts

04:43:13
<transcript>: 64.

04:43:13
<transcript>: svg

04:43:16
<transcript>: Svg. Okay.

04:43:16
<transcript>: i want to get

04:43:20
urobeat: is adam.tv just going to redirect to your twitch?

04:43:22
<transcript>: I want to get all of the this can be really easy, isn't it? I just need to oh, oh, AW. Guess I gotta finish this.

04:43:25
<transcript>: Move that to that.

04:43:25
<transcript>: and

04:43:29
<transcript>: And CW. Aw, guess that's so good.

04:43:29
<transcript>: someone writing

04:43:35
<transcript>: Someone writing on the wall. Someone put where who was it again? That I just can't even remember how Cuba's was it, you know.

04:43:41
<transcript>: Yes. Cube is okay. I'm following you.

04:43:46
<transcript>: I just gotta remember that you get credit for this name. That is too good.

04:43:46
<transcript>: love it

04:43:52
<transcript>: Love it. Welcome to Chat. Thank you for coming up with a great name. Thanks for the followup tomorrow.

04:43:52
<transcript>: and

04:43:55
<transcript>: And Wilner, did I already say that.

04:44:06
<transcript>: Yes, you're Obed. It would be a $100,000 redirect to my Twitch channel. That's literally what I would do with it. But I'm not gonna spend hundred thousand dollars of domain because my wife would kill me, like literally.

04:44:09
<transcript>: Yeah.

04:44:09
<transcript>: once

04:44:19
<transcript>: Once I hit $100,000, now we could talk about it, I guess. Can you even hit 1000 followers on Twitch? I don't even know. Are there 1000 people watching developers on Twitch? Probably not.

04:44:28
<transcript>: You have two domains. Two GG domains. Next, only one of them deal about you. That's such a flex. You're so cool.

04:44:28
<transcript>: i don't mean

04:44:29
mrczerny: we wouldn't tell her

04:44:36
<transcript>: I don't mean that like sarcastically, like, you really are. Like, I can't believe the person who created the T Three app is here.

04:44:36
<transcript>: in our presence

04:44:37
<transcript>: In our presence.

04:44:42
nexxeln: no i have nexxel.dev and nxl.sh

04:44:46
<transcript>: You only got one domain. You don't want to buy another, you only have one. Thank you so much, Cuban, for the subscription. I appreciate that for the tier One sub.

04:44:46
<transcript>: you name

04:44:52
<transcript>: You named my thing, you subscribe to me like I owe you a lot. Now, at this point.

04:44:59
<transcript>: When to buy MTV once I have it. Do I say that because it's really good idea.

04:45:00
nexxeln: i just use subdomains on nxl.sh

04:45:02
<transcript>: Which wouldn't tell.

04:45:07
<transcript>: I have Nextle Dev and in Excel sh. Those are both cool.

04:45:07
<transcript>: i just use subdomain

04:45:10
<transcript>: I just use subdomains on NXL sh that's those are both really cool.

04:45:13
<transcript>: Okay.

04:45:13
<transcript>: we've

04:45:15
<transcript>: We've renamed this.

04:45:15
<transcript>: one more

04:45:17
mustackk: Maybe you can negotiate them down to 75k for adam.tv?

04:45:17
<transcript>: One more time. Let's go in here.

04:45:17
<transcript>: i'm so excited about

04:45:18
wuelnerdotexe: Thanks, my parents were creative haha PogChamp

04:45:19
<transcript>: I'm so excited about this project.

04:45:23
<transcript>: Aw guess.

04:45:26
<transcript>: This is so good.

04:45:26
<transcript>: okay

04:45:27
<transcript>: Okay.

04:45:31
<transcript>: Now we need to get out of here, and we're gonna move all these five.

04:45:33
<transcript>: Into public.

04:45:37
nexxeln: alright i gtg see ya

04:45:38
<transcript>: Public Images, right? Yeah, yeah. They're going in there. So we're gonna say.

04:45:42
<transcript>: Copy, this is gonna be actually really easy, isn't it.

04:45:48
<transcript>: You can just use wild cards. Right? So I can just do downloads.

04:45:48
<transcript>: down

04:45:53
<transcript>: Downloads, databases. Icons use these.

04:45:55
<transcript>: Star.

04:46:00
<transcript>: 64.

04:46:00
<transcript>: svg

04:46:01
<transcript>: Svg.

04:46:01
<transcript>: into

04:46:02
<transcript>: Into.

04:46:04
<transcript>: Public.

04:46:04
<transcript>: images

04:46:05
<transcript>: Images.

04:46:09
<transcript>: Go? Nope. What's wrong.

04:46:09
<transcript>: no math

04:46:10
<transcript>: No Mathes.

04:46:13
<transcript>: Oh.

04:46:16
<transcript>: Come on. Keycaster. Get out of my way.

04:46:16
<transcript>: double star

04:46:18
<transcript>: Double star.

04:46:18
<transcript>: star yeah

04:46:20
<transcript>: Star yeah like that.

04:46:20
<transcript>: done

04:46:21
<transcript>: Done.

04:46:25
<transcript>: None. There they are. Okay.

04:46:30
<transcript>: Sometimes things go smoothly and it feels good.

04:46:32
<transcript>: There are.

04:46:32
<transcript>: images

04:46:34
<transcript>: Images.

04:46:34
<transcript>: okay

04:46:40
<transcript>: Okay. Cool. So their SVGs, which is what I like. I prefer to work with SVGs, right.

04:46:51
<transcript>: I think I prefer that. So we've got images. Now we need to derive the names for them. So, like, is this something we can automate.

04:46:55
nexxeln: i posted your link in theo's discord so maybe people will come and help you out with t3 stack

04:46:55
<transcript>: So their Pascal case.

04:46:55
<transcript>: are

04:46:56
nexxeln: okay bye

04:46:59
<transcript>: Are they actually if they're supposed to be a space, do they put a space.

04:46:59
<transcript>: i also put

04:47:03
<transcript>: I also put a hyphen if it's supposed to be a space, so okay.

04:47:03
<transcript>: so

04:47:07
<transcript>: So it's either arch. Aws or arch. Amazon.

04:47:07
<transcript>: and then

04:47:07
mrczerny: What's the color scheme or the theme?

04:47:09
<transcript>: And then it's the name of the service.

04:47:09
<transcript>: with

04:47:13
<transcript>: With Hyphens between for spaces, easy.

04:47:16
<transcript>: Too easy. This is going too well.

04:47:18
<transcript>: Let's.

04:47:18
<transcript>: open

04:47:20
<transcript>: Open.

04:47:20
<transcript>: i can't

04:47:24
<transcript>: I can't hold it I gotta be I'll be right back.

04:50:24
<transcript>: Negotiate them down at for MTV. Maybe. I don't think so.

04:50:29
<transcript>: Thanks. My parents were creative. What was that? Wulner.

04:50:38
<transcript>: Oh, next one had to leave oh, no, next one's gone.

04:50:38
<transcript>: well

04:50:43
<transcript>: Well, it was so great to have you while you're here. I know you're gone now. I'm talking to myself.

04:50:43
<transcript>: posted

04:50:47
<transcript>: Posted a link in the description maybe people will come and help you out with these rescue. That'd be cool.

04:50:47
<transcript>: what's color schem

04:50:50
<transcript>: What's color scheme, or the theme.

04:50:50
<transcript>: the color

04:50:54
<transcript>: The color scheme is Dracula. Let's get back to it.

04:50:58
<transcript>: Okay. So we need to grab the name.

04:50:58
<transcript>: from

04:50:58
wuelnerdotexe: I have my own theme, I recommend it to you, it's called 'Enfocado' and it's more than just a theme...

04:51:00
<transcript>: From each service.

04:51:09
<transcript>: You can make this smaller. Now.

04:51:13
<transcript>: So let's see. We've got all these SVG files.

04:51:19
<transcript>: I think I need to rename them all to remove.

04:51:19
<transcript>: the

04:51:24
<transcript>: The Arch, and then like Amazon or AWS, or Alexa.

04:51:26
<transcript>: Alexa for Business. I have.

04:51:26
<transcript>: to call some of these

04:51:28
noob_cod3r: try the doki theme

04:51:31
<transcript>: To call some of these if I'm being honest. Like, Do I want Alexa for business showing up.

04:51:33
<transcript>: Probably not.

04:51:37
<transcript>: Like, is that here.

04:51:37
<transcript>: i want to see what

04:51:42
noob_cod3r: https://marketplace.visualstudio.com/items?itemName=unthrottled.doki-theme

04:51:43
<transcript>: I want to see what even looks like like I know a lot of AWS services, but if I solve that, I would have no idea.

04:51:51
<transcript>: I guess you shouldn't know I'll the answers that's maybe fine, but I'm gonna have to strip off. I think I want to clean with these names.

04:51:56
<transcript>: Let's see. How do I do that? I'd like the names to just be lowercase.

04:51:56
<transcript>: and i'd like

04:51:58
cowfacedude99: one trick, If you want to equalize windows, you can use <c-w>=

04:52:04
<transcript>: And I'd like them to be Kebab case and strip off the 64. So we got some more scripting to do here, people. It's script time.

04:52:04
<transcript>: let's go

04:52:06
<transcript>: Let's go back here.

04:52:10
<transcript>: Let's just push D into.

04:52:10
<transcript>: public

04:52:12
<transcript>: Public images.

04:52:19
<transcript>: We're just going to rename them in place. How do I want to do this? Do we want to write a little script in JavaScript to do this.

04:52:19
<transcript>: or don't want to

04:52:23
<transcript>: Or don't want to try and do it all in bash. I can do this on bash. Right.

04:52:35
<transcript>: Chime SDK.

04:52:35
<transcript>: chime

04:52:37
noob_cod3r: https://github.com/doki-theme/doki-theme-vim

04:52:39
<transcript>: Chime Voice Connector so it wanted to go through.

04:52:46
<transcript>: If I wanted to go through and rename a bunch of files with bash.

04:52:56
mrczerny: @noob_cod3r lol

04:53:02
<transcript>: Let's see.

04:53:08
<transcript>: Bash rename, five.

04:53:16
cowfacedude99: there's a command, I can't remember the name on top of my head

04:53:17
<transcript>: Okay.

04:53:23
<transcript>: Do move F Echo Ah, AHA.

04:53:23
<transcript>: done this

04:53:25
<transcript>: Done. This. Looks great.

04:53:30
<transcript>: Let's do like this. I'm in fish so like can I even run this.

04:53:30
<transcript>: probably

04:53:33
<transcript>: Probably not. There's probably gonna be problems.

04:53:37
<transcript>: But I could run bash if I want to.

04:53:41
<transcript>: Just that though.

04:53:41
<transcript>: second

04:53:43
<transcript>: Second work. We got to run bash.

04:53:53
<transcript>: Now I can do.

04:53:53
<transcript>: dot

04:53:55
<transcript>: Dot.

04:53:55
<transcript>: s

04:53:56
<transcript>: Svg.

04:54:01
<transcript>: Move.

04:54:06
<transcript>: F that thing's in my way keycasters in my way.

04:54:11
<transcript>: There's a command. Get rid of the name off of your head. You guys talking about what I'm doing here.

04:54:11
<transcript>: echo

04:54:16
<transcript>: Echo F, and we're gonna replace thing with this. So let's see.

04:54:16
<transcript>: i'm gonna strip

04:54:19
<transcript>: I'm gonna strip off first. We'll just strip off the arch.

04:54:21
<transcript>: Oh, I can't use.

04:54:29
<transcript>: We'll strip off arch like that or art or whatever architect. And we're gonna replace it with nothing.

04:54:31
<transcript>: Okay, let's try this.

04:54:37
<transcript>: Did it work. Let's open it up. Over here.

04:54:39
mrczerny: @WuelnerDotEXE Thanks, looking beautiful

04:54:46
<transcript>: What is this called? Aw, guess I love that name so much. And the fact that the.com was available. Oh, man. So good.

04:54:50
<transcript>: Public.

04:54:50
<transcript>: images

04:55:11
<transcript>: Images. Okay. So we should have stripped off Arc. Yeah. Yeah. So now we can go through and I actually want to keep AWS and Amazon around because there's also a game that we can create a second game that is like AWS or Amazon. Pick, like services. Notoriously. Start with either Amazon or AWS, and it seems like it's random. It's hard to figure out.

04:55:15
<transcript>: So that could be a game like here's a sort of.

04:55:19
<transcript>: Aws or Amazon. So I want to keep those around for that reason.

04:55:22
<transcript>: Oh, some of them don't have any of it, though.

04:55:25
<transcript>: Do I just delete the ones that don't have.

04:55:28
<transcript>: I feel like I might just delete these.

04:55:34
<transcript>: Bottle rocket cloud into disaster recovery elastics fabric adapter I'm just gonna delete these.

04:55:34
<transcript>: these are much

04:55:37
<transcript>: These are much like open source stuff.

04:55:44
<transcript>: Vmware cloud on AWS, yeah, I'm just gonna delete them.

04:55:51
<transcript>: Why can't I leave you.

04:55:51
<transcript>: okay

04:55:58
<transcript>: Okay. So now they either start with AWS or Amazon, or Alexa. I'm getting rid of Alexa just for the consistency.

04:55:58
<transcript>: delete

04:56:00
<transcript>: Delete.

04:56:02
<transcript>: Okay.

04:56:02
<transcript>: amazon or

04:56:05
<transcript>: Amazon, or AWS, we're gonna lowercase those.

04:56:10
<transcript>: And then.

04:56:10
<transcript>: then what

04:56:15
<transcript>: Then what then? The rest of it is the service name. We want to replace the underscore 64.

04:56:15
<transcript>: so let's

04:56:16
<transcript>: So let's do this.

04:56:28
<transcript>: Now they all end like that.

04:56:28
<transcript>: and then i

04:56:28
cowfacedude99: You could do stuff with xargs and sed

04:56:30
<transcript>: And then I want to lowercase, like all of it.

04:56:33
<transcript>: Xr's instead.

04:56:38
<transcript>: That sounds cool.

04:56:43
<transcript>: Do I need if I want to lowercase this all? Am I gonna have to do that.

04:56:46
<transcript>: Let's see.

04:56:46
<transcript>: bash

04:56:48
<transcript>: Bash.

04:56:48
<transcript>: lowercase

04:56:51
<transcript>: Lowercase all file names.

04:56:59
<transcript>: Because that's what I want to do next.

04:57:04
<transcript>: Rename.

04:57:09
<transcript>: F flag so I can just rename just like this.

04:57:09
<transcript>: is that same

04:57:10
<transcript>: Is that same.

04:57:10
<transcript>: well

04:57:13
cowfacedude99: You can't use sed for lowercase

04:57:14
<transcript>: Well, that assumes there's no numbers, right.

04:57:14
<transcript>: a three

04:57:16
<transcript>: A Three Z.

04:57:21
<transcript>: Can you set for Lowercase? Yeah. How can I do this on.

04:57:34
<transcript>: You. They're saying I can do that. I don't think that factors in numbers.

04:57:42
<transcript>: Rename all files lowercase. Here we go. Macos for yeah, move.

04:57:43
<transcript>: Wait.

04:57:43
<transcript>: tip what i

04:57:46
<transcript>: Tip what I have to move into temp file.

04:57:55
<transcript>: Echo FTR. Upper, lower. Done. I guess I just try it.

04:58:05
cowfacedude99: can I throw something at you?

04:58:08
<transcript>: Let's try it look at go wrong pacing something from the internet running it on our machine.

04:58:12
<transcript>: It worked. Alright.

04:58:14
fragaverage: I'm back! and what the f- are we doing now LUL

04:58:16
<transcript>: Yes copies Please do throw something at me we got.

04:58:21
<transcript>: Hey, brag.

04:58:23
<transcript>: What do we need.

04:58:23
<transcript>: we're making

04:58:25
wuelnerdotexe: This is the Enfocado website, in case any of you are interested: https://wuelnerdotexe.github.io/enfocado üëÅÔ∏è

04:58:26
<transcript>: We're making an AWS Service guessing game.

04:58:26
<transcript>: so you're gonna see

04:58:40
cowfacedude99: I guess you are done.

04:58:43
<transcript>: So you're gonna see an AWS service image. You have to. You're gonna have, like, four choices. You have to guess, and it's gonna be speed. And we're gonna do multiplayer, and we're gonna do a leaderboard, all of it. We're just trying to play with T three. So we're gonna play with the T three stack. We needed something to build. This is something I wanted to build a long time ago, finally doing it. And someone.

04:58:43
<transcript>: had a great

04:58:46
<transcript>: Had a great idea Cube is.

04:58:46
<transcript>: had

04:58:51
<transcript>: Had a fantastic idea for the name it's AW, guess.

04:58:51
<transcript>: not aws

04:58:53
<transcript>: Not AWS, but AW guess.

04:58:53
<transcript>: and we now

04:58:57
fragaverage: ohhh okay, that's much less worrying that the current screen looks

04:58:57
<transcript>: And we now own the.com Dev and GG domains.

04:58:59
<transcript>: There we are.

04:58:59
<transcript>: some of us

04:59:04
fragaverage: damnnnnn that's a fire name

04:59:08
<transcript>: Some of us worrying the current screen looks, what's the current screen look like. I just had to rename these files because we're building up, like, our game database. Here.

04:59:11
cowfacedude99: this would have been a good exercise with bash LUL and xargs and sed and awk

04:59:12
<transcript>: So everything after.

04:59:17
<transcript>: Everything after the Amazon, or AWS is the name of the service. Okay.

04:59:22
<transcript>: Yeah it would have been a good exercise with Bash XR's and said.

04:59:26
<transcript>: Yeah, sorry. I did it. Cafe. That just did it.

04:59:32
<transcript>: Yeah, that's how you touch a good name, Cube. Is that's such a good name? Okay, so Let's.

04:59:36
<transcript>: Go back in here. Oh, Nope.

04:59:39
<transcript>: Get out of here.

04:59:39
<transcript>: pop

04:59:39
qubiz: Haha glad everyone likes it ü¶ö

04:59:41
<transcript>: Pop D.

04:59:43
<transcript>: dance

04:59:44
<transcript>: Dance for.

04:59:48
tayloreddev: I like automator  on the mac for these types of tasks

04:59:49
<transcript>: Aw guess.

04:59:54
<transcript>: And then so we have our Images Directory now.

04:59:54
<transcript>: all these images

04:59:57
wuelnerdotexe: @mrczerny Thank you for using it \0/ I would love to see your review üëÅÔ∏è

05:00:01
<transcript>: All these images. Cool, cool. Now we're gonna build up. Let's go in here to source. I think you said put it in utils.

05:00:08
<transcript>: Sitting where you can put it in the Lib directory. But he hates that. Next. Omens hates Lib directories. I kind of like them.

05:00:08
<transcript>: don't

05:00:12
<transcript>: Don't have excellent, but I kind of like left directories.

05:00:18
<transcript>: I don't like the name, but I'm just so used to it now that I like the separation. Like, I know that's all. Like.

05:00:18
<transcript>: stuff

05:00:20
<transcript>: Stuff I'm using on the back end.

05:00:24
cowfacedude99: Time to read docs?

05:00:24
<transcript>: Also has this server direction.

05:00:30
jaystation3x: I'm here for the ASMR.

05:00:31
<transcript>: We'll put it in utils. For now, we'll honor next. Only in his spirit.

05:00:36
<transcript>: You're here for the ASMR J station.

05:00:49
<transcript>: This would have been a good actually. Okay. Yeah, I read that like Automator on the Max of these types of tasks. I don't know anything about Automator.

05:00:49
<transcript>: time to

05:00:57
<transcript>: Time to read, Docs. For what? Dot docs. For the T three. Yeah, I think we're on the T three now. We're actually doing T three stuff.

05:00:57
<transcript>: oh you mean like

05:01:01
<transcript>: Oh, you mean like Create P Three app. Maybe we should read those dots. That's good idea.

05:01:03
<transcript>: That's a great idea.

05:01:07
<transcript>: Oh my not running anymore.

05:01:13
cowfacedude99: trpc docs.

05:01:15
<transcript>: So not running anymore did I break it all.

05:01:15
<transcript>: oh cuz i renamed

05:01:16
<transcript>: Oh, cuz. I renamed it.

05:01:20
<transcript>: Cd Eight, AW.

05:01:32
<transcript>: And then we want to do PMP MPN PM run Dev. Okay. Should be back up.

05:01:35
<transcript>: I don't need this open anymore.

05:01:35
<transcript>: let's reach

05:01:38
<transcript>: Let's reach some Docs. What do you say? T three.

05:01:38
<transcript>: so if i

05:01:40
<transcript>: So if I want to create.

05:01:44
<transcript>: How to create some stuff.

05:01:47
<transcript>: Type safe environment variables.

05:01:49
<transcript>: Start over here.

05:01:54
<transcript>: Some kind of template.

05:02:07
<transcript>: Maybe the docs is not maybe this is not where I want to be. Oh, here we go. Usage.

05:02:12
<transcript>: I don't know.

05:02:15
<transcript>: Just want to start building the real thing.

05:02:15
<transcript>: o tr

05:02:17
<transcript>: O TRPC docs.

05:02:19
gpem24112421: are you batman

05:02:23
<transcript>: Well, this wouldn't be like a schema that's gonna end up in our database.

05:02:25
<transcript>: Right.

05:02:25
<transcript>: am

05:02:27
<transcript>: Am I Batman.

05:02:29
<transcript>: No.

05:02:39
<transcript>: That's an easy one. I am not Batman. I am, in fact, not Jose Maria. Thank you so much for the follow. I appreciate that.

05:02:47
<transcript>: Okay, let's let's just make a new file.

05:02:47
<transcript>: oh

05:02:48
andreull: that's what batman would say

05:02:51
<transcript>: Oh, we were creating one already. Utils. It's gonna be called.

05:02:51
<transcript>: game

05:02:59
<transcript>: Game. Ts. I just want to start writing some of the logic for the game, or we could go more pragmatic. That's a little.

05:03:05
<transcript>: Abstract for my style. We could say what is so the index page Here's.

05:03:08
<transcript>: Gonna log in.

05:03:08
<transcript>: with twitter

05:03:10
<transcript>: With Twitter.

05:03:13
<transcript>: I think Twitter, or Twitch.

05:03:13
<transcript>: will do

05:03:21
<transcript>: Will do a couple of different auth options, but I'm definitely going to share this on Twitter with the AWS community on Twitter because they're gonna let it.

05:03:23
<transcript>: So.

05:03:23
<transcript>: oh this is cool

05:03:26
<transcript>: Oh, this is cool. Okay, so PrPC, use query.

05:03:26
<transcript>: example

05:03:28
<transcript>: Example Hello.

05:03:33
<transcript>: And where does example Hello come from.

05:03:33
<transcript>: here

05:03:34
<transcript>: Here.

05:03:36
<transcript>: So examples.

05:03:41
<transcript>: Yeah. I'm gonna just start here. We'll just start writing this stuff.

05:03:44
<transcript>: Example.

05:03:44
<transcript>: about

05:03:46
<transcript>: About find mini.

05:03:50
<transcript>: We return examples.

05:03:50
<transcript>: and then

05:03:54
<transcript>: And then back here it was example. Hello.

05:03:59
<transcript>: Am I not following.

05:04:08
<transcript>: Hello from TrpC. So this right here is where the Hello came from.

05:04:10
apizf: its should be in the server file example.hello

05:04:13
<transcript>: Why am I not seeing.

05:04:15
<transcript>: That here.

05:04:18
<transcript>: Don't get it.

05:04:23
fragaverage: hi trpc üëãüèº

05:04:24
<transcript>: Purpose.

05:04:28
<transcript>: Right.

05:04:30
fragaverage: That's not a trpc route

05:04:36
<transcript>: Oh, TrpC, no, don't touch that either.

05:04:36
<transcript>: so example

05:04:40
<transcript>: So examples. Returns. Examples. I don't see where.

05:04:44
<transcript>: I'm trying to understand this.

05:04:44
<transcript>: example

05:04:47
fragaverage: its in the trpc routes

05:04:50
<transcript>: Example Hello. Use query. Example. Hello text from PrPC.

05:04:53
<transcript>: So where is it? Finding Hello.

05:04:58
apizf: examplein the server file

05:05:02
<transcript>: Index Hello dot data. So here example type.

05:05:07
<transcript>: Here. Pc. Oh, query here router. Okay. So it's in the router.

05:05:07
<transcript>: i see

05:05:09
<transcript>: I see.

05:05:09
<transcript>: what's this

05:05:10
<transcript>: What's this.

05:05:10
<transcript>: little output

05:05:11
<transcript>: Little output.

05:05:15
<transcript>: Helper method to infer the output of a query.

05:05:19
<transcript>: Okay.

05:05:25
<transcript>: But here is what I want to look at.

05:05:25
<transcript>: the route

05:05:26
<transcript>: The router.

05:05:26
<transcript>: example

05:05:30
<transcript>: Example. Query. Hello. Okay. This is how we define.

05:05:40
<transcript>: Okay, so you have a query. Hello input the object text string can be null.

05:05:41
<transcript>: Resolve.

05:05:49
<transcript>: So if you pass something. Okay. So let me just see this. If I pass something that.

05:05:49
<transcript>: 's not

05:05:51
<transcript>: 's not a string.

05:05:51
<transcript>: like if

05:05:52
<transcript>: Like if I pass.

05:05:52
<transcript>: i don't know

05:05:54
<transcript>: I don't know.

05:05:54
<transcript>: something

05:05:56
<transcript>: Something else.

05:05:56
<transcript>: this should

05:05:59
<transcript>: This should Zog will just bail? Is that the other.

05:06:03
<transcript>: Thank you for the follow Atmo Phil.

05:06:11
<transcript>: Thank you, Frag, for letting me know. I'm sorry that I'm just now seeing it. That's what Batman would say.

05:06:12
fragaverage: typescript will shout at you iirc

05:06:13
<transcript>: That's funny.

05:06:13
<transcript>: my name

05:06:27
<transcript>: My name is Adam Weston Elmore. And if you know a little trivia about Batman from a long, long time ago, back in the 50s or whatever Batman was played, original Batman was played by an actor named Adam West.

05:06:27
<transcript>: and

05:06:34
<transcript>: And my mom knew and was the Fame of Adam West. I think it influenced by name, so in some weird way.

05:06:34
<transcript>: i kind of am batman

05:06:36
<transcript>: I kind of Am. Batman.

05:06:38
<transcript>: Kind of.

05:06:38
<transcript>: a little bit

05:06:39
<transcript>: A little bit.

05:06:39
<transcript>: so bypass

05:06:42
<transcript>: So bypass I want to see is Zod would actually.

05:06:47
<transcript>: If the validation side of it, it'll bail. If you've just messed this up or something.

05:06:50
<transcript>: Like if I said this.

05:06:50
<transcript>: i said

05:06:53
<transcript>: I said none of that. What did I do.

05:06:57
<transcript>: Whatever.

05:06:57
<transcript>: if i

05:07:06
<transcript>: If I delete all that and I say that, can I not do the nose? I have to do the Nost thing. Oh, no, I just have to have a comma.

05:07:10
<transcript>: If I do that, then if I don't pass.

05:07:17
<transcript>: Here. This is just learning, right? I just want to not pass text at all.

05:07:23
<transcript>: How many Texas missing? So there's my type. Safety.

05:07:29
<transcript>: Fired in type text string. Okay, but if I were to say.

05:07:31
<transcript>: As well.

05:07:42
<transcript>: So yeah, I'm getting type safety here. I was thinking, like, runtime, though. I get some kind of like this is just bouncing requests, like 401 it or something. If I.

05:07:42
<transcript>: let's go

05:07:44
<transcript>: Let's go back here.

05:07:47
<transcript>: And let's undo these.

05:07:52
<transcript>: Now does it let me.

05:07:55
<transcript>: Still required even though it's no less.

05:07:58
<transcript>: The text could be null.

05:07:58
<transcript>: or text

05:08:00
<transcript>: Or text, could be.

05:08:05
<transcript>: Yeah text could be.

05:08:05
<transcript>: empty

05:08:06
<transcript>: Empty string.

05:08:06
<transcript>: then

05:08:12
<transcript>: Then it would just say Hello. Okay. I'm just. I'm just getting to feel for sod that was really just me trying to learn something about that.

05:08:18
<transcript>: Thank you API.

05:08:18
<transcript>: api

05:08:19
carlosgn: zod is great!

05:08:22
<transcript>: Api is the F for also calling out.

05:08:22
<transcript>: ways

05:08:27
<transcript>: Ways that I could find answers to my questions. Zod is great, Carlos says.

05:08:36
<transcript>: I'm still getting familiar. So let's go back to example router. So we need to mirror this. So if we want new.

05:08:39
<transcript>: Api Routes We create.

05:08:39
<transcript>: a router

05:08:41
<transcript>: A router.

05:08:43
<transcript>: Okay.

05:08:48
<transcript>: Not API rest if we want new TRPC things.

05:08:53
<transcript>: So it's just giving us type safety.

05:08:53
<transcript>: these round

05:08:57
<transcript>: These rounders. That's what TRPC's doing. It's giving us.

05:09:00
<transcript>: Some type safety.

05:09:00
<transcript>: we got

05:09:03
<transcript>: We gotta do Aust? Is there like a login page.

05:09:03
<transcript>: built into

05:09:06
<transcript>: Built into this T three stack.

05:09:08
<transcript>: For Dot to build it.

05:09:11
<transcript>: You may know.

05:09:11
<transcript>: do i need

05:09:13
carlosgn: already built

05:09:14
<transcript>: Do I need to build a login page.

05:09:19
<transcript>: Already built. That's what I like to hear. I guess I could go look at the pages.

05:09:19
<transcript>: index

05:09:21
<transcript>: Index and app.

05:09:21
<transcript>: where

05:09:25
<transcript>: Where is logins if I just do this.

05:09:31
<transcript>: Is it just using the builtin next off login because that's like.

05:09:31
<transcript>: api

05:09:34
<transcript>: Api auth signin.

05:09:34
<transcript>: yeah okay

05:09:37
<transcript>: Yeah. Okay. So is that what they do? Or do they have, like a styled one.

05:09:40
<transcript>: Already built.

05:09:50
carlosgn: no sorry, that one

05:10:12
<transcript>: Next all has a CT three a guest book example.

05:10:14
<transcript>: First cell.

05:10:23
<transcript>: We're going to definitely deploy with your cell.

05:10:28
<transcript>: Geez.

05:10:28
<transcript>: how would you do

05:10:30
<transcript>: How would you do Docker? Why.

05:10:33
<transcript>: Further reading. Okay.

05:10:38
<transcript>: Texting routes next off. I just wondered if there was a.

05:10:45
<transcript>: Builtin login page. No, Sorry, not that one. Okay. Gotcha that's the one. Okay.

05:10:45
<transcript>: well we'll create a nice

05:10:48
<transcript>: Well, we'll create a nicer looking thing, I guess.

05:11:05
<transcript>: Let's just start building it as if there is no off and we'll come back and do auth after I'm just not motivated to do at the moment.

05:11:09
<transcript>: So here we're gonna have a game.

05:11:11
<transcript>: Ps.

05:11:12
<transcript>: psych

05:11:13
<transcript>: Psych.

05:11:13
<transcript>: and

05:11:17
<transcript>: And we're gonna copy all of this.

05:11:19
<transcript>: So.

05:11:22
<transcript>: Thanks for the follow.

05:11:25
<transcript>: To me.

05:11:30
<transcript>: We're gonna do this.

05:11:30
fragaverage: This is gunna require Tea, be right back!

05:11:37
<transcript>: Yank that and put it here.

05:11:42
<transcript>: This is gonna be the game router.

05:11:48
<transcript>: Have a query.

05:11:48
<transcript>: new

05:11:49
<transcript>: New.

05:11:51
<transcript>: Maybe.

05:11:56
<transcript>: Two and I don't guess you need to paste or you don't need to do any.

05:11:56
<transcript>: no

05:11:59
<transcript>: No input. Can I just do no input.

05:12:02
afsardo: mutation for new I think

05:12:02
<transcript>: Is that an option.

05:12:04
<transcript>: I find out.

05:12:07
<transcript>: Resolve.

05:12:13
<transcript>: The game is just going to.

05:12:13
<transcript>: give you a new

05:12:15
<transcript>: Give you a new game. Okay.

05:12:20
<transcript>: Let's think about this. Let's actually.

05:12:23
<transcript>: Draw time.

05:12:26
<transcript>: There's.

05:12:27
<transcript>: gallid

05:12:28
<transcript>: Gallidro.

05:12:32
<transcript>: Mutation. Oh, that's a query. You're right. Good call.

05:12:32
<transcript>: mutation

05:12:37
<transcript>: Mutation. Okay. So it has similar concepts. Like a GraphQL thing.

05:12:37
<transcript>: just

05:12:39
<transcript>: Just different.

05:12:44
<transcript>: Okay.

05:12:44
<transcript>: let's go

05:12:46
afsardo: The same yeah, basically GET vs POST

05:12:49
<transcript>: Let's go here to Scala draw. And let's talk about this.

05:12:54
<transcript>: Come on you buy.

05:12:54
<transcript>: let's do this

05:12:55
<transcript>: Let's do this.

05:12:58
<transcript>: New.

05:13:08
<transcript>: Still doesn't know how to do a new.

05:13:10
afsardo: Makes a difference when component renders queries are called on render, mutations are called by some action when you want

05:13:13
<transcript>: Oh, come on. Main. Here we go. Crazy. Okay.

05:13:19
<transcript>: So this is. Aws. Guests. Aw, guess. Sorry. Aw. Guess I watched it.

05:13:22
<transcript>: Aw guess.

05:13:28
<transcript>: So I want to.

05:13:32
<transcript>: I want to think about like high level, how this is going to work.

05:13:39
<transcript>: So you're gonna have your screen, you're gonna be presented with.

05:13:42
<transcript>: An icon.

05:13:55
<transcript>: Right. And then it's gonna say some names.

05:14:01
<transcript>: Some service names like this.

05:14:07
<transcript>: You're gonna click on one right.

05:14:10
<transcript>: So this is the gist of the game.

05:14:12
<transcript>: So.

05:14:12
<transcript>: and it's sort

05:14:15
<transcript>: And it's sort of rounds. We'll do like.

05:14:15
<transcript>: you do like

05:14:19
<transcript>: You do like Rounds. Allen Rice six months in advance.

05:14:21
<transcript>: Allen, thank you so much.

05:14:24
<transcript>: I will not stop streaming.

05:14:24
<transcript>: i will keep

05:14:28
<transcript>: I will keep streaming for these six months, just for you, Alan.

05:14:28
<transcript>: that's some

05:14:31
<transcript>: That's some excellent motivation for me to keep doing this.

05:14:33
<transcript>: I appreciate that a whole lot.

05:14:36
<transcript>: Makes a difference.

05:14:36
<transcript>: when component

05:14:42
<transcript>: When component rendered queries are called on render mutations are called by some action you want that makes sense? Yeah, Yeah.

05:14:42
<transcript>: thank you

05:14:44
<transcript>: Thank you s? Far DOH.

05:14:46
<transcript>: dohardo

05:14:47
<transcript>: Dohardo.

05:14:54
<transcript>: Okay. So this is our basic, our AWS Service Game, right.

05:14:57
<transcript>: And how does this it's gonna work.

05:14:57
<transcript>: so like

05:14:59
<transcript>: So like.

05:14:59
trash_dev: Is that a Lima bean

05:15:00
afsardo: short for Andre Sardo

05:15:10
uberrick: lol you have a nightmare with that window snapping tool what is it called? I use spectacle which seems much simpler and has some shortcuts to snap the current focused window

05:15:12
afsardo: f is the starting letter of 2 middle names

05:15:16
<transcript>: Just hit got it.

05:15:16
<transcript>: okay

05:15:19
<transcript>: Okay. So that's like one sentence.

05:15:19
<transcript>: but a game

05:15:24
<transcript>: But a game will be like, you'll have a timer. So I'll have like a timer going.

05:15:31
<transcript>: Right. So like I'm like something like that.

05:15:38
<transcript>: Like this.

05:15:46
<transcript>: And it's like, how many can you get in that timer, right? Maybe like a two minute timer. Or I don't know.

05:15:48
<transcript>: Yeah, I guess.

05:15:51
<transcript>: A two minute timer.

05:15:51
<transcript>: and

05:15:53
<transcript>: And.

05:15:57
<transcript>: Is that what we think? Gameplaywise like, how many can you get right.

05:15:57
<transcript>: and maybe

05:16:00
<transcript>: And maybe when you get one wrong.

05:16:00
<transcript>: you lose

05:16:01
<transcript>: You lose points.

05:16:02
log1400: It will be cool to create a command like !building, to auto replay new viewers what you are doing right now

05:16:03
<transcript>: Maybe.

05:16:15
<transcript>: Trash. Yes, that is actually a Lima bean trash. We're making a game called AW. Guess.

05:16:15
<transcript>: shoutout

05:16:25
<transcript>: Shoutout to Cube is in chat for the name idea. It's basically like AWS Service Icons. So imagine this is the AWS Lima Bean service.

05:16:25
<transcript>: and you

05:16:30
trash_dev: oh, I‚Äôd fail that ü§£

05:16:37
<transcript>: And you have, like, four options. You gotta click the right one. How many can you get in? Like, a two minute window? That's the game we're making. And we're doing it to learn T three SEC. I just wanted to play with T three styles, and we need something to build. So.

05:16:37
<transcript>: there's gonna be

05:16:39
<transcript>: There's gonna be a leader board.

05:16:39
<transcript>: there's gonna be

05:16:43
<transcript>: There's gonna be maybe multiplayer like do this against somebody.

05:16:43
<transcript>: you're both

05:16:45
<transcript>: You're both racing to see who can get the most.

05:16:45
<transcript>: in that amount

05:16:47
<transcript>: In that amount of time.

05:16:52
<transcript>: Okay.

05:16:56
<transcript>: Thank you for the follow skiddom.

05:16:59
niftynate80: @trash_dev trashdevHype

05:17:02
<transcript>: You have a nightmare that with that window snapping tool. What is it called? Yubai.

05:17:02
<transcript>: respect

05:17:06
trash_dev: hey Nate

05:17:09
<transcript>: Respectable, which seems much simpler and has some shortcuts to snap the cartridges with it. Yeah. I like rectangle for like actually thinking about it and moving stuff.

05:17:15
<transcript>: I just. I'm enjoying you by doing things for me sometimes.

05:17:18
<transcript>: You feel that? Yes, it's.

05:17:22
niftynate80: @trash_dev HeyGuys

05:17:26
<transcript>: It's not gonna be easy, because I know, like, a dozen of them, and then the rest of the icons will be completely.

05:17:28
<transcript>: New to me.

05:17:33
<transcript>: So what I'm trying to figure out is.

05:17:33
<transcript>: like from

05:17:37
<transcript>: Like from a modeling standpoint. We have like.

05:17:39
<transcript>: Game.

05:17:41
<transcript>: Consists of.

05:17:46
<transcript>: Multiple rounds. This is some kind of weird pseudocode. Okay.

05:17:53
<transcript>: Each game has multiple rounds. Each round.

05:17:55
<transcript>: As.

05:18:03
<transcript>: A correct answer.

05:18:07
<transcript>: Aws, Lambda.

05:18:11
<transcript>: And has some.

05:18:13
<transcript>: Three incorrect.

05:18:19
<transcript>: Free incorrect answers.

05:18:19
<transcript>: and

05:18:23
<transcript>: And an Image service, image, right.

05:18:26
<transcript>: So there's like a concept of service.

05:18:30
<transcript>: Actually, they're called Resources, right.

05:18:30
<transcript>: so resource

05:18:32
<transcript>: So resources in AWS.

05:18:32
<transcript>: each resource

05:18:36
<transcript>: Each resource has a name. It has.

05:18:36
<transcript>: whether

05:18:39
<transcript>: Whether it's AWS or Amazon.

05:18:39
<transcript>: and

05:18:41
<transcript>: And it has.

05:18:44
<transcript>: An image right.

05:18:47
<transcript>: Which will be.

05:18:47
<transcript>: an

05:18:48
<transcript>: An SVG.

05:18:54
<transcript>: Currently.

05:18:54
<transcript>: in public

05:18:56
<transcript>: In public.

05:18:58
<transcript>: I don't know if that's what we want to do or not.

05:19:06
<transcript>: Okay, so what I want to get at is like, where are we computing correct answers? I guess we have to at server side, right.

05:19:06
<transcript>: so

05:19:08
<transcript>: So every every time you.

05:19:08
<transcript>: click

05:19:11
<transcript>: Click every round you get.

05:19:11
<transcript>: you received

05:19:17
<transcript>: You received everything but the correct answer. So you receive the four options.

05:19:20
<transcript>: So for.

05:19:22
<transcript>: Possible answers.

05:19:26
<transcript>: You receive four possible answers.

05:19:26
<transcript>: and

05:19:27
<transcript>: And.

05:19:27
<transcript>: only

05:19:33
<transcript>: Only one of them is correct. Then you click. And that makes like a mutation.

05:19:33
<transcript>: to

05:19:36
<transcript>: To see it's like you're guessing.

05:19:36
<transcript>: a thing

05:19:37
<transcript>: A thing.

05:19:37
<transcript>: and you get

05:19:39
<transcript>: And you get back.

05:19:39
<transcript>: a you

05:19:44
<transcript>: A you were right or you were wrong right. Then we do some kind of like animation for right and wrong.

05:19:44
<transcript>: and then you

05:19:48
<transcript>: And then you've got like a score. So a game has rounds.

05:19:51
<transcript>: And it also has a.

05:19:54
<transcript>: Store and a time.

05:20:00
<transcript>: Like remaining time would be part of the game kind of concept, right.

05:20:03
<transcript>: I don't know. I'm just thinking this through.

05:20:14
<transcript>: Yeah. So what's? Let's see what's the fastest path to, just, like, deploy something of our cell and play with it.

05:20:16
jaystation3x: Being that it is timed, I don't want  to see results until the end.

05:20:19
<transcript>: T three. Where's? Ot three? App? No. Here.

05:20:24
<transcript>: Being that it is timed. I don't want to see results until the end.

05:20:24
<transcript>: oh

05:20:27
<transcript>: Oh so you wouldn't know if you got it right.

05:20:30
<transcript>: Like you're just guessing.

05:20:31
afsardo: maybe score is number of rounds and if you get an answer wrong you subtract it

05:20:35
<transcript>: That you don't get instant feedback, right or wrong.

05:20:35
<transcript>: until the end

05:20:36
<transcript>: Until the end.

05:20:36
<transcript>: that you're saying to me

05:20:37
<transcript>: That you're saying to me.

05:20:44
<transcript>: Score is number of rounds and if you get an answer wrong, you subtract it. Yeah, that's simple enough.

05:20:44
<transcript>: so

05:20:46
<transcript>: So.

05:20:46
<transcript>: every

05:20:48
<transcript>: Every time.

05:20:49
trash_dev: that‚Äôs weird

05:20:52
<transcript>: Yeah, there's just number of correct answers in the timeframe. Right.

05:20:54
<transcript>: Trash says that's weird.

05:20:56
trash_dev: I‚Äôd want the feedback

05:21:00
<transcript>: I'd want the feedback.

05:21:00
<transcript>: i'm kind of

05:21:03
<transcript>: I'm kind of on the fence. I can see both cases.

05:21:09
trash_dev: so I can rage quit

05:21:11
trash_dev: ü§£

05:21:13
afsardo: yeah nvm just over complicated it, I wouldnt want the feedback cause at some point it repeats right?

05:21:13
<transcript>: If you don't get the feedback, it makes a little harder, because then if you get like another one that has one of the options and you don't know if you're right the first time you lose some of that, which is maybe a feature.

05:21:18
log1400: what about instead of using 4x, put a input text?

05:21:27
<transcript>: I wouldn't want the feedback because at some point it repeats. Right. Well, we got like, 200, some services. I think that is something we have to keep track of within a game. We have to keep track of.

05:21:31
<transcript>: Like the previous. We don't want to show the same one twice.

05:21:32
<transcript>: So.

05:21:37
jaystation3x: If the goal is learning, then we should add spaced repetition.

05:21:38
afsardo: twice or in the same game?

05:21:39
<transcript>: Each round has a correct. We already did this. I'm trying to use them. Key bindings in here.

05:21:44
<transcript>: If the goal is learning, then we should add space, repetition.

05:21:47
<transcript>: So J at the end.

05:21:47
<transcript>: you could

05:21:50
<transcript>: You could show them. Well, I guess first. What? Space repetition.

05:21:53
<transcript>: Could you explain that to me, please.

05:21:56
<transcript>: But if we didn't show them.

05:21:59
<transcript>: Excuse me? We didn't show them.

05:21:59
<transcript>: the same

05:22:09
<transcript>: The same or the answers. The feedback. I'm back on that topic. If we don't show them the feedback, we at the end we can show them the list of all their questions and which ones they got right and wrong. Right.

05:22:09
<transcript>: you're saying

05:22:14
<transcript>: You're saying we should include multiple J to teach so that you understand.

05:22:14
<transcript>: like

05:22:22
afsardo: yeah exactly

05:22:24
<transcript>: Like if you see the same one multiple times, you'll start learning. I mean, I guess I guess we're trying to teach people what the service icons look like. I don't know what that'll do for you in your career or life.

05:22:24
<transcript>: probably nothing

05:22:25
<transcript>: Probably nothing.

05:22:25
<transcript>: it's

05:22:41
<transcript>: It's fun. I think AWS employees look at a kick out of it and other people in the community that are into AWS. I think the multiplayer aspect could be really fun. Like I'd love to challenge. I don't know Alex Debris or Bin Keho or somebody like A to be a service icon. Trivia.

05:22:50
<transcript>: Okay. Twice. You're in the same game. Yeah. Maybe we don't need to worry about duplicates. Maybe there's just a big enough number. We just use random one every time, and it'll work itself out.

05:22:54
<transcript>: Okay, let's let's start building.

05:22:54
<transcript>: i get bogged

05:22:57
jaystation3x: You should see the ones you get wrong sooner. At the end, you can see the one-liner about what each service does, with a link to learn more.

05:23:15
<transcript>: I get bogged down in theoretical. I just need to start doing things. What about instead of using four times put input text, that would be hard. That'd be hard for me and for them. Because for us we'd have to actually like, understand what they Typed. And if it's the correct answer, you should see the ones you get wrong sooner. At the end, you can see the one liner about what each service does. Ooh that's.

05:23:15
<transcript>: cool jay we're making

05:23:26
<transcript>: Cool, Jay. We're making it educational. So this isn't all just a waste of time. I mean, it wasn't ever gonna be waste time because we're having fun. And I'm learning about T three sack, but feels less like a waste of time if it's educational.

05:23:26
<transcript>: that sounds good

05:23:28
<transcript>: That sounds good. Let's do it.

05:23:28
<transcript>: okay so

05:23:36
<transcript>: Okay so game router is gonna be our main router, and this is well, I guess that we're gonna introduce off later.

05:23:43
<transcript>: So this is where we would put, like any input, but this new game.

05:23:43
<transcript>: this new

05:23:46
<transcript>: This new game mutation will not have.

05:23:52
<transcript>: Any input, you don't pass anything to it, right. Unless we have like a difficulty guess we could have a difficulty.

05:23:54
<transcript>: I don't know how we would make it more difficult.

05:24:03
<transcript>: We could just have a limited set of get there a limited set of the services could be considered easy ones. Like Lambda is kind of like.

05:24:03
<transcript>: pretty easy

05:24:05
<transcript>: Pretty easy to spot.

05:24:10
<transcript>: It just depends if you're just a web Dev. None of these are gonna be easy.

05:24:14
<transcript>: So let's just say if we had a game.

05:24:19
<transcript>: Well that looked like type game.

05:24:23
<transcript>: Has.

05:24:29
<transcript>: An ID. I think it needs to have an ID. I guess this is all gonna be like Schema stuff.

05:24:31
<transcript>: Right.

05:24:38
<transcript>: This is all be in our database.

05:24:42
<transcript>: But I'm gonna just work here for a second while I'm thinking through it.

05:24:48
<transcript>: So if I game and then we have.

05:24:48
<transcript>: type

05:24:50
<transcript>: Type round.

05:24:52
<transcript>: The round has.

05:25:00
<transcript>: Put stuff on my face. Mess with my keyboard.

05:25:00
<transcript>: round

05:25:03
<transcript>: Round has possible.

05:25:03
<transcript>: so

05:25:06
<transcript>: So choices.

05:25:15
<transcript>: Let's do this. There's a type.

05:25:19
<transcript>: Resource.

05:25:19
<transcript>: called

05:25:22
<transcript>: Called AWS resource.

05:25:28
<transcript>: As a an ID. Well, the ideal just be the name.

05:25:29
cowfacedude99: sorry. but gotta watch prime LUL

05:25:32
<transcript>: Right.

05:25:36
<transcript>: Name it has a.

05:25:39
<transcript>: Icon or image.

05:25:44
<transcript>: Okay.

05:25:46
<transcript>: And.

05:25:49
<transcript>: Id. Name, image.

05:25:51
trash_dev: @cowfacedude99 idk if you gotta announce that

05:25:53
<transcript>: I think we just drive the image from.

05:25:53
<transcript>: the name

05:25:54
<transcript>: The name.

05:25:54
<transcript>: oh yeah

05:25:55
<transcript>: Oh Yeah.

05:25:55
<transcript>: and then

05:25:58
<transcript>: And then prefix.

05:26:03
<transcript>: Which is AWS, or Amazon, okay.

05:26:13
cowfacedude99: it's also to tell @adamelmore that prime is live

05:26:15
<transcript>: I don't know if we need to store the image in these. I think it's just derived from the name of the it's, from the prefix and from the service name. But whatever. I don't think we need an ID either.

05:26:15
<transcript>: okay

05:26:18
<transcript>: Okay, but these, these are going to be our choices.

05:26:22
<transcript>: Aws resource.

05:26:25
<transcript>: Right.

05:26:26
trash_dev: time to wrap it up

05:26:34
<transcript>: A game has rounds.

05:26:36
<transcript>: Here.

05:26:36
<transcript>: choices

05:26:37
<transcript>: Choices.

05:26:40
<transcript>: The answer.

05:26:44
<transcript>: The.

05:26:44
<transcript>: answer

05:26:44
<transcript>: Answer.

05:26:50
<transcript>: I guess it always has an answer we're just only gonna.

05:26:53
<transcript>: Send it.

05:26:53
<transcript>: we're not

05:26:55
<transcript>: We're not gonna ever send it to client.

05:27:01
<transcript>: We don't send the answer to the client. We just we're gonna have to look it up in the database, though.

05:27:15
<transcript>: We're just gonna create these on the fly. I don't think we're gonna store them in the database, but I think we're just creating them.

05:27:15
<transcript>: on each

05:27:17
<transcript>: On each new round. Right.

05:27:17
<transcript>: yeah

05:27:20
<transcript>: Yeah. This is starting to make sense. Time to wrap it up.

05:27:28
<transcript>: Prime is live. Oh Geez, no, really, we will definitely just wrap it up if Prime's live because.

05:27:28
<transcript>: i like to

05:27:31
<transcript>: I like to watch prime. See you cafes.

05:27:41
<transcript>: Yeah. No, I did this last time prime went live. I just. I'm not used to streaming this late into the day.

05:27:41
<transcript>: and

05:27:43
<transcript>: And now, like all of my.

05:27:43
<transcript>: the str

05:27:51
<transcript>: The streamers in America that I look up to like Trash and prime start streaming now and then I just feel like it's my time to beat.

05:27:51
<transcript>: i entertain

05:27:54
trash_dev: what time do you wake up

05:27:55
<transcript>: I entertain the Europeans while you all are asleep. That's why I do trash.

05:28:01
<transcript>: I wake up at like 430 my time I'm in central time.

05:28:01
<transcript>: so like

05:28:03
<transcript>: So, like the Midwest.

05:28:07
<transcript>: I'm super excited about this. We're definitely going to.

05:28:07
<transcript>: we're gonna

05:28:10
trash_dev: whatttt

05:28:10
<transcript>: We're gonna build this out. This is what we'll do tomorrow.

05:28:10
<transcript>: i don't

05:28:13
<transcript>: I don't want to have that hair on my face while I say goodbye.

05:28:17
<transcript>: So I won't have it on my face.

05:28:17
<transcript>: say goodbye

05:28:20
<transcript>: Say goodbye, why.

05:28:20
<transcript>: i'm an early

05:28:35
<transcript>: I'm an early riser. I go to bed really early. Not that I don't sleep. It's that I go to bed at like, 09:00 p.m. My time when my kids go to bed. Well, a little after my kids go to bed. This is so fun. I'm so excited. Thank you so much to Cubiz for the name.

05:28:35
<transcript>: what a name

05:28:38
<transcript>: What a name. Aw, guess.

05:28:38
<transcript>: i still

05:28:42
<transcript>: I still have to catch myself, not say AWS, guess.

05:28:42
<transcript>: it's aw

05:28:45
<transcript>: It's AW, Guess.com.

05:28:45
<transcript>: we will hopefully

05:28:51
<transcript>: We will hopefully deploy it tomorrow. Tomorrow. We will deploy it to AWS, or aws.com.

05:28:56
<transcript>: And use our plan against each other, even if we're terrible at it.

05:28:56
<transcript>: it'll be

05:29:01
<transcript>: It'll be fun. I think tomorrow, with a whole day of streaming, we should build the build most of it. Right.

05:29:03
<transcript>: Cool.

05:29:03
<transcript>: thank you so much

05:29:08
<transcript>: Thank you so much, everybody. This has been so much fun. Maybe we could do again sometime sometime.

05:29:14
uberrick: cya Adam!

05:29:16
jaystation3x: üëãüèº

05:29:26
delvoid: cya buddy

05:29:41
uberrick: raids MongoDB dev after earlier rant :D

09:38:57
<transcript>: You.