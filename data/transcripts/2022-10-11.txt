

10:58:55
<transcript>: You.

10:59:38
caldotjs: hello guys :)

00:02:53
bigdiff___: hello chat

00:03:26
bigdiff___: it is so rare to see adam steaming these days :)

00:04:27
bigdiff___: I like the overlap of the text with the countdown circle Kappa

00:05:10
delvoid: heyooo

00:05:21
fredkisss: hello there

00:10:31
theruggedbear: hello everyone !

00:10:59
<transcript>: Hello, Hello.

00:11:01
<transcript>: Hello? Check, check.

00:11:07
<transcript>: Hello, Hello, everyone.

00:11:12
<transcript>: Gal that's here Big Disney.

00:11:12
<transcript>: rugged be

00:11:13
cowfacedude99: nix documentation is hard!!!! :(

00:11:16
vim_cerf: Hello hello

00:11:19
uberrick: here for more shower reviews

00:11:19
tayloreddev: good afternoon

00:11:23
<transcript>: Rugged Bear. Hello, everyone. And all the other people who aren't chatting and just listening in cow faces here. New documentation is hard. You're working on Nick's stuff right now.

00:11:23
<transcript>: first

00:11:30
<transcript>: First time chat. Welcome, vim serf. Welcome to my chat. Thanks for showing up early in the week.

00:11:31
<transcript>: It's Tuesday.

00:11:31
<transcript>: morning

00:11:32
theruggedbear: i always wanted to ask. on one of your shelves (where the writing machine is) - on a lower level - there is a clock next to a keyboard ? if that is a clock, what clock it is ?

00:11:33
<transcript>: Morning.

00:11:36
<transcript>: Rick and Taylor, here.

00:11:36
<transcript>: the rugged

00:11:39
<transcript>: The Rugged Bear. I always wanted to ask.

00:11:46
<transcript>: How many your shelves were? The writing machine is on a lower level. There to plot next to a keyboard. If that is a clock, what clock is it.

00:11:51
<transcript>: Next to the writing machine.

00:11:57
<transcript>: I don't think there's any clocks, no clocks on my shelf.

00:12:02
<transcript>: There's the Lego typewriters that you mean Rugged bear.

00:12:05
<transcript>: It's next to some books.

00:12:05
<transcript>: and

00:12:08
<transcript>: And there's something beside it.

00:12:08
<transcript>: but i'm not

00:12:13
<transcript>: But I'm not I don't remember. And it's behind the green screen. Hang on.

00:12:15
<transcript>: Oh.

00:12:15
<transcript>: there's

00:12:18
theruggedbear: something showing '07:14'

00:12:19
<transcript>: There's a like a glow. There's a little spinning globe.

00:12:22
<transcript>: Job Shanine.

00:12:25
theruggedbear: in one of the videos

00:12:35
<transcript>: Oh, the Lego clock. I'm sorry. Yes, that's a Lego clock. Or I'm sorry, a Lego. It's a Lego calendar. That's actually the date. Well, it was the tape on July 14.

00:12:37
th3_l3m0n: oh i totally forgot about the greenscreen xD

00:12:49
<transcript>: Yeah, that's a Lego calendar. It comes in, like, these bright colors. It's like green and red and yellow and stuff. But I swapped out. I bought a bunch of replacement plates in Gray to make a nice Gray tone. One.

00:12:49
<transcript>: yeah

00:12:55
<transcript>: Yeah, the lemon. I just broke the illusion if anyone was convinced.

00:12:55
<transcript>: that it was real

00:12:55
uberrick: Recently started a new job

00:12:56
<transcript>: That it was real.

00:12:56
<transcript>: there

00:12:58
<transcript>: There it goes.

00:13:03
uberrick: I'm not a Rust dev using neovim

00:13:03
<transcript>: You start a new job, Rick. Oh, tell me more. Tell me more. What are you done.

00:13:05
bigdiff___: the background is epic now

00:13:06
uberrick: now*

00:13:07
theruggedbear: found it. thank you <3

00:13:10
<transcript>: I'm I have 1998 followers.

00:13:12
uberrick: made it

00:13:14
<transcript>: So a couple more people are gonna follow me on the stream, I'm guessing.

00:13:14
<transcript>: and

00:13:17
nexxeln: hihi!

00:13:17
<transcript>: And we're gonna hit 20 followers. That's cool.

00:13:17
<transcript>: that's

00:13:19
<transcript>: That's cool.

00:13:24
<transcript>: Not you're now a rust Dev using neoveim OOH.

00:13:27
<transcript>: I love it.

00:13:27
<transcript>: tell me more

00:13:33
<transcript>: Tell me more. Where are you working? Or do you want to share? I don't know. Next. Is here a NEX.

00:13:33
<transcript>: we'll be doing some

00:13:39
<transcript>: We'll be doing some T three stack today, and we're gonna get David on. He'll be on here in like, an hour. In fact, I can't forget.

00:13:43
<transcript>: In.

00:13:45
<transcript>: 48 minutes.

00:13:45
<transcript>: i need to

00:13:46
<transcript>: I need to.

00:13:46
<transcript>: call in on

00:13:46
uberrick: Work for a restaurant company in the UK called Nando's

00:13:53
<transcript>: Call in on Ping and bring David on so don't let me forget I have it on my calendar, but not enough. I'll notice while I'm streaming.

00:13:53
<transcript>: restaurant

00:13:56
nexxeln: is david david k

00:13:57
<transcript>: Restaurant company in the UA called Nandos the UK called Nando cool.

00:13:57
<transcript>: zap

00:13:59
<transcript>: Zap, here.

00:13:59
<transcript>: thank you for the follow

00:14:01
theruggedbear: @UberRick nandoooo's

00:14:05
<transcript>: Thank you for the follow zap. Yeah. David K will be on right? He's gonna help level up our.

00:14:05
<transcript>: xd

00:14:08
<transcript>: Xdate usage quickly and hopefully.

00:14:08
<transcript>: i

00:14:09
cowfacedude99: @UberRick that's one thing to put on the resume primeagenSlider

00:14:13
<transcript>: I started thinking about I'm really excited, actually about using X state because.

00:14:19
<transcript>: What was the main reason how it's excited. I just kind of blanked.

00:14:27
uberrick: Free chicken :D

00:14:32
w3barsi: i just noticed u were your background was green screened

00:14:39
<transcript>: What was I talking about? Oh, yeah, I'm really excited. X eight. Oh, yeah, because I think I'm gonna write this app in a few different backends. I just it feels slow right now, and I want to see objectively how slow it is. I think it's Prisma and cold starts. And I think once.

00:14:48
theruggedbear: rust backend adamdo8DealWithIt

00:14:51
nexxeln: probably cold starts

00:14:51
<transcript>: Once we maybe move off of our cell, it would be faster, but I want to deploy with like a few different types of APIs on the back end. I can just. I can build the API's really fast, but the front end is the thing that takes me forever.

00:14:51
<transcript>: but if we do

00:14:56
<transcript>: But if we do the front end state management in X state, we could actually.

00:14:56
<transcript>: port that

00:15:06
iserejatoje: Nuxt - cool?

00:15:10
<transcript>: Port that into other front ends as well. If I want to play with like different combinations of front end and back end, see what feels like a nice stack. I don't know. I'm always willing to tinker with sacks, and this would be like a fun project to do it on. Yeah, probably cold starts. I think prison.

00:15:10
<transcript>: in lam

00:15:12
<transcript>: In Lambda functions, not great.

00:15:12
<transcript>: next so

00:15:15
<transcript>: Next so I don't have any experience with next.

00:15:20
<transcript>: The things that I've planned on building it in were things I use a lot.

00:15:20
<transcript>: so like

00:15:31
<transcript>: So, like right now it's CrPC deployed on Versail. What if we selfhost ERPC? Can we find a way to get rid of the cold start? I'm sure we can. It's just do we want to.

00:15:32
cowfacedude99: vue 3 is actually fun.

00:15:38
<transcript>: You know, Host, CrPC, and an API gateway or some containerized thing.

00:15:38
<transcript>: like

00:15:42
cowfacedude99: but I still work on vue 2 :(

00:15:42
<transcript>: Like there's ways to maybe eliminate the cold. Starts with TrpC.

00:15:42
<transcript>: or

00:15:53
<transcript>: Or with Prisma in terms of how we deploy it. But then I'd like to build it with something ultra fast that I typically use, like VTL templates.

00:15:53
<transcript>: in

00:15:55
<transcript>: In an App Sync APIs.

00:15:55
<transcript>: hitting dynamo

00:16:01
theruggedbear: we need it to be blazingly fast

00:16:15
<transcript>: Hitting DynamoDB so I might even build out some crazy infrastructure on stream for like Sinking Planet Skills the Plantscale database with like a DynamoDB table so that we have just these two data stores we can play with and different stacks pointing at different data source, but they're always up to date with the so we don't have like if we want to switch it like move the app from the current infrastructure.

00:16:15
<transcript>: to

00:16:20
<transcript>: To a totally different stack. We still have the underlying data. There. Does that make sense.

00:16:20
<transcript>: it

00:16:23
uberrick: VTL is blazingly fast but ugly :D

00:16:23
<transcript>: It has to be blueazingly fast. Of course.

00:16:23
cowfacedude99: maybe use the http api directly planetscale?

00:16:30
<transcript>: You still work on View? Yeah, I know. I have no experience with you. I have a little experience with you. Not a lot.

00:16:34
<transcript>: Yes, detail is blazingly fast, but it is also ugly.

00:16:55
<transcript>: Yeah, no cow face. That's a good call. We did that on stream. Remember we did the Planet Skill http API. We hit it with VTL so we could do that. We could build an app Synth API that hits Planet scale. We could try it app sync with VTL hitting Dynamo. What's the difference there? How do the database compare? There's a lot of different moving parts. Once we've got the front end all built.

00:16:55
<transcript>: i

00:16:57
<transcript>: I feel like we can do that stuff pretty quickly.

00:16:57
<transcript>: it's i know it's taken

00:17:02
<transcript>: It's. I know it's taken forever to get to this point, and I'm not streaming as often, so that's slowing it down.

00:17:07
<transcript>: I don't think it'll take so long to do a lot of that stuff that's just more in my wheelhouse.

00:17:07
<transcript>: if that makes sense

00:17:09
<transcript>: If that makes sense.

00:17:12
<transcript>: So today we're gonna work on AW, guess.

00:17:14
cowfacedude99: it's fun though.

00:17:16
<transcript>: And we're gonna have David on to help us write state machine quickly.

00:17:16
<transcript>: thank you

00:17:20
<transcript>: Thank you for an hour. So we'll put you very quick.

00:17:28
<transcript>: It is fun? Yeah? Front ends on as much as I'm slow and I feel like I'm not making progress.

00:17:28
<transcript>: there's

00:17:32
<transcript>: There's something about it. That's fun. Even the parts I hate.

00:17:39
<transcript>: I got complained every time I write a use effect hook, but like it's kind of fun. I don't know. Depending.

00:17:42
<transcript>: I want to talk about something Bell void.

00:17:42
<transcript>: was asking

00:17:43
<transcript>: Was asking me.

00:17:49
<transcript>: It's the content of my first YouTube video, which I promise.

00:17:49
<transcript>: it's coming

00:17:50
<transcript>: It's coming.

00:17:54
<transcript>: It's been a weird couple weeks for me personally.

00:17:54
<transcript>: we've

00:17:58
<transcript>: We've had a lot of stuff. We've had some sickness.

00:17:58
<transcript>: then we

00:18:02
<transcript>: Then we my wife's birthday was last week. I ended up taking the week off.

00:18:07
<transcript>: Like aside from the mornings you saw me in the middleings, but I didn't work after I got off stream.

00:18:14
<transcript>: And then we got some stuff going on some stuff FT's that I'm gonna share soon.

00:18:14
<transcript>: that's being

00:18:20
<transcript>: That's being we're doing paperwork on a thing. A big change for me.

00:18:29
<transcript>: So all that's going on the YouTube thing kind of got stalled a little bit, but my first video is gonna basically be about, like these common misconceptions with AWS.

00:18:34
<transcript>: Like a lot of the tropes I hear when like people don't use AWS.

00:18:34
<transcript>: here

00:18:36
theruggedbear: cant wait the AWS content

00:18:41
<transcript>: Here's my thing. There's a lot of people that have a reason not to use AWS. They know they don't want to use AWS. And that's great.

00:18:41
<transcript>: my

00:19:01
<transcript>: My content's, not for this. My content is for the people who don't know, but they've just heard things and it's like, Well, I shouldn't use AWS because it's really complicated or I shouldn't use AWS because I might get a surprise $30,000 bill there's, like, innocent bystanders that have taken strays, and ultimately they're not using AWS for the wrong reasons. I.

00:19:01
<transcript>: want people to not

00:19:10
<transcript>: Want people to not use AWS for the right reasons. I don't use AWS a lot of times. A lot of projects. I don't. I just. It's a simple project. Deploy it to Versailles, whatever.

00:19:20
<transcript>: But for the times when you do need to dip into that bag of tricks and pull out these amazing primitive services that you can build on top of.

00:19:23
<transcript>: Aws is fantastic.

00:19:23
<transcript>: and a lot

00:19:34
<transcript>: And a lot of the common misconceptions there's, like, five of them. And I kind of confirmed this on Twitter. I just I asked on Twitter and got all of the tropes I was expecting.

00:19:34
<transcript>: in

00:19:36
<transcript>: In math. A whole bunch of them.

00:19:39
gingerrbeard: What IDE do you guys think is the best and most popular?

00:19:40
<transcript>: So the two big ones, I would say.

00:19:40
<transcript>: there's like

00:19:40
daglee: The $30,000 bill is a meme? That is what I thought but it still funny.

00:19:44
<transcript>: There's like really five big ones. But the two big ones are it's too complicated.

00:19:46
<transcript>: And.

00:19:46
<transcript>: the pricing

00:19:47
cowfacedude99: the 200+ services is kind of a big thing.....

00:19:49
uberrick: Yeah I'm big for AWS but for a companies I work with not for personal too much

00:19:56
<transcript>: The pricing. I don't know what I'm gonna be paying. And I think the fundamental, the thing that's hard to communicate here is, yeah, the 300 dollar bills, a meme.

00:20:02
<transcript>: I mean, there are people. There are these instances where people got these really big bills.

00:20:02
<transcript>: is a

00:20:03
<transcript>: Is a.

00:20:05
<transcript>: I can't say your name.

00:20:05
<transcript>: is

00:20:14
<transcript>: Is ridicato J. And I really wanted to say it like Emphatically, because that's foul number 2000, Congratulations, you're. Number 2000.

00:20:17
<transcript>: You didn't win anything but.

00:20:20
<transcript>: You won my affection.

00:20:20
<transcript>: so i

00:20:22
<transcript>: So I wish I could say your name.

00:20:22
<transcript>: maybe i'll call

00:20:23
iserejatoje: EZ

00:20:24
<transcript>: Maybe I'll call you.

00:20:24
<transcript>: eyes here

00:20:25
<transcript>: Eyes. Here.

00:20:25
<transcript>: i

00:20:29
nexxeln: 2k lets goooo

00:20:36
<transcript>: I can't tell where the words break or is that one? Is that just one name? I'm sorry if that's one name and I just botched it. I botched so many names. 20 followers. Let's go.

00:20:39
<transcript>: Let's see.

00:20:41
uberrick: giveaway $2k to @UberRick congrats

00:20:51
icedcoffefe: mornin'

00:20:54
<transcript>: Welcome to Chat. Ginger beard. One say Gingerbread so bad ginger beard. What ID do you guys think is the best and most popular? I would use vs. Code GingerBeard. If you're asking that question, I would say just you should probably use vs. Code.

00:20:54
<transcript>: it's a great thing

00:21:06
<transcript>: It's a great thing to start with if you're I mean, I'm assuming you're doing web development. If you're doing like Java, then you only use IntelliJ. But I would say for most people just getting started, I would start with vs. Code. It's a fine IDE.

00:21:06
<transcript>: a fine ed

00:21:15
xap_here: why neovim? :D

00:21:19
<transcript>: A fine editor, and it's got the most, the largest ecosystem, the most people using it so you'll be able to find ways to customize it as you learn that you want to do that.

00:21:26
<transcript>: Or maybe you're really experienced. And you're like, what is the IDE that brings the most joy? And in that case, neo them.

00:21:27
iserejatoje: I became 2000 subscriber because I knew you would pronounce my name correctly :P

00:21:31
<transcript>: It brings me the most joy it's been a lot of fun.

00:21:36
gingerrbeard: I guess neovim, is just vim but updated?

00:21:36
<transcript>: So calface. Yeah. The 200 plus services is kind of a big deal. Here's the thing about the 200 post services.

00:21:36
<transcript>: if you're building

00:21:39
<transcript>: If you're building on AWS.

00:21:47
<transcript>: Like, let's take a modern web application, that's serverless. Okay, how are you gonna take me seriously when I'm minion? Adam, whatever. I'm just gonna keep rolling with it.

00:21:50
delvoid: i started using neovim last week - i still cannot decide if i love or hate it lmao

00:21:55
<transcript>: You're gonna use like a dozen services, right? Like 200 services. It's like going to the grocery store and being like.

00:22:00
<transcript>: I can't. I can't buy stuff. The grocery store. There's thousands of things.

00:22:00
<transcript>: that's

00:22:05
<transcript>: That's the that's the equivalent of there's 200 plus services. Why would I use AWS.

00:22:05
<transcript>: it's aw

00:22:10
caasidev: heyup Adam, how are you?

00:22:16
<transcript>: It's AWS's fault. That the console. That's where most people start. And it's overwhelming. You come in there and it's just like this huge page full of searches. I get it. That's a problem. But I think that's the biggest.

00:22:16
<transcript>: issue is that people

00:22:19
<transcript>: Issue is that people don't start in the right place.

00:22:19
<transcript>: they

00:22:23
daglee: neovim is just vim but with lua, treesitter (an AST for the editor), lsp etc.

00:22:32
<transcript>: They think infrastructure is code is like for nerds and advanced usage. No, it's the easiest way to build cloud applications. So if you just start with something like SST or Architect or service framework or.

00:22:32
<transcript>: any

00:22:42
nexxeln: make a video on how to start with aws

00:22:51
<transcript>: Any number of these frameworks. And you just start with like, how to build the thing you're trying to build there. Like you just want to add an API to your web application. That's the simplest use case that I can come up with. You just want to build an API, or you just want to store even just store uploads, like, store user content, like Photos or whatever.

00:22:51
<transcript>: and you

00:22:58
<transcript>: And you just need S three. You need, like, S three, and you need that's it. You need S three. I mean, ultimately.

00:22:58
<transcript>: you presign

00:23:01
<transcript>: You presign URLs. I guess you need to like.

00:23:01
<transcript>: you need

00:23:06
<transcript>: You need some compute. You could do it in your API functions in your next JS app.

00:23:06
<transcript>: you could just

00:23:17
<transcript>: You could just create this. Generate the presigned URL there in your API function and upload. S three, and you've used like two services. S three, and I am you're gonna use IAM on everything.

00:23:17
<transcript>: like it's just your

00:23:23
<transcript>: Like it's just your security. How you kind of, like set up permissions for your bucket or for whatever.

00:23:41
<transcript>: Yeah, there's 200 plus services, 300 plus. I think at this point, but that's the service any kind of workloads anywhere needs to run ever. So like one of those 200 300 services is ground station, which is for communicating with satellites. And you're not gonna need to do that.

00:23:41
<transcript>: so

00:23:47
<transcript>: So there's one you can check off now you just need to worry about 299. Okay.

00:24:00
uberrick: The serverless services are a good start

00:24:06
<transcript>: The pricing is a problem. I wish I wish eight of this had fixed costs like cost limit where you could say I can only spend this if it goes to that or even just like a Sandbox account where I want the free tier usage. Once I exceed it, shut it down, shut down the account like that should be a thing. I don't know if that ever comes. I hope it does.

00:24:11
<transcript>: I picked up the coffee like that three times and not taking a drink yet.

00:24:20
uberrick: like API Gateway, Lambda, S3, SQS, SNS, DynamoDB

00:24:20
<transcript>: Oh.

00:24:20
<transcript>: i

00:24:26
<transcript>: I became 2000 subscribers because I knew you would pronounce my name correctly. Oh, no.

00:24:26
<transcript>: we're back

00:24:33
<transcript>: We're back to 1999. You're gonna have to unfollow me because I botched it so bad. Zap here. Welcome to chat.

00:24:37
<transcript>: I missed some other messages. Here.

00:24:42
<transcript>: Yeah.

00:24:42
<transcript>: i'm big for

00:24:46
fredkisss: I find that the not fixed pricing is not really begginner friendly

00:24:59
<transcript>: I'm big for ABS, but for companies I work with, not for personal. Too much. Yeah. A lot of people use it at work and they don't want to use it for personal projects. And those people are not using AWS for the right reason. Like you have experience with database. You know, you don't need it for your side project or fear whatever. And you're not using it. That's fine. That's totally fine.

00:25:04
<transcript>: Giveaway 2000 Uber Congrats. So why not.

00:25:09
<transcript>: You know, I wanted to use them for a long time, like I'd been.

00:25:09
<transcript>: it's been on

00:25:15
<transcript>: It's been on my list, you know, for a long time. Like need to learn them. Use the mouse list, all that stuff.

00:25:15
<transcript>: just for

00:25:21
theruggedbear: @Fredkisss yeah. that's one of the biggest reasons. "i dont know how much i have to pay every month"

00:25:26
<transcript>: Just for like efficiency's sake. It's just nice to not move your arm so much. I've actually had like I'm 36 now, actually, I had some like back and posture stuff that I'm not doing a great job right now, actually.

00:25:26
<transcript>: like moving

00:25:28
barneyoftherubble: Choo Choo..... all aboard the neovim train!

00:25:40
<transcript>: Like moving my hands back and forth to the mouse. Just it does stuff start to bother me throughout a long day, so I wanted to get into them. And then Neovim was like just the thing people were doing on Twitch. I started because of that. Sort of influenced by people like Prime.

00:25:50
<transcript>: And teach. But then ultimately, it's been a great hobby. Like, I've just loved playing with it, having more control over your develop environment. It's just a lot of fun.

00:25:55
<transcript>: Let's see I guess new of him is just vim but updated.

00:25:55
<transcript>: it's like

00:25:57
<transcript>: It's like Neovem is like.

00:25:57
<transcript>: so

00:25:59
<transcript>: So.

00:25:59
<transcript>: if

00:26:01
<transcript>: If vim is like.

00:26:06
<transcript>: How would I how would I describe me of him? It's like.

00:26:09
<transcript>: You could just turn on Vin bindings in your VF code.

00:26:15
theruggedbear: neovim = vim on steroids Kappa

00:26:15
foobfoob: do you still plan to release the full-stack on aws course?

00:26:16
<transcript>: And get like 95% of the benefit of them, just like the vim motions and how you actually edit text.

00:26:16
<transcript>: that's them

00:26:19
barneyoftherubble: neovim is like vim but made for VScode users KEKW

00:26:25
thdxr: vscode also feels laggy once you start using neovim

00:26:28
cowfacedude99: in actual sense, neovim is a little more extendable than vim.

00:26:35
<transcript>: That's them. Neovim is like how do you build a good plugin system? It's written in Lua. How do you build this really great IDE on top of it, but have like total customization of it that's Neovim. It's like replacing all the other things in Vs code when you want to move away from Vs code or if you just want the high like I did.

00:26:42
<transcript>: Start using the oven last week still counts. Side if you love or hate it, I totally get that.

00:26:42
<transcript>: hey ca

00:26:45
<transcript>: Hey, Cassie, I'm good. How are you.

00:26:50
<transcript>: Sorry that tells you all where I'm at in Chat. I'm just scrolling slowly.

00:26:57
xap_here: Yeah it is can strongly agree. But wouldn't it be better to instead  get the vim keymap into the VSC so you can keep natural vim feeling whilst having all of the VSC benefits instead of vim/neovim? Just curious as I'm thinking about learning these :D

00:26:58
<transcript>: Yeah, there you go. Dagley answered. Better than I could have ne of them has just been but with Lua tree sitter. And AST for the editor, LSP.

00:27:18
<transcript>: Make a video on how to start with AWS, I'm going to next. So first videos gonna be common misconceptions and sort of my response to those misconceptions. And then there will be videos that follow that are like, here's how I would start if you just want to, like, dip your toes and build an API or build something useful for your Web app. Can I really focus on, like, web.

00:27:18
<transcript>: use case

00:27:28
andom: Howdy HeyGuys

00:27:28
thdxr: if you make a misconceptions video we're going to pin it to our docs

00:27:30
<transcript>: Use cases. I'm not focused on other stuff. Obviously, you could do a lot of things on AWS. It's a big thing, but I focus on the intersection of web development and cloud. Aws.

00:27:33
<transcript>: Yeah. Uber Rick is right.

00:27:33
<transcript>: api gateway

00:27:37
<transcript>: Api Gateway Lambda S Three SQS DynamoDB exactly.

00:27:37
<transcript>: i find that

00:27:50
<transcript>: I find that not fixed pricing is not really beginner friendly. Yeah, I totally agree. Fred. I wish there were some answers to that. There's not right now. There are. So here's the thing cost. My answer to the cost problem is one use serverless stuff.

00:27:50
<transcript>: so if

00:27:53
<transcript>: So if you're not spinning up EC two instances.

00:27:53
<transcript>: that's

00:28:13
<transcript>: That's like that's gonna save you like, a lot of potential headaches where you left an instance that's big running. You can't even start up a lot of the most expensive instances without trying. You have to, like, go to support and say, I want to use GPU instances, and then they say, okay, you can use this mini. Now you can't just accidentally spin up, you know, a VM that's gonna cost you hundreds of dollars a day.

00:28:23
<transcript>: But just don't use VMs. That's the other thing. A lot of people's complaints about AWS are people living in 15 years ago when you like built.

00:28:23
<transcript>: a monolith app

00:28:43
<transcript>: A monolith app and you deploy it to some VM, and that's all it does like the cloud is that it is that sort of infrastructure as a service where you can just run VMs if you want to, but it's also opened up these opportunities to build with high leverage, as a solo developer or as a small team. Build with these managed services and take advantage.

00:28:43
<transcript>: of

00:28:48
<transcript>: Of the might of Amazon, or Google, or whoever.

00:28:48
<transcript>: where they've built

00:28:53
cowfacedude99: @xap_here it depends. mainly because some of the stuff in neovim and vim are not as translatable to vscode. and the emulation is a little slower(from when I tried it) and it had incompatible keybindings last when I checked it.

00:28:59
<transcript>: Where they've built these amazingly resilient services that you can build on top of. They're like Lego bricks. And that's the thing that excites me about the future development is fewer people doing more with more letters.

00:29:10
<transcript>: That you don't get that with the traditional deployment method where I build my app on my local machine. It works on my machine. I ship it to a VM. It works there like that's.

00:29:10
<transcript>: kind of the old way

00:29:19
cowfacedude99: but it's been a while since I checked vscode, so I may be wrong.

00:29:19
<transcript>: Kind of the old way of doing things that's, like, we've been doing that for 15 years, right? It's 20 years, whatever it is, back to the rails. Heyday, like.

00:29:19
<transcript>: i think we're

00:29:24
<transcript>: I think we're moving toward a different world, where you build applications that.

00:29:26
<transcript>: Are better.

00:29:26
<transcript>: and

00:29:29
<transcript>: And it just it takes a different way of thinking.

00:29:29
<transcript>: that's

00:29:47
<transcript>: That's when I look at all the responses to my tweet about why not to use AWS. It's a lot of people that are saying, like, I can get a digital ocean drop list and run my V in there for cheaper at runtime. Well, yeah, but you're now managing that VM, and like, that's a thing you have to think about, right.

00:29:52
zensayyy: yeah but ngl some vscode ext are sadly superior to neovims counterpart :/

00:29:56
<transcript>: Serverless is kind of this promise of thinking about less and having less you have to take care of personally, less infrastructure, less, whatever.

00:29:56
<transcript>: ops

00:29:58
<transcript>: Ops, all that stuff. Okay.

00:30:03
<transcript>: Yeah, that is definitely one of the biggest reasons I don't know how much I have to pay every month.

00:30:03
<transcript>: shoot

00:30:08
theruggedbear: basically, you as a startup at this moment you can ship everywhere in the world without buying a couple of servers for your app

00:30:09
<transcript>: Shoot you. I'll tell you this. If you build serverless applications on AWS, you'll probably pay next to nothing.

00:30:21
<transcript>: Every month most side projects I start until they have real usage. I pay nothing because it's in the free tier because I'm not spinning up VMs and I'm using all like scale to zero services.

00:30:27
<transcript>: Okay, Barney is a rebel. Two, two olive oil. Neovan. Love it.

00:30:27
zachrip: I like the do

00:30:29
fredkisss: The problem is that as a beginner you make a lot of mistakes, and if you are one mistake away for ruining your bank account, ofc you'll be scared

00:30:36
<transcript>: Vim on steroids. That's good. Do you still plan to release the full stack on AWS course. Yeah. Food poop. It's just taking it's taking a different format. So I was gonna do, like, one course.

00:30:39
<transcript>: And now I think I'm gonna build, like.

00:30:42
<transcript>: A more unstructured.

00:30:42
<transcript>: lots of

00:30:45
<transcript>: Lots of related content.

00:30:45
delvoid: greenscreen has broken

00:30:57
<transcript>: I might still like package it up as one course, but it's hard to even make one course about eight of us for web developers, as I've realized, like there's a lot there to try to.

00:30:57
<transcript>: constrain it

00:31:03
theruggedbear: @Delvoid its the effect :(

00:31:05
<transcript>: Constrain it to that. I don't know. It's like I think I'm gonna be more like building a bunch of.

00:31:05
<transcript>: different

00:31:06
<transcript>: Different.

00:31:06
<transcript>: web in aw

00:31:11
<transcript>: Web in AWS content putting it on my site and YouTube.

00:31:11
<transcript>: and

00:31:16
fredkisss: @Delvoid Fixed it

00:31:21
delvoid: @Delvoid ohhh that looked wierd

00:31:23
barneyoftherubble: I'm sorry if I can't share a link but this is frigging cute and funny

00:31:24
<transcript>: And teaching that way, at least to start. So I'm less excited about, like, a waterfall. Build a course, launch the course. That whole thing more like iteratively just creating a bunch of stuff in this space. Okay.

00:31:25
barneyoftherubble: https://twitter.com/KaelanRamos/status/1579587473696763904?s=20&t=XeEqq7r1sN3Nogu7Ww-Kog

00:31:29
<transcript>: New thing is like them but made for vs code users.

00:31:29
<transcript>: kinda

00:31:30
<transcript>: Kinda.

00:31:37
<transcript>: Dax is here vs. Could also be laggy once you start using any of them. Haven't used ZS codes since I use neo them.

00:31:44
<transcript>: Okay that's I'm really behind. I just gotta skip ahead. I'm just gonna have to jump ahead. Here we go.

00:31:48
<transcript>: Hi. I'm just gonna skip all the Vin stuff.

00:31:57
<transcript>: If you make a misconception video, we're going to pin it to our docs. That's awesome. Dax. If it's good. I mean, we'll see if it's good. And I'm see here.

00:32:00
<transcript>: And depends.

00:32:00
<transcript>: okay i'm just gonna

00:32:04
<transcript>: Okay, I'm just gonna ignore the whole vim conversation. I miss that boat.

00:32:11
<transcript>: First I'm chat. Welcome to Chat Zin. Say not gonna ask them via Skill Essential Stylist version.

00:32:24
<transcript>: We still talk about them. Oh, wait, no, basically, use a startup at this moment, you can ship everyone in the world without buying a couple of service reap. Yeah, there's just a lot more leverage available to startups, to individuals.

00:32:33
<transcript>: There's a modern way of building servers, applications. It really excites me. I'm not saying it's gonna get rid of everything else. I'm just saying it really excites me.

00:32:36
<transcript>: Okay.

00:32:41
<transcript>: Yeah. No, I get it. Fred. I think one of the things I want to do, I want to build.

00:32:41
<transcript>: like

00:32:47
<transcript>: Like, for my learning platform, whatever I'm gonna build, I definitely want to have, like.

00:32:47
<transcript>: aws account

00:33:02
cowfacedude99: what's with the hotel shower review LUL

00:33:07
<transcript>: Aws accounts that I've controlled and locked down, and I'm responsible for the billing available to students. So I'm not sure how that's gonna work exactly yet. Like, I've had some ideas about how I could prevent cost overruns and make sure that, like, there's there's stuff you could make you could deploy into your accounts to, like, ensure you don't.

00:33:07
<transcript>: do infinite

00:33:20
theruggedbear: an aws "testnet" would be nice ngl

00:33:27
<transcript>: Do infinite loops with Lambda functions. For instance, like you just lock down and don't use EC Two. So the stuff I'm teaching you're not gonna be using VMs or EC Two, the stuff that is like long running and can run up bills. So just like you can use SCPs in your organization to just prevent those from being used at all. That's kind of step one, like, get rid of all.

00:33:27
<transcript>: the

00:33:30
<transcript>: The Nonservalist services.

00:33:30
<transcript>: and then

00:33:34
thdxr: fwiw we see thousands of beginners using AWS and no one has ever had a cost overrun

00:33:38
<transcript>: And then within serverless services, there's still things you can do that can run up a big bill. But you can kind of like, I think we could engineer solution to prevent.

00:33:42
<transcript>: Those those issues and then.

00:33:42
<transcript>: newbies

00:33:52
<transcript>: Newbies can come in people who are new to this and they don't feel confident. Well, they're not using their AWS account. They're using my AWS accounts. Maybe I give one to each student. I'm not sure we'll find out.

00:33:54
<transcript>: Okay.

00:34:05
fredkisss: If you want to do the course like that, it should not be a free course, at least to help you manage the cost a little.

00:34:07
<transcript>: What's with the hotel shower view? Theo started that he did a hotel shower view at TwitchCon, and then prime did one that I almost peed myself.

00:34:18
<transcript>: See it. Ceo is like, literally in the shower, right? He just, like, took a picture while he's standing there in the shower with the shower head and everything. But then prime gets in the shower with his hoodie. And it's that fun.

00:34:19
<transcript>: funny on him

00:34:20
<transcript>: Funny on him.

00:34:23
<transcript>: So good, Chef, kiss.

00:34:33
<transcript>: Yeah. And then a few other people have done it. It's really made the rounds in Developer Streamer World, you know, the dozens of us that exists. And Developer Streamer world.

00:34:37
<transcript>: Yeah, that's what the hotel showerview is.

00:34:40
<transcript>: This.

00:35:00
<transcript>: Dax, you see thousands of beginners using a toys known as Ever had a Costa friend. Yeah, it's a super rare thing, right? But they blow up on Reddit and Hacker news, and then everyone's terrified, like, there's there's like elements of truth in all of the misconceptions, all of these tropes that people just like, ignore. Aws, because of these things they've heard.

00:35:00
<transcript>: there's elements

00:35:07
<transcript>: There's elements of truth in all of them. But they're all so easily worked around. And it's just sad that so many people dismiss it outright.

00:35:07
<transcript>: and

00:35:10
<transcript>: And they dismiss it. I think for the wrong reasons. Okay.

00:35:30
<transcript>: Yeah, Fred, I think I'm gonna do, like, I think I'm gonna do a bunch of free stuff and a bunch of paid stuff. I like, I don't know, 50, 50, maybe, like, half of the stuff I make will be free. If it's like, beginner oriented, it'll be free if it's, like, more advanced, there'll be some kind of paid thing. I think that's the idea, like, sort of firesh.

00:35:30
<transcript>: fireship

00:35:33
barneyoftherubble: Did you watch the dog fight adamdotdev

00:35:35
<transcript>: Fireship, Esque. Like he's done that. There's like, Go Rails. They have kind of like.

00:35:38
<transcript>: One of those called casts.

00:35:38
<transcript>: what it is

00:35:46
<transcript>: What it is. I don't know. Screencasts. Just a bunch of stuff on Rails. It's like there's some free stuff. There's some paid stuff.

00:35:46
<transcript>: okay

00:35:51
<transcript>: Okay, then. I watch the dog fight. What is the dog fight.

00:35:51
<transcript>: also

00:35:58
<transcript>: Also del void. Did I answer your question? Double would ask me some specific questions, and I want to talk about it. It was really related to all this AWS stuff.

00:36:04
<transcript>: Okay.

00:36:04
<transcript>: we're going

00:36:06
fredkisss: @thdxr For a lesson we had in class, the teacher gave us virtual cards with limited money on it. But a week later i still received a AWS bill with 2000 $ on it

00:36:10
<transcript>: We're going to let's see, I've got we got, like, 15 minutes now. I need to bring David on.

00:36:10
<transcript>: let's

00:36:14
<transcript>: Let's go ahead and get prepared. I don't want to waste any of David's time.

00:36:23
<transcript>: For a lesson we had in class, the teacher gave us virtual cards with limited money on it, but a week later I still receive Natives bill with $2,000 on it.

00:36:25
barneyoftherubble: The link I sent

00:36:25
theruggedbear: Kappa

00:36:32
<transcript>: Do you remember what you were doing, friend? I want to I really want to talk to all these people that run into big bills that are unexpected.

00:36:33
thdxr: was it with serverless services? our audience is all serverless so not sure if that helps

00:36:35
<transcript>: And like, break down, what is the common.

00:36:37
<transcript>: Thing.

00:36:38
fredkisss: I let 5 EC2 instances on Kappa

00:36:41
<transcript>: Yeah.

00:36:46
theruggedbear: lets go fred !

00:36:46
<transcript>: Okay. Five EC, two instances on for how long and how big were they.

00:36:50
cowfacedude99: like we are not gonna waste time LUL

00:36:52
thdxr: I'm teaching my dog to bark at anyone who uses ec2

00:36:53
yozd82: in azure you can set limits to avoid those bills

00:37:00
<transcript>: Somebody sent a link. Oh, dog fight. There's a dog fight for any of the rebel copied link. Let's see here. I'm gonna pull it up before I start sharing my screen. Just in case I don't know what you are sending me.

00:37:00
<transcript>: all my

00:37:00
fredkisss: Small ubuntu instances for 1 week i think

00:37:03
<transcript>: All my word. What is going on? Okay.

00:37:05
<transcript>: It's safe.

00:37:09
<transcript>: This guy is gonna fight this dog, I guess.

00:37:09
<transcript>: what's gonna

00:37:10
<transcript>: What's gonna happen.

00:37:10
<transcript>: what's happening

00:37:13
<transcript>: What's happening? Oh.

00:37:15
<transcript>: That does.

00:37:22
<transcript>: Get it.

00:37:26
<transcript>: That's wholesome.

00:37:26
<transcript>: let's just hold them

00:37:28
<transcript>: Let's just hold them right there.

00:37:34
<transcript>: Alright. That's a great way to start. Okay. So.

00:37:34
<transcript>: let's

00:37:36
<transcript>: Let's do this.

00:37:38
daglee: Hmmm. Some how I think wrestling is fake.

00:37:38
<transcript>: Pnpm? Rendezv.

00:37:41
<transcript>: So I don't even know, I guess is this even build right now.

00:37:41
<transcript>: i don't even

00:37:43
barneyoftherubble: https://twitter.com/KaelanRamos/status/1579587473696763904?s=20&t=XeEqq7r1sN3Nogu7Ww-Kog

00:37:47
<transcript>: I don't even know what what state we're in. What we want to do is model the state machine.

00:37:52
<transcript>: Yeah. I think with David, we'll just stick to the visualizer, right.

00:37:55
<transcript>: I think that's the best.

00:37:55
<transcript>: use of

00:37:57
<transcript>: Use of David's time.

00:38:02
<transcript>: So we'll have the visualizer up.

00:38:05
<transcript>: And the question is.

00:38:08
<transcript>: The question is.

00:38:13
<transcript>: How do I want to explain.

00:38:19
<transcript>: Let me let me practice with you guys? Let's.

00:38:26
<transcript>: Practice trying to quickly get David up to speed on what we're trying to do. So I think this state machine.

00:38:31
<transcript>: There's a few like X state features I think we can take advantage of.

00:38:31
<transcript>: we're gonna need to

00:38:36
<transcript>: We're gonna need to make asynchronous calls. So you're presented with the trivia game, right.

00:38:36
<transcript>: the the

00:38:38
<transcript>: The The Trivia Game. Looks like.

00:38:38
<transcript>: i can

00:38:40
<transcript>: I can't play it right now, I guess.

00:38:40
<transcript>: oh yeah i can

00:38:46
<transcript>: Oh, yeah, I can. It'd be a Guess.com so. The true game looks like this, right.

00:38:48
<transcript>: That's the slow.

00:38:51
<transcript>: Okay.

00:38:51
<transcript>: you're presented with

00:38:58
<transcript>: You're presented with like this thing you say snowmobile, but there's a timer. I guess that's not deployed.

00:39:05
<transcript>: There's like a ten second timer and it goes to expired it'll answer for you at that point and move to the next question.

00:39:09
<transcript>: Eventually the server will say, this is the last question.

00:39:14
<transcript>: Alright guess maybe there should be a whole game timer. I don't know.

00:39:16
delvoid: you defiantly covered the concerns i had, so thank you. Just need to work out when i should/ shouldnt reach for it

00:39:28
uberrick: @thdxr but kubernetes

00:39:30
<transcript>: In Azure, you can set limits to avoid those bills. So a Tobis just needs to do that. I don't know when they're gonna maybe I just don't care. They're so enterprise heavy. Like I know. Like.

00:39:36
<transcript>: You're just getting started. It's probably not their top priority. Like, I don't know.

00:39:36
<transcript>: i feel

00:39:38
raestrict: How ya doin Adam

00:39:46
rihanshazih: AWS' internal billing system is too complicated

00:39:56
<transcript>: I feel like serverless is not their top priority. And I wish it was. But I mean, it's amazing. Like they've done so much on that front. And it's a big company. They can do a lot of different things. They can serve a lot of different customers. But it doesn't seem like things like cost limits seem to be that high priority. I don't know. Like in my little corner of the web, it's very.

00:39:56
<transcript>: important

00:40:03
<transcript>: Important like trying to teach new people to use AWS for their web projects and like small teams solo people.

00:40:03
<transcript>: it matters

00:40:07
<transcript>: It matters to me I just don't know how much it matters to AWS.

00:40:15
<transcript>: I feel like they could have done it by now if it really, really mattered, but small Ubuntu instances for one week.

00:40:17
<transcript>: The racked up $2,000.

00:40:19
thdxr: think they don't have a clean way to "kill stuff"

00:40:23
<transcript>: Maybe DM me on Twitter. I'd love to learn more about all that.

00:40:29
thdxr: like killing an SQS queue seems hard

00:40:32
<transcript>: I definitely concerned. Okay. I just need to work out when I shouldn't reach for it. Yeah, I think that's.

00:40:32
<transcript>: like that

00:40:34
<transcript>: Like that's a thing.

00:40:34
<transcript>: that

00:40:35
rihanshazih: @thdxr not like google :D

00:40:41
thdxr: Lol

00:40:42
dylan_landry: Is that HD650 or 6xx?

00:40:42
<transcript>: That comes over time. Like just like everything in Tech, there's trade offs and you learn you get better and better at figuring out what those tradeoffs are.

00:40:42
<transcript>: and you know

00:40:45
<transcript>: And you know what decision you should make.

00:40:49
<transcript>: I'm doing great racetrict.

00:40:49
<transcript>: aid of this internal

00:40:52
<transcript>: Aid of this internal building system is too complicated.

00:40:57
<transcript>: Think they don't have a clean way to kill stuff. Yeah. That's that makes sense. Like.

00:40:57
<transcript>: do they

00:41:10
<transcript>: Do they literally just shut your I wonder, like as I thought about this, could they not just say, like you could opt in, like, check a flag when you create your account, that like, this is okay to just kill it. Kill everything.

00:41:15
<transcript>: If I hit this cost limit like could it be like some accounts.

00:41:18
<transcript>: When you know what you're doing.

00:41:18
<transcript>: if you

00:41:31
<transcript>: If you know what you're doing, you don't want that feature, you don't want it killing your stuff. You'll fix the billing issue if there's a billing issue, but for other accounts, maybe have that as an option. I don't know, but yeah, I get it. Like, how do you kill just any arbitrary infrastructure that's deployed.

00:41:34
<transcript>: Yeah makes sense.

00:41:41
<transcript>: Ht 660 it is Dylan? Welcome to Chat? Welcome, welcome, welcome, welcome, welcome, welcome.

00:41:43
<transcript>: It's an HD 650.

00:41:43
<transcript>: okay

00:41:52
<transcript>: Okay. So we're going to explain to David it's this guessing game. And you do this things and you get right and wrong answers.

00:41:56
iamwhiteknife: hii

00:41:56
<transcript>: I guess I need to decide on the in terms of gameplay.

00:41:56
<transcript>: do we want it

00:41:56
theruggedbear: are you pre-rendering the next guess ?

00:41:58
<transcript>: Do we want it to be just like a.

00:42:03
<transcript>: Do we want it to be.

00:42:16
<transcript>: A fixed time limit, like a twominute round. Your game is two minutes long. I think so. I think there's a fixed time for the whole game. And it's how many can you get right in that time? Well, in that case, there wouldn't be a timer for each one, would there.

00:42:16
<transcript>: what do we think is best

00:42:19
<transcript>: What do we think is best? Dax, you have opinions on this.

00:42:19
<transcript>: you know aw

00:42:21
<transcript>: You know AWS services.

00:42:21
<transcript>: if you're playing

00:42:25
<transcript>: If you're playing this game as an AWS nerd.

00:42:25
<transcript>: do you like

00:42:26
fredkisss: Aren't there any companies that center around killing the machines when the AWS cost has exceeded ?

00:42:29
<transcript>: Do you like the gameplay better if it's like each round is timed.

00:42:31
thdxr: I missed that was hitting the overhead press too hard

00:42:32
<transcript>: And you only loaded.

00:42:39
uberrick: timer between rounds and total game timer

00:42:48
<transcript>: Then how long do you go for? I guess. Or do you like the idea of like a total time or like a two minute timer? You're playing a game for two minutes. How many can get right in that time? It doesn't matter how you spend on each one. It's how many can you get right in that time? And then there's like bonus points for streaks and stuff like that.

00:42:51
<transcript>: Any opinions? Anybody.

00:42:52
thdxr: think a global timer is more intense

00:42:56
<transcript>: I am White Knife, and welcome to Chat as well. Hi.

00:42:56
<transcript>: are

00:42:59
<transcript>: Are you prerendering the next guest.

00:43:00
iamwhiteknife: global timer

00:43:07
<transcript>: No there's no there's no server side rendering going on in the game.

00:43:12
uberrick: well tbh I guess I'm more meaning a limit to how many rounds :D

00:43:17
<transcript>: You say prerendering? Is that you mean, aren't there any companies that center and killing the machines and the AWS cost is exceeded? I'm not sure, Fred. Maybe.

00:43:17
<transcript>: i guess

00:43:22
<transcript>: I guess it could. You could go that way, like third party companies trying to build that.

00:43:23
theruggedbear: pre-fetching sorry.

00:43:36
<transcript>: I want to build like a little just open source tool, a page where you can go connect your database account and then like click a button and it sets it up for various use cases. Maybe there's like two or three choices, but one is like simple serverless environment.

00:43:39
<transcript>: I want.

00:43:39
<transcript>: build

00:43:39
thdxr: we're thinking about adding the kill switch as a feature in SST, can set billing limit and we try to kill everything

00:43:45
thdxr: set function concurrency to 0

00:43:45
<transcript>: Build alerts I want SCPs does not allow me to spin up something I shouldn't cost money.

00:43:45
<transcript>: and

00:43:50
<transcript>: And I want to prod in a Dev account set up SSO.

00:43:50
<transcript>: and then

00:43:57
thdxr: but we don't handle anything not serverless

00:44:04
<transcript>: And then I can add users by just typing email addresses in there and then, like, assign them to account some simple little like one page wizard where I can just have it take over and set up my accounts the right way. Jackson, I talked about this.

00:44:10
<transcript>: Miss that was hitting the overhead press to hard.

00:44:10
<transcript>: oh

00:44:14
<transcript>: Oh, I missed. That was hitting the overhead pressure.

00:44:18
<transcript>: Next watch is always working out. Yeah, I think Global timer is better.

00:44:18
<transcript>: i think all the time

00:44:26
<transcript>: I think all the timers better time between rounds and total guys. Oh, you think both Rick, like you can only spend up to 10 seconds on each one. We could do both.

00:44:33
<transcript>: I am Whiteness at school over time global timer. Well, to be honest, I guess I'm more meaning a limit to how many rounds.

00:44:45
uberrick: Yeah true

00:44:46
<transcript>: But then it's like a cap on the top score. Like if you just said two minutes, how many can you get right? And you get bonuses for streaks? Then the theoretical top score could be like super high. And maybe even like there isn't a top score.

00:44:50
<transcript>: Oh prefetching.

00:44:59
<transcript>: No, I'm not prefetching the next round. That's a good call, though we could while they're just sitting here staring at this, we could, like, grab the next round.

00:45:03
<transcript>: I'm arbitrarily just waiting a little bit so they can see the right answer.

00:45:03
<transcript>: so there

00:45:06
<transcript>: So there is like some baked in.

00:45:06
<transcript>: like

00:45:08
<transcript>: Like I'm waiting here.

00:45:16
<transcript>: We're thinking about adding the Kill Switch as a feature in SSC.

00:45:16
<transcript>: billing

00:45:19
<transcript>: Billing limit. We try to kill everything that's.

00:45:19
<transcript>: a hard problem

00:45:25
<transcript>: A hard problem, but it's easier with a serverless use case like you've got a finite world you're working in that makes sense.

00:45:25
<transcript>: function

00:45:30
<transcript>: Function concurrency to zero, but we don't handle anything, not serverless, right? Yeah, not.

00:45:30
<transcript>: that makes sense

00:45:32
<transcript>: That makes sense for SSD.

00:45:39
<transcript>: All right. So we're gonna say we want to have a global timer on the whole thing.

00:45:44
daneoshiga: small cumulative timer per guess, ends game when timer goes to zero?

00:45:52
<transcript>: So what did I think? I thought we could use the invoke stuff built into X state. I thought we could use the.

00:45:52
<transcript>: timer

00:45:54
<transcript>: Timer, stuff.

00:45:54
<transcript>: so

00:45:57
<transcript>: So after you click.

00:45:57
<transcript>: an answer

00:45:59
<transcript>: An answer like this is shield.

00:45:59
<transcript>: we

00:46:01
<transcript>: We want to like, wait.

00:46:01
<transcript>: two seconds or

00:46:05
<transcript>: 2 seconds or something, and then transition to the next one, right.

00:46:14
<transcript>: But yeah, I'm starting to think maybe we don't limit? Maybe we don't say there's a timer.

00:46:14
<transcript>: on

00:46:22
<transcript>: On each round, we just say there's a timer on the total game. On the whole game. There's, like this twominute timer.

00:46:22
<transcript>: and

00:46:30
<transcript>: And when that timer's up, how many rounds? How many points did you get is just how many points can you get in two minutes? That also probably plays nicer.

00:46:30
<transcript>: with a

00:46:32
<transcript>: With a multiplayer.

00:46:32
<transcript>: well

00:46:34
thdxr: I haven't recognized any of the logos that have come up

00:46:34
<transcript>: Well maybe.

00:46:34
<transcript>: if multiplayer is gonna be different

00:46:39
<transcript>: If multiplayer is gonna be different, it's gonna be the first one to get. Each one gets that point, it'll be totally different.

00:46:48
<transcript>: This mock Cuba timer per guest ends game when timer goes to zero Oh.

00:46:48
<transcript>: accumulative

00:46:52
<transcript>: Accumulative timer. Ooh, this is interesting. So you're saying.

00:46:57
<transcript>: Like you get more time every time you get one right.

00:46:57
<transcript>: in

00:47:02
iamwhiteknife: so its just AWS images only?

00:47:03
<transcript>: In game when timer goes zero I love that I love it who loves this more than the other options.

00:47:03
<transcript>: since the jack

00:47:07
thdxr: survival mode

00:47:12
theruggedbear: or you get time based on how fast you answered

00:47:13
<transcript>: Since the Jack doesn't recognize any of the logos that have come up yet, it's tough. Yeah, I am one. It's just AWS Services. That's what this is. It's AW. Guess.com.

00:47:13
<transcript>: survival

00:47:24
<transcript>: Survival mode. So maybe we could have a different couple different game modes. I want David to help me get just like a concept of a state machine in place. And then we can probably extend that to all these different game mode.

00:47:27
iamwhiteknife: why you creating this project?

00:47:28
uberrick: @thdxr if SST doesn't support then it's not relevant right

00:47:36
uberrick: LUL

00:47:40
<transcript>: Or you get time based on how fast you answered. Oh, yes. If you answer quick, you get more time added. I want it to be like, predictable. I want you to kind of like, get a good sense for how it works just from playing it and not be too complicated.

00:47:50
<transcript>: I don't know. I guess I need to show plus whatever seconds, whenever you get one right? But I like this idea because they.

00:47:50
<transcript>: think it does

00:47:52
<transcript>: Think it does make the top score infinite like there's.

00:48:01
<transcript>: Theoretically. Go on forever. Your game could never end, and I like that I like to like skill. Cap is raised.

00:48:01
<transcript>: maybe

00:48:04
<transcript>: Maybe or do you just get lucky.

00:48:04
<transcript>: the problem is

00:48:08
<transcript>: The problem is there has to be a penalty. When you get one wrong, you have to lose a little time, right.

00:48:08
<transcript>: yeah you can't just

00:48:10
<transcript>: Yeah, you can't just blaze through it.

00:48:14
<transcript>: Why am I creating this project? I am White knife.

00:48:15
thdxr: Bingo

00:48:21
theruggedbear: fun !

00:48:22
<transcript>: Why do I do anything that I do? I don't know. I've wanted to make it for a long time, and I want to play with the T three SEC. So this was.

00:48:22
<transcript>: my t

00:48:24
<transcript>: My T three stack excuse.

00:48:30
<transcript>: I'm gonna take break. I was gonna start music, but we'll wait until David's.

00:48:33
iamwhiteknife: !t3

00:48:34
<transcript>: Yeah, no, it's missing certain music. Now I'm gonna bring him on at least ten minutes.

00:48:41
<transcript>: Let's see.

00:48:46
<transcript>: If SSC doesn't support and it's not relevant. Right. Exactly.

00:48:53
<transcript>: The T three stack. I am white. Nice. It's next. You still here? What's the best.

00:48:55
theruggedbear: https://github.com/t3-oss/create-t3-app

00:48:57
<transcript>: Url. There's a few of them.

00:48:59
uberrick: Rust Lambda when? :p

00:49:02
<transcript>: Create that T three GG. Yeah, there it is.

00:49:03
adamdotdev: https://create.t3.gg/

00:49:05
uberrick: well without having to do my own runtime

00:49:07
<transcript>: Oh, yeah, there's the GitHub.

00:49:14
<transcript>: Rust Lambda Win Oh, I do want to try it so that could be one of the backends. We do.

00:49:14
<transcript>: we could do

00:49:18
<transcript>: We could do like a rust WASM at the edge, backend.

00:49:22
<transcript>: Just like hit all the buzzwords.

00:49:22
<transcript>: thank you for the

00:49:29
<transcript>: Thank you for the followed. Dylan. I don't think I said that. Thank you so much. 2003 followers. I appreciate every one of you. Thanks so much fun playing on Twitch.

00:49:33
<transcript>: Hoping to play more often. Soon.

00:49:33
<transcript>: just taking

00:49:44
<transcript>: Just taking some time to iron out the details. And I apologize for that, but I will be streaming more and we'll be working on some different stuff that you haven't seen me work on. Then I'm really excited to work on.

00:49:49
theruggedbear: the smile on adam's face when he said rust lambda. he's going to enjoy making these !

00:49:55
<transcript>: Okay need to make a logo for AW guess.

00:49:57
uberrick: also, did you ever talk about the whole adam.tv deal haha?

00:50:00
<transcript>: The smile on an face when he said Rust Lambda, he's going into a.

00:50:04
<transcript>: Definitely am. Did you ever talk about the whole Atom TV deal.

00:50:07
<transcript>: No. That's when I was alluding to.

00:50:10
<transcript>: It's in a works.

00:50:11
<transcript>: So I'll say.

00:50:11
<transcript>: there have been

00:50:14
<transcript>: There have been some snags.

00:50:27
<transcript>: Mostly because there's a third party here that I have no control over. So the person who owns Adam TV doesn't have to sell it, and they don't have to sell it for what they said they'd sell it for.

00:50:27
<transcript>: and

00:50:34
<transcript>: And that's been a bit of a hangup, so working through it, but I'll have news to share either way.

00:50:45
uberrick: haha now theres a company involved it's 200k LUL

00:50:46
<transcript>: Before we bring David on just to leave that zest and reference. You know, I'm saying, don't need to just like.

00:50:46
<transcript>: point out that we

00:50:49
<transcript>: Point out that we tried with Zest and.

00:50:50
thdxr: We got the sst npm package for a $100 Amazon gift card lol

00:50:53
<transcript>: I also probably need to look at the package JSON.

00:50:53
<transcript>: clean

00:50:54
<transcript>: Clean it up.

00:50:57
<transcript>: Are we using frame Remotion.

00:50:57
<transcript>: we probably

00:50:58
<transcript>: We probably will.

00:50:58
<transcript>: we're not using

00:51:01
<transcript>: We're not using this stand.

00:51:03
uberrick: @thdxr winner

00:51:06
thdxr: maybe you start negotiations there

00:51:12
<transcript>: We're not using any of this stuff. I think we're using it all. Okay.

00:51:14
<transcript>: All right.

00:51:14
<transcript>: save that

00:51:16
<transcript>: Save that thing.

00:51:19
<transcript>: And then I'll just do.

00:51:19
<transcript>: mv

00:51:21
<transcript>: Mvm.

00:51:21
<transcript>: install

00:51:27
<transcript>: Install. Is that how you like update all the yeah, just remove the ones you don't need pmpm's. Great.

00:51:27
<transcript>: really great

00:51:29
<transcript>: Really great.

00:51:35
<transcript>: Just trying to make sure I'm ready for David.

00:51:35
<transcript>: like i said he's

00:51:38
<transcript>: Like I said, he's only gonna be here for an hour.

00:51:41
<transcript>: And I want to make sure.

00:51:41
<transcript>: we

00:51:43
<transcript>: We take advantage of that time.

00:51:47
<transcript>: Someone stop me if I just start rambling.

00:51:47
<transcript>: just start yelling

00:51:56
<transcript>: Just start yelling in chat because I will. I'll start rambling. And like we have we need to be efficient. And I'll start like saying stuff. It's not pertinent. It's just how I am.

00:51:56
<transcript>: we're gonna cut

00:51:58
thdxr: you're rambling about rambling

00:52:00
<transcript>: We're gonna cut the chitchat. Just gonna be straight to business.

00:52:02
<transcript>: Straight to it.

00:52:10
<transcript>: I'm rambling about Rambling. Well, we don't have to be. We're not too impressions about time right now. So just rambling.

00:52:16
<transcript>: Volts. 200k. Yeah. Exactly.

00:52:16
<transcript>: we got the

00:52:21
<transcript>: We got the SS T MPM package for a $100 inside gift card. That's amazing.

00:52:28
cekirgehacker: which terminal app you use ?

00:52:38
<transcript>: That is awesome. Maybe start negotiations there. Yeah. I I've gotten a few MPM packages. It's like the one place on the Internet where when the thing is taken, like when your username or your whatever is taken there's. Hope. Like I've gotten a couple of abandoned MPM packages.

00:52:38
<transcript>: that i ultimately

00:52:39
<transcript>: That I ultimately didn't use.

00:52:39
<transcript>: i used

00:52:46
<transcript>: I used one of them nest, the other one still abandoned just by me and said the previous owner.

00:52:50
<transcript>: Yeah. Like when they don't really have did it have usage.

00:52:50
<transcript>: dax like

00:52:57
<transcript>: Dax, like, did anybody use the SSD NPM package? Or was it completely like just a Nothing burger.

00:52:59
<transcript>: Welcome to chat.

00:53:01
<transcript>: Secret.

00:53:01
<transcript>: secrete hacker

00:53:05
<transcript>: Secrete hacker? Which terminal app? Do you use Terminal? This is.

00:53:07
<transcript>: Alacrity.

00:53:07
<transcript>: so

00:53:08
thdxr: not really used but took us forever to get in contact

00:53:10
<transcript>: So alacrity is the emulator.

00:53:18
<transcript>: When someone says Terminal app. I don't know if that's what they mean. Is that what you meant? Securgy.

00:53:18
<transcript>: does you mean which image

00:53:19
<transcript>: Does you mean which image.

00:53:21
cekirgehacker: yeah I know it it's nice

00:53:29
<transcript>: Not really used, but took us forever to get into contact. Yeah, they do have, like the email addresses listed. Right. But I guess if that doesn't get you anywhere, then.

00:53:33
<transcript>: Yeah.

00:53:33
<transcript>: i've enjoyed

00:53:40
<transcript>: I've enjoyed a lacarde. I have them all installed. I think Kitty Eye term. I'm using alacrity.

00:53:43
cekirgehacker: you can spell my name as Chekirge

00:53:48
<transcript>: Let's go to our index. I'll have this pulled up.

00:53:52
<transcript>: Here's what I thought our game state would look like.

00:54:03
<transcript>: We're not gonna be able to play with this locally, but that's okay. I don't think we need to. I think the thing we need to talk about is.

00:54:06
<transcript>: This game. In fact, I'm just gonna.

00:54:06
<transcript>: let's just do

00:54:08
<transcript>: Let's just do this.

00:54:10
<transcript>: Let's.

00:54:11
<transcript>: How do I make.

00:54:14
<transcript>: Hide.

00:54:18
<transcript>: There we go.

00:54:18
<transcript>: let's

00:54:21
<transcript>: Let's do this. Let's open up.

00:54:21
<transcript>: x state

00:54:22
<transcript>: X state.

00:54:22
<transcript>: docs

00:54:25
<transcript>: Docs. And this Chrome.

00:54:25
daglee: My brain keeps reading che-cringe-hacker.

00:54:29
<transcript>: Like so.

00:54:33
<transcript>: The visualizer, I guess, is what I'm really looking for.

00:54:33
<transcript>: yeah

00:54:34
<transcript>: Yeah.

00:54:34
<transcript>: okay

00:54:35
<transcript>: Okay.

00:54:39
<transcript>: I'm going to.

00:54:42
<transcript>: Let me just check here.

00:54:44
<transcript>: Check and chat.

00:54:44
cekirgehacker: woah!. that was a new one :')

00:54:49
<transcript>: You can sell my name as.

00:54:53
<transcript>: Shakurge, did I say right.

00:54:56
<transcript>: This occurred. Shakurge.

00:55:01
<transcript>: I'm so bad at Pronouncing. Basically, everything I read for the first time.

00:55:01
<transcript>: that was a new

00:55:03
<transcript>: That was a new one. Sorry.

00:55:06
<transcript>: Oh, Shakrin Shacker. That was a new one.

00:55:13
<transcript>: Yeah. Okay. So any last thoughts before I'm gonna go to break and bring David on.

00:55:15
<transcript>: Here in five minutes.

00:55:20
<transcript>: I'm gonna change the title.

00:55:20
<transcript>: let

00:55:22
<transcript>: Let's.

00:55:30
<transcript>: Build.

00:55:34
<transcript>: Aw guess.

00:55:38
<transcript>: And.

00:55:41
<transcript>: Next state.

00:55:44
<transcript>: With.

00:55:44
<transcript>: david

00:55:45
laytanl_: yo, Good afternoon!

00:55:45
<transcript>: David.

00:55:50
<transcript>: For Sheet or David KPN.

00:55:55
<transcript>: Done.

00:55:58
<transcript>: Thank you for the follow.

00:56:16
<transcript>: I am not going to a quick break to bring David on David Corshid of X state or stately AI he's gonna help me build out this state machine.

00:56:16
<transcript>: more

00:56:18
<transcript>: More efficiently than I can do.

00:56:22
<transcript>: Clearly. I tried if you always.

00:56:25
<transcript>: It was ugly.

00:56:27
bausmeier: Glad to see you haven't given up on xstate.

00:56:27
<transcript>: There's a lot of just staring at the wall.

00:56:27
<transcript>: okay

00:56:30
<transcript>: Okay. I want to go a quick break. I'll be back.

00:56:33
<transcript>: And let's see.

00:56:36
<transcript>: Yeah.

00:56:36
<transcript>: okay

00:56:45
<transcript>: Okay, go on the break. I'll see you guys at about fiveish minutes. Having given up on it. We're leaning into xDate. I'll be back with David shortly.

00:57:03
krowzar: wtf is the camera moving?

00:57:14
thdxr: yep it's a mechanical camera

00:57:20
krowzar: that's insane

00:57:21
thdxr: production value is through the roof

00:57:36
uberrick: the day he spills a drink over his desk during that transition will be amazing

00:57:44
uberrick: @thdxr indeed

00:57:46
vim_cerf: wait, it's not prerecorded and carefully wardrobe coordinated? :O

00:57:50
realmplg: this has got to be one of the best looking streams i have seen in my life.

00:57:52
krowzar: @thdxr sure it is

00:58:22
krowzar: do you know the name of the mechanical camera?

00:59:39
jaystation3x: The motion control device is from Edelkrone

01:00:02
krowzar: @jaystation3x thanks!

01:00:17
awayxd: @RealmPLG i liked this minilist set the camera feature a lot, but if you like gaming experience you can watch @thedarkness, he is a brasilian streamer who focus in experience

01:03:39
<transcript>: Check, check.

01:03:43
jaystation3x: I joined at the most confusing time.

01:04:30
earl_george: yo whats up

01:04:32
<transcript>: Hey, David.

01:04:34
<transcript>: Can you hear me? I.

01:04:42
<transcript>: 'm gonna try and be really efficient with your time. I've been spending the last hour with my stream. Here. Prepping.

01:04:45
<transcript>: So Twitch. Chats. Tired of listening to me talk about this.

01:04:45
<transcript>: yeah

01:04:47
<transcript>: Yeah.

01:04:47
<transcript>: i'll get into

01:04:50
<transcript>: I'll get into it on the stream. Do you have any questions? I guess in terms of.

01:04:50
<transcript>: the logistics here

01:04:52
<transcript>: The Logistics here.

01:04:56
<transcript>: Yeah.

01:05:05
<transcript>: Oh, yeah? Yeah? So I'm gonna bring you'll be in my overlays like you'll be through Ping in the stream in that way.

01:05:15
<transcript>: No, we're not ever now. No, it's currently at break. I'll show you kind of what they're seeing, and I'm gonna switch this anyway. I'll just have the OBS camera. Can you still hear me? Okay.

01:05:29
<transcript>: Okay. So this I'll leave this up so you can kind of see it won't be me looking at you directly, but you'll kind of see what the stream sees throughout the rest of stream. But you'll be kind of like dropped in as a little camera in the thing.

01:05:31
<transcript>: Does that make sense.

01:05:31
<transcript>: and it's adam

01:05:35
<transcript>: And it's Adam Dev on Twitch if you want to be in Twitch chat or whatever.

01:05:38
<transcript>: Yeah.

01:05:48
<transcript>: I'm gonna go ahead and yeah, I'll kick it off break and assuming I got everything working, I don't know.

01:05:52
<transcript>: I don't have that many guests on so my overlays could be all broken? We'll see.

01:06:00
<transcript>: It should be kind of like a zoomed out view to start.

01:06:00
<transcript>: like

01:06:04
<transcript>: Like the two of us just talking, but we'll spend very little time there. I want to be efficient.

01:06:23
<transcript>: Here. Okay. This is kind of dumb. I thought I'd do like the like, here. There. I'm like a weatherman. I don't know. It didn't work.

01:06:26
<transcript>: Yeah, Yeah.

01:06:36
<transcript>: Okay, so we'll just go straight over to the screen here and be efficient. But, David, thank you so much for joining David Corshid Stately AI Creator of X state.

01:06:36
<transcript>: if you all aren't

01:06:38
<transcript>: If you all aren't familiar.

01:06:50
<transcript>: He's gonna help us move a lot faster than I was moving last week, trying to do this on the own. So David on the phone. If I told you I have very little experience with X State, I've played with it as you've seen a couple times.

01:06:50
<transcript>: i'm convinced

01:07:10
<transcript>: I'm convinced, though, for this one, I think this is the right move. And I'm even like this project in particular was really just a learning exercise for me. I wanted to play with different stacks, and I want to build it actually in multiple stacks. I want to build the backend and a few different ways because I've noticed some things that I do differently with other stacks. But I started thinking if I use X state to do all the state management on the CL.

01:07:10
<transcript>: client

01:07:18
<transcript>: Client. I could actually build the front end in different, potentially different frameworks and kind of Port that over. Do people do that, does that work.

01:07:56
<transcript>: Right.

01:08:14
<transcript>: And.

01:08:20
<transcript>: Sure, Yeah.

01:08:31
<transcript>: That's awesome.

01:08:34
<transcript>: Yeah.

01:08:42
<transcript>: Yeah. So I want to play with Solid. That was one of the tops on my list. And I had seen where Ryan had sort of put together an excite example, but.

01:08:42
<transcript>: cool to hear if

01:08:45
<transcript>: Cool to hear if there's more coming on that front.

01:08:45
<transcript>: yeah so i want to

01:08:58
<transcript>: Yeah. So I want to jump into kind of what I'm building here. This is like it's AWS. It's like an AWS guessing game. So there's 300 plus A to be a services, we show you an icon and you have to sort of guess what is the service? Right.

01:08:58
<transcript>: and you

01:09:14
<transcript>: And you get a wrong answer. You get a right answer. It kind of tells you. Then it moves to the next round. I think the idea is that there'll be like a total time limit on the whole game. Like you're playing a single player game. We're gonna extend it to multiplayer, but there's like a two minute.

01:09:14
<transcript>: timer

01:09:26
<transcript>: Timer. Right. And after two minutes, the game is over. How many can you get right in that time? There's gonna be some other stuff of scoring, like streaks and stuff like that. But that's the crux of it is that you're given these rounds.

01:09:26
<transcript>: and

01:09:27
jaystation3x: Is the beaver with a saw real??!?!

01:09:43
<transcript>: And you choose an answer based on the picture which this one is like lumberyard, you get it right or Yade it wrong. We kind of delay there for a second and then we transition so you can see the right or wrong answer. I want to make sure and give them an opportunity to learn there and then transition into the next round.

01:09:43
<transcript>: i

01:09:48
<transcript>: I started trying to kind of model that out the next state and kind of figure out what my States are.

01:09:48
<transcript>: but

01:10:07
<transcript>: But I think at high level, I think we can take advantage of some stuff in X Eight. I think you alluded this with the effects, like actually invoking our backend API calls. When we click on one of these options, it's making obviously an API call to the back end to see if we got it right and then ultimately return the next round. I think that's something.

01:10:07
<transcript>: that we can do

01:10:10
<transcript>: That we can do within X state. Is that accurate.

01:10:22
<transcript>: Oh, wow. Okay.

01:10:34
<transcript>: Yep.

01:10:39
<transcript>: Okay. Great.

01:10:51
<transcript>: Machine name.

01:10:55
<transcript>: Oh Yeah.

01:11:11
<transcript>: Okay.

01:11:11
<transcript>: right here

01:11:13
<transcript>: Right here. Yep.

01:11:17
<transcript>: Okay.

01:11:31
<transcript>: Oh, this is. This is better. Yeah, this is better than the other thing.

01:11:31
<transcript>: i

01:11:33
<transcript>: I wasn't aware.

01:11:33
<transcript>: okay

01:11:38
<transcript>: Okay. So I had started. I started trying to kind of where did I put that.

01:11:42
<transcript>: Did I just navigate away from it? I probably did.

01:11:44
<transcript>: Xdate.

01:11:49
<transcript>: This. I guess I didn't say that. Probably. Oh, yeah. It's still. Maybe not.

01:11:54
<transcript>: It's not a big deal. It's really like it was chicken scratch. It was garbage.

01:11:59
<transcript>: Yeah, Yeah.

01:11:59
<transcript>: so i think

01:12:04
<transcript>: So I think part of the problem for me is I don't I don't do work with finites a machine. So I don't think in terms of.

01:12:04
<transcript>: my

01:12:18
<transcript>: My available States. We tried on Chat. They're on Twitch last week to kind of like work through the States in my mind. But is that the starting point is that when you're building a new state machine like this, you kind of start with what are your available States, and then you move to other things.

01:12:44
<transcript>: Yep.

01:13:09
<transcript>: Okay.

01:13:23
<transcript>: Yeah.

01:13:43
<transcript>: So I called it. What did I call it before? I called the Pending. Like, once you click on a choice, there's a delay while we're waiting on the server. I called that Pending like you've asked what you're waiting. I don't know if that's a good name, but I guess before you do that, I called.

01:13:43
<transcript>: it activ

01:13:49
<transcript>: It active. So I went from like there is no game you have it started your idol you click start.

01:13:49
<transcript>: yeah

01:13:52
<transcript>: Yeah, like right here so new game.

01:13:52
<transcript>: that started

01:13:53
<transcript>: That started.

01:13:59
<transcript>: Active. That's how I was modeling. But someone said you could have Nested State machines. I started wondering.

01:13:59
<transcript>: is that even

01:14:07
<transcript>: Is that even should I even have my state machine involved in this screen or should it move into it once there is an active game, do you have thoughts on stuff like that.

01:14:26
<transcript>: Yeah.

01:14:54
<transcript>: So active would be like you've started new game. Now you're presented with a question you can spend as long as you want here, but you're now trying to answer Yeah.

01:15:01
<transcript>: Over to Active. Okay.

01:15:04
<transcript>: Start game.

01:15:20
<transcript>: Yes, yeah, every.

01:15:20
<transcript>: it makes

01:15:22
<transcript>: It makes a request.

01:15:22
<transcript>: i don't

01:15:29
<transcript>: I don't know. Maybe it's dumb, but I'm not sending the answers down to the client, you know, so people can't like this. Cheat.

01:15:36
<transcript>: Yeah.

01:15:40
<transcript>: Checking answer.

01:15:50
<transcript>: Yes. So there'd be a connecting active to this and the action would be.

01:15:50
<transcript>: answered

01:15:52
<transcript>: Answered or answer.

01:16:01
<transcript>: Part of the is like the English, like, how do you just knowing that's kind of like ways to think about these States and the way you name them.

01:16:05
<transcript>: Oops. Okay, that was checking answer we made from here.

01:16:10
<transcript>: Checking answer and that's answer.

01:16:16
<transcript>: Yeah.

01:16:30
<transcript>: I'll just move that one. There we go.

01:16:44
mustkillnoobsss: i love that hair

01:16:44
<transcript>: Yeah.

01:17:03
<transcript>: That'd be like the beginning of the round. Yeah. You've got a new question now? Yeah, that's right.

01:17:14
<transcript>: Oh Yeah.

01:17:18
<transcript>: This is awesome.

01:17:35
<transcript>: I need to add an ID.

01:17:37
<transcript>: Okay.

01:17:52
<transcript>: I mean, this is great.

01:17:52
<transcript>: but yeah

01:17:54
<transcript>: But yeah, looking forward to it.

01:17:58
<transcript>: Okay.

01:18:02
<transcript>: Connect them. Yeah. Like that.

01:18:12
<transcript>: Nice. Okay.

01:18:19
jaystation3x: This is slick.

01:18:23
<transcript>: Yep.

01:18:31
<transcript>: Right click here.

01:18:35
<transcript>: Yeah.

01:18:37
<transcript>: Oh, nice.

01:18:45
<transcript>: This is so cool.

01:18:45
<transcript>: so

01:18:46
<transcript>: So.

01:18:55
<transcript>: This is. This is incredible. I never want to do state management in the other way. I'm sold.

01:19:01
<transcript>: Yeah, Yeah.

01:19:05
<transcript>: It's intuitive.

01:19:15
<transcript>: Yep.

01:19:32
<transcript>: Yeah. And then I guess the the other thing would be the game goes into a final state when the timer runs out. So, like, the whole rent. The whole thing is like two minutes long. How many can you get right in two minutes.

01:19:32
<transcript>: i think that's

01:19:40
<transcript>: I think that's what we're leaning towards. So something like that we would sort of have, like, a global timer that just transitions to something after.

01:19:40
<transcript>: the

01:19:42
<transcript>: The two minutes? Is that how that works.

01:19:53
<transcript>: Yeah.

01:20:35
<transcript>: Game over makes sense.

01:20:44
<transcript>: Okay.

01:20:51
<transcript>: Oh, it's interesting. I would have never guessed this. So I'm glad you're here.

01:21:14
<transcript>: So if we want to restart the game, we would transition from game over to active.

01:21:17
<transcript>: And we would do that.

01:21:17
<transcript>: just

01:21:19
<transcript>: Just like that.

01:21:24
<transcript>: Is it like a delay or something I need to put in there or I guess it would just.

01:21:28
<transcript>: Yeah gotcha.

01:21:37
<transcript>: But then I guess. Yeah. So how is that triggered? So a couple questions, the timer. We didn't configure any kind of time on that.

01:21:37
<transcript>: is the invoic

01:21:40
<transcript>: Is the invoicious so it just returns.

01:21:40
<transcript>: like

01:21:42
<transcript>: Like a promise that resolves.

01:21:55
<transcript>: Music Yeah.

01:22:00
<transcript>: Right.

01:22:00
<transcript>: yep

01:22:06
<transcript>: Yep. So I just have a promise that resolves after a timeout, like 2 seconds.

01:22:26
<transcript>: Or whatever. Two minutes, I guess. And that's the idea. But then this game over to start over, so that so. Okay. So when I emit the start over event, these are all events, and I have to admit them from the client. So I admit this one. When they click the start game button, it goes active. When they click the answer button, I emit that. And I guess on this one that.

01:22:26
<transcript>: invoke

01:22:34
<transcript>: Invoke. It needs to have, like, there's a payload associated. It needs to know what they chose. So these events can have, like, a payload on them, I guess.

01:22:38
<transcript>: Perfect, but that's not safe. I for model here.

01:22:43
<transcript>: Okay.

01:22:54
<transcript>: So then from here, what would my workflow be? I export.

01:23:00
<transcript>: Yeah? Oh, no worries.

01:23:08
<transcript>: This is dude things that don't scale right? Like get on Twitch streams to get people to sign up.

01:23:10
<transcript>: Okay.

01:23:26
<transcript>: Yeah.

01:23:29
<transcript>: Satan.

01:23:34
<transcript>: No, I didn't actually.

01:23:36
<transcript>: It's right here.

01:23:36
<transcript>: okay

01:23:38
<transcript>: Okay, Clipboard, got it.

01:23:40
<transcript>: And then go back here.

01:23:54
<transcript>: Okay.

01:23:58
<transcript>: Is it? Yeah. That's. I don't know what that's from. It looks like my game.

01:24:02
<transcript>: Kind of like I did something here. Okay.

01:24:02
<transcript>: so

01:24:05
<transcript>: So there I pasted all that.

01:24:09
<transcript>: Visualize. Right here.

01:24:12
<transcript>: Oh, cool.

01:24:34
theruggedbear: this is nuts. time to dump redux !

01:24:45
<transcript>: Like right here with.

01:24:49
<transcript>: No worries.

01:24:53
<transcript>: Okay.

01:25:28
<transcript>: Yeah.

01:25:31
<transcript>: It's like this, right.

01:25:34
<transcript>: And then.

01:25:34
<transcript>: what am i doing

01:25:38
<transcript>: What am I doing? I guess I'm just doing a set timeout.

01:25:38
<transcript>: set

01:25:40
<transcript>: Set timeout.

01:25:42
<transcript>: If I can do any of this by.

01:25:46
<transcript>: And it would be like.

01:25:50
<transcript>: 60 times.

01:25:50
<transcript>: one

01:25:53
<transcript>: 1000 times two minutes.

01:25:53
<transcript>: we'll say

01:25:56
<transcript>: We'll say they get that right. And then.

01:25:56
<transcript>: and then

01:25:58
<transcript>: And then we're just gonna do resolve.

01:25:58
<transcript>: like so

01:26:00
<transcript>: Like so.

01:26:06
<transcript>: Needs something. Can I pass.

01:26:18
<transcript>: Okay. I'm just gonna say result.

01:26:18
<transcript>: okay

01:26:20
<transcript>: Okay.

01:26:25
<transcript>: Yeah.

01:26:30
<transcript>: Yeah. What do we call it? Target? Where was that? I think. Do we just.

01:26:30
<transcript>: check answer

01:26:32
<transcript>: Check answer right here.

01:26:36
<transcript>: So it would be like that. It's the key.

01:26:38
<transcript>: Okay.

01:27:02
<transcript>: I mean actually calling the API.

01:27:28
<transcript>: It does. I guess as long as I have that on the context. Like as long as I have the result on the context. I can display the UI. However, I don't think I need it in the in the same machine. Yeah.

01:27:33
<transcript>: Oh Yeah.

01:27:35
<transcript>: Return new promise? Yeah.

01:27:42
<transcript>: Okay.

01:27:50
<transcript>: So in this case, we're not doing a timeout. It would just be like, resolve.

01:27:52
<transcript>: I don't know.

01:27:52
<transcript>: it's not gonna be a

01:27:54
<transcript>: It's not gonna be a string, but.

01:27:59
<transcript>: Yep.

01:27:59
<transcript>: okay

01:28:01
<transcript>: Okay.

01:28:18
<transcript>: Start game.

01:28:23
<transcript>: We're do, I see.

01:28:28
<transcript>: I'm so down I don't see it.

01:28:28
<transcript>: let's start

01:28:29
<transcript>: Let's start.

01:28:31
<transcript>: The blue, Oh.

01:28:31
<transcript>: it is

01:28:33
<transcript>: It is.

01:28:39
<transcript>: Yep.

01:28:42
<transcript>: So click answer.

01:28:53
<transcript>: So it did the check answer invoke do I need to resolve something.

01:28:53
<transcript>: other than that

01:28:55
<transcript>: Other than that string.

01:29:08
<transcript>: Of this.

01:29:11
<transcript>: Yeah.

01:29:15
<transcript>: Game.

01:29:15
<transcript>: sure

01:29:16
<transcript>: Sure.

01:29:20
<transcript>: This. This right here.

01:29:20
<transcript>: okay

01:29:25
<transcript>: Okay, I'll send you that and pay. Is there chatting? Ping I don't even know.

01:29:27
<transcript>: Where you.

01:29:32
<transcript>: 're Work, Theo and Team. There you go.

01:29:37
<transcript>: Yeah. No, it's been fantastic.

01:29:37
<transcript>: i'm a fan

01:29:38
<transcript>: I'm a fan.

01:29:41
<transcript>: A fan of X state I'm a fan of Ping.

01:29:43
gusfringiscool: hey adam

01:29:48
gusfringiscool: what r u building?

01:29:53
<transcript>: Right here.

01:29:53
<transcript>: and then takes

01:29:55
<transcript>: And then takes me to showing answer.

01:29:55
<transcript>: yeah

01:29:56
<transcript>: Yeah.

01:29:56
<transcript>: cool

01:29:58
<transcript>: Cool.

01:30:11
<transcript>: Oh, I see. So that actually we actually wired that up with real stuff. So it should actually move to game over at some point here. Yeah.

01:30:18
<transcript>: I also could have made it smaller for shorter, I guess.

01:30:21
<transcript>: Okay. So then ultimately.

01:30:23
<transcript>: I can test.

01:30:23
<transcript>: so i kind of

01:30:30
<transcript>: So I kind of stub this out with config here when I when I move this over to react, will I also use this with config.

01:30:53
<transcript>: Okay. Perfect. I was gonna say it would need to it would need to have access to the mutations in TrpC. So I think.

01:30:56
<transcript>: I would need to do it in the component itself.

01:30:56
<transcript>: so that

01:31:01
<transcript>: So that I have like these these promises. This check answer needs to make a TrpC mutation.

01:31:06
<transcript>: Okay.

01:31:09
<transcript>: Go ahead.

01:31:15
theruggedbear: eyy game over !

01:31:18
<transcript>: Right.

01:31:29
<transcript>: Yeah. No. I'm impressed that any of this works. I don't know how you do. I did this.

01:31:49
<transcript>: No. Okay. So. So I would just drag this thing over like it is, but I would use I would create the machine. I think I've seen this. I've done this before. I would create the Consta game machine. And then I would just use machine. Use the use machine hook in xDate react. And then I can pass that config object to wire up these commands.

01:31:51
<transcript>: These? What are these? Calls.

01:31:55
<transcript>: Services.

01:31:57
<transcript>: Yeah.

01:32:00
<transcript>: Okay.

01:32:15
<transcript>: Right.

01:32:19
<transcript>: Okay.

01:32:24
<transcript>: So.

01:32:24
<transcript>: the other thing i was saying

01:32:28
<transcript>: The other thing I was saying, if you what time is that? Do you have a few more minutes.

01:32:43
<transcript>: So we've talked about some other kind of like maybe different styles of the game. Or maybe we just end up going with a different direction. But right now this is like a global timer. I'm wondering if I wanted to do.

01:32:43
<transcript>: timers

01:32:51
<transcript>: Timers per round. We talked about doing that like instead of having a global timer, it's like each question you only have 10 seconds to answer.

01:32:51
<transcript>: i'm not sure how

01:33:05
<transcript>: I'm not sure how we do the instate for that one, but then we've also talked about like a timer that gets expanded as you get correct answers and you get more time. If you get wrong answers, you lose time. And it's just one timer when the timer hits zero.

01:33:10
<transcript>: You know the game's over, but you could ultimately keep going indefinitely. Does that make sense.

01:33:24
<transcript>: Line 44.

01:33:25
<transcript>: Yep.

01:33:37
<transcript>: Oh, it could be the name of a service.

01:33:40
<transcript>: Oh.

01:33:48
<transcript>: It is hard.

01:33:57
<transcript>: Yep.

01:34:02
<transcript>: Okay. And then I could have some delay.

01:34:10
<transcript>: Yeah.

01:34:36
<transcript>: And it could be from the context where I could be setting every time they make a guess. So every time they submit their answer, we get back the next round on that payload.

01:34:36
<transcript>: i could have

01:34:40
<transcript>: I could have this dynamic timer that's, like their new expiration.

01:34:40
<transcript>: and

01:34:44
<transcript>: And I could just put that on context. And then from here, this delay gets rerun.

01:34:44
<transcript>: dynamically

01:34:47
<transcript>: Dynamically. That's super cool. Okay.

01:34:53
<transcript>: Yeah. I don't know how it's taking me this long to get on to the state machine thing. I just like.

01:34:53
<transcript>: the equivalent

01:35:10
<transcript>: The equivalent of what I would be doing here and use effects and all this sort of disparate stuff in my react component. It would just be a nightmare. I mean, I eventually hit a point where with the timeouts and stuff, it was just like, it's time. It's time for safe machine. I know it when I see it.

01:35:10
<transcript>: i haven't

01:35:13
<transcript>: I haven't done a lot of it, but.

01:35:48
<transcript>: Yeah, I will say I did get a little confused. Where is it? Is it on the on the docks.

01:35:48
<transcript>: i've said

01:35:50
<transcript>: I've said this before.

01:35:50
<transcript>: i got

01:35:54
<transcript>: I got a little confused when there's there's guides, tutorials.

01:35:54
<transcript>: recipes

01:35:56
<transcript>: Recipes, patterns, and examples.

01:35:56
<transcript>: my brain those

01:35:58
<transcript>: My brain. Those are all the same things.

01:36:10
<transcript>: I know they're not like, I know. Technically, there's probably a difference in all those things. But when I read it the first time, it's like, I don't know where I'm going. But Docs, are hard. And I told you, I'd never written Docs, because they're hard.

01:36:20
<transcript>: Very cool. It just keeps getting better. That's the great thing about all this stuff. This keeps getting better. David, thank you so much.

01:36:24
<transcript>: Thank you. Oh, yeah. This weird view.

01:36:28
<transcript>: I really appreciate you taking the time.

01:36:34
<transcript>: You still do the stream thing, I guess people just find you on Twitter. You're busy with Stately right now.

01:36:42
<transcript>: Yeah.

01:36:45
<transcript>: I've watched some of it.

01:36:58
<transcript>: Yeah, I know how.

01:36:58
<transcript>: i know how

01:37:00
<transcript>: I know how that stuff goes.

01:37:00
<transcript>: i start

01:37:06
<transcript>: I start a lot of content projects or things that I'm into, and then you just have to take a break. It happens.

01:37:11
<transcript>: Well, David, thank you again so much. It's been great to meet you. Facetoface.

01:37:11
<transcript>: and this

01:37:21
<transcript>: And this was super helpful. You saved me. I don't know. A week. Probably just. I look it on my shoulder there and really excited to see all the new stuff that's coming. But this is really great.

01:37:29
<transcript>: Yeah, we'll do. I'll just put X state in the title. We joke that if I put that I used to sort of pop up, Yeah.

01:37:29
<transcript>: i love it

01:37:32
<transcript>: I love it. Alright. Thanks, David.

01:37:34
<transcript>: See ya.

01:37:39
<transcript>: Alright.

01:37:39
<transcript>: i want to apologize

01:37:43
<transcript>: I want to apologize. I didn't look at chat a single time.

01:37:46
<transcript>: Not one single time, did I.

01:37:48
<transcript>: Am I on the right.

01:37:48
<transcript>: i don't know is he still

01:37:51
<transcript>: I don't know. Is he still here? No, he's not here. Okay.

01:37:53
delvoid: That was good :D

01:38:01
<transcript>: Thanks to the heart glasses. So what did I miss? What did I miss? In Chat. That was fantastic. I just learned things that would have taken me forever.

01:38:01
<transcript>: and

01:38:04
<transcript>: And I learned it very, very quickly.

01:38:07
delvoid: make a highlight and post to YT

01:38:10
<transcript>: I'm gonna try to catch up on chat. I don't know. Maybe you guys just decide not to talk to me since I wasn't talking back.

01:38:20
<transcript>: It's not prerecorded. Carefully wardday. Wardrobe coordinated. No, it was not prerecorded. That was all live.

01:38:20
<transcript>: and raw

01:38:23
<transcript>: And raw. Welcome to Chat Realm, PLG.

01:38:27
<transcript>: Well, thank you. It's a good looking stream. I appreciate that.

01:38:31
vim_cerf: we were all just in awe of the state machines

01:38:31
<transcript>: Okay. Jay's. Here.

01:38:31
<transcript>: day

01:38:32
<transcript>: Day.

01:38:32
<transcript>: jj

01:38:36
silverdezign: Hello hello

01:38:40
<transcript>: Jjj Station. And I hope he's still here. I don't know. That was probably a long time ago. Welcome to Chat Away, XD.

01:38:41
<transcript>: xdad

01:38:42
<transcript>: Xdad.

01:38:46
<transcript>: Yes, IJ you probably were very confused. We had David Kay coming.

01:38:46
<transcript>: because

01:38:48
<transcript>: Because he.

01:38:48
<transcript>: made x

01:38:59
<transcript>: Made X state, and we decided we need to extadate to this. And we were very right. We do. We did need X States. I need XA for every single thing I build here. Pins, force.

01:39:04
<transcript>: Earl George, welcome to Chat. What's going on.

01:39:09
<transcript>: The Beaver with the salt is a real AWS service. That's no joke.

01:39:09
<transcript>: thank you

01:39:10
<transcript>: Thank you.

01:39:14
<transcript>: Oh, well, that is like, oh, the Beaver.

01:39:14
<transcript>: what

01:39:18
<transcript>: What am I talking about? Welcome to Chat. Must kill. Noobs.

01:39:18
<transcript>: you love that hair

01:39:26
<transcript>: You love that hair? Was it my real hair? Was it the fake hair? Oh, thank you so much for the subscription. I'm just. I'm catching up, people. This is just me. Replaying the last 20 minutes.

01:39:30
<transcript>: Thank you for the submuskeill. Noobs.

01:39:39
<transcript>: Yeah. It was nuts, right? No, Redux. Don't use Redux. I don't know. I feel like I can say that because Dan said it, didn't he.

01:39:39
<transcript>: probably shouldn't

01:39:41
<transcript>: Probably shouldn't use Redux.

01:39:44
mustkillnoobsss: you can call me Joe

01:39:51
<transcript>: Guffering. Hey, what's going on? We're building. Aw, guess it's an AWS guessing game. I think there's a command for it. Aw, guess you can read more.

01:39:58
theruggedbear: !awguess

01:39:58
fossabot: awguess is a guessing game where you're given an AWS service icon and you have to choose the correct service! https://github.com/adamelmore/awguess

01:39:59
<transcript>: Does it make a highlight and post to YouTube? Yeah. Maybe we will. Maybe that'll go on YouTube. Maybe so. Alright.

01:40:03
<transcript>: Yeah, State machines are cool. How about that.

01:40:03
<transcript>: i'm so excited

01:40:10
<transcript>: I'm so excited about never doing all the nonsense I normally do in a react component to manage my state.

01:40:10
<transcript>: thank you for

01:40:12
mustkillnoobsss: easier than my nickname hahah

01:40:15
<transcript>: Thank you for the follows. Symphia. And to teal. An assault. Trinity.

01:40:18
<transcript>: And no to alike and homer.

01:40:22
<transcript>: In Kaza.

01:40:23
<transcript>: Okay.

01:40:23
<transcript>: i've caught up

01:40:25
<transcript>: I've caught up on notifications.

01:40:33
<transcript>: I did some work yesterday on my guest overlay stuff wearing just hit buttons to bring people on.

01:40:33
<transcript>: they like pop

01:40:42
<transcript>: They like, pop up there, and it like, has their Ping ID. So it just like, swaps it all out. So now I'm gonna have a button for J and a button for DAX. I'm gonna press the button, pull them up on stage.

01:40:51
<transcript>: It'll be so great. Well, for me. I don't know about DAC. And Jack can't do it right now. He's pumping the weights. He's doing stuff.

01:40:51
<transcript>: anchor you

01:41:00
<transcript>: Anchor you Joe. I can call you Joe Muskel. Noob sorry I can kill you new your name has kill in it so I just I subbed call with Gil.

01:41:03
<transcript>: I'll call you Joe. Let's see if I can remember that.

01:41:06
<transcript>: Silver Design Hello, Hello.

01:41:22
<transcript>: I guess. Let's do it now let's put it in react. Let's actually like, drop the machine in the app, make it all work. I'm so pumped.

01:41:22
<transcript>: try to sign if i

01:41:24
<transcript>: Try to sign if I should break first.

01:41:24
<transcript>: no

01:41:30
<transcript>: No, I don't need a break. I was gonna have a call this morning and make got canceled. I got moved to tomorrow.

01:41:35
<transcript>: Let me just make sure, though, that my calendar is clear.

01:41:40
<transcript>: Yeah, I've got time. All right we're gonna We're gonna drop this state machine.

01:41:45
<transcript>: Into our React app. I'm very excited.

01:41:45
<transcript>: i'm so

01:41:47
<transcript>: I'm so excited about it.

01:41:50
<transcript>: So let's just copy this whole thing.

01:41:50
<transcript>: and let's open

01:41:51
theruggedbear: 24h stream until tomorrow's call ? Kappa

01:41:51
<transcript>: And let's open up.

01:41:51
<transcript>: alacrity

01:41:53
<transcript>: Alacrity.

01:41:57
<transcript>: Oh no available window.

01:41:59
<transcript>: That's that one.

01:42:04
<transcript>: There we go. We're gonna listen to music.

01:42:04
<transcript>: it's gonna be

01:42:07
<transcript>: It's gonna be a good time. Thank you all for coming.

01:42:11
<transcript>: Shuffle, that.

01:42:16
<transcript>: All right, we got our visualizer. I don't need this up anymore.

01:42:18
<transcript>: Okay.

01:42:21
<transcript>: Let's swap these.

01:42:23
<transcript>: Let's.

01:42:23
<transcript>: do like that

01:42:24
<transcript>: Do like that.

01:42:32
<transcript>: Yarn Dev. Is it running? Yeah, let's just go ahead and need to be running because.

01:42:41
<transcript>: It's not going to work until we do some stuff. So this is our context. Basically the game state. I think.

01:42:43
<transcript>: State won't be on it.

01:42:47
<transcript>: Game round result. String. Okay. So we made some changes.

01:42:47
<transcript>: we're gonna

01:42:47
sikmofo: yo!

01:42:50
<transcript>: We're gonna have to look at the game router.

01:42:55
krowzar: how is your switch to vim going?

01:42:55
<transcript>: So now.

01:42:56
sikmofo: man the split is weird :D

01:43:03
<transcript>: There's no expat. There's no expires on the round itself. In fact, let's go to the schema. Right.

01:43:11
<transcript>: Okay user game. Okay. So now there's an expires on the game.

01:43:11
<transcript>: on

01:43:14
<transcript>: On the game right.

01:43:30
<transcript>: Because we're gonna I think I want to do the infinite timer thing. I think I want to say, like, you get one right? You extend your timer, you get it wrong, you lose time. So every time you answer, you're either adding to or subtracting from your expire time.

01:43:30
<transcript>: that just sounds

01:43:33
<transcript>: That just sounds fun. I think that's.

01:43:33
<transcript>: more fun

01:43:37
<transcript>: More fun if I'm gonna have one game mode, I think that's the one I want to have.

01:43:44
<transcript>: Sixmopho. Oh, you've got it, Dick. Is it so good.

01:43:44
<transcript>: this is

01:43:53
<transcript>: This is the split is weird. I've heard there's a learning curve. I hope you don't get discouraged or you find someone else in Iceland. And don't don't try to ship it out. Iceland. Just don't.

01:44:06
<transcript>: Crows are. My switch to them is going fantastic. I love it. I love it. I'm a neovehummer for life. We'll see if DAX pulls me into the arch Linux world.

01:44:12
<transcript>: Rugged Bear 24 hours stream until tomorrow's. Call probably not. Probably not gonna do that.

01:44:12
<transcript>: how do people

01:44:17
theruggedbear: invisible eyes ?

01:44:21
<transcript>: How do people do the 24 hours stream thing? I just. I don't even know where to begin. How would you do? You just like, pop it while you sleep. I'm not gonna not sleep.

01:44:21
<transcript>: it would be awful

01:44:23
<transcript>: It would be awful.

01:44:29
<transcript>: Invisible eyes. Oh, Geez, it's a minion glasses. Not liking the Chroma key.

01:44:32
cekirgehacker: arch + lunarvim = pure satisfaction

01:44:35
<transcript>: All right.

01:44:39
<transcript>: I'm gonna move expires.

01:44:40
<transcript>: Up here.

01:44:40
<transcript>: so the game

01:44:43
<transcript>: So the game hasn't expired.

01:44:46
<transcript>: Around.

01:44:48
<transcript>: Does not.

01:44:51
<transcript>: Do I want to.

01:44:54
daglee: The best is streamers with 500 viewers when awake and 2000 viewers while sleeping.

01:45:05
<transcript>: I started thinking on the round. Should we store the choice that they made? I think we should, like in the database, have a full history of the game, right? It feels better to not be storing what they chose.

01:45:09
<transcript>: So let's add I want to do that to choice.

01:45:11
<transcript>: Is a string.

01:45:11
<transcript>: guess i have

01:45:19
<transcript>: Guess I have to make it nullable. Now we'll just reset the database. We don't need to store anything in data. This is no leaderboard. None of it matters.

01:45:29
<transcript>: There's no leborg yet. There will be a leaderboard. Which time we got there yet. Okay, so we have a start.

01:45:35
<transcript>: We have a choice. I guess I should put the time that it ends.

01:45:38
<transcript>: Right like.

01:45:38
<transcript>: you start

01:45:43
<transcript>: You start the round and then you answered. You answer at.

01:45:47
<transcript>: We call that in.

01:45:49
<transcript>: 8th time.

01:45:49
<transcript>: and then i need

01:45:53
<transcript>: And then I need to make it optional. How do you make stuff optional.

01:45:56
<transcript>: Eb Tags.

01:46:01
<transcript>: You may know how to make Prisma fields optional.

01:46:04
<transcript>: I mentioned this is my first time using Prisma.

01:46:07
<transcript>: Prisma.

01:46:07
<transcript>: prism

01:46:07
theruggedbear: i am crying. i can't be serious with these minion glasses. check discord primeagenBan primeagenGer

01:46:08
<transcript>: Prisma.

01:46:11
<transcript>: Optional.

01:46:12
developmentrobot: just a question mark String?

01:46:15
<transcript>: Let's see.

01:46:18
<transcript>: Arch plus lunar vim equals pure satisfaction.

01:46:21
<transcript>: The best is streamers with 500 viewers.

01:46:21
<transcript>: win away

01:46:22
krowzar: @developmentrobot String?

01:46:24
<transcript>: Win away in 2000 viewers while.

01:46:27
<transcript>: People like to watch the sleep.

01:46:31
<transcript>: Check, discord.

01:46:36
<transcript>: What can't be serious with these mini glasses? Check discord. Okay, I gotta check this word. I'm gonna go fuzzy.

01:46:41
delvoid: ? at end of the type

01:46:45
<transcript>: Just because I don't know what's up on my discord. You know, there could be stuff that I don't want to be seen.

01:46:49
<transcript>: Yeah, that's tough.

01:46:49
<transcript>: that's a little

01:46:50
<transcript>: That's a little.

01:46:50
<transcript>: a little creepy

01:46:51
<transcript>: A little creepy.

01:46:56
adamdotdev: !discord

01:46:56
fossabot: Adam has a Discord server and he'd love to see you there: https://discord.gg/E92M2chd3e

01:46:57
<transcript>: In the discord a little plug. If you're not in the discord, Come Join the discord.

01:47:02
<transcript>: I need to start talking more in this course.

01:47:02
<transcript>: got lots of play

01:47:17
<transcript>: Got lots of playings, and I just want to hang out with you all. I'm not streaming as much, but I want to hang out with you all just as much. So I'd love to be able to interact on discord when I'm not streaming. I just have to make it a habit to actually talk on discord, and like, think of things I want to talk about to you all on discord.

01:47:17
<transcript>: just not much of

01:47:26
<transcript>: Just not much of a I don't know. Like I streamed most of my working hours on these days. And when I'm not in my desk, I'm not on discord. I don't do it on my phone. So.

01:47:26
<transcript>: i could

01:47:29
<transcript>: I could be part of the problem. Okay.

01:47:29
<transcript>: let's

01:47:31
<transcript>: Let's see.

01:47:37
daglee: I remember prime checking out discord while streaming, that was a bad idea.

01:47:40
<transcript>: Question Mark at the end of the time. Is that work? This isn't TypeScript, right? This is like or is it I don't even know. What is this schema file.

01:47:43
<transcript>: Prisma Optional fields.

01:47:45
<transcript>: Optional.

01:47:50
<transcript>: Optional type modifiers.

01:47:52
theruggedbear: yep, `String?` makes it optional

01:47:52
<transcript>: So Oh.

01:47:52
<transcript>: you're right

01:47:57
<transcript>: You're right? Yeah, yeah. But it's after the is that we said Yeah.

01:47:57
<transcript>: string

01:47:59
<transcript>: String question Mark makes it optional.

01:47:59
<transcript>: at the end of

01:48:05
<transcript>: At the end of the type. You were correct. You said that. And I was like, Nah, this wouldn't work right.

01:48:05
<transcript>: can't do that

01:48:12
<transcript>: Can't do that. Not TypeScript. But you said the right thing, which was at the end of the type. Good call choice is a string.

01:48:12
<transcript>: date time

01:48:14
<transcript>: Date, time.

01:48:17
<transcript>: These don't they're not there at the beginning, right.

01:48:26
<transcript>: Don't get added until you actually answer. So we're gonna store those on the round. We have expires on the game. We have score.

01:48:26
<transcript>: each of

01:48:29
<transcript>: Each of the rounds has a moment.

01:48:29
<transcript>: you

01:48:39
<transcript>: You chose something and what you chose. So I think that's it. I think that's all the data we need to store, to be able to recreate like a game if we wanted to from the database. Right.

01:48:44
<transcript>: I believe so.

01:48:48
<transcript>: Let's put a start time on the game.

01:48:56
<transcript>: Like a format. I think there's like a format.

01:49:02
<transcript>: On prison schemas. I think it formats it or something. Maybe.

01:49:04
<transcript>: Okay.

01:49:07
<transcript>: You have an answer.

01:49:09
<transcript>: Game ID.

01:49:13
<transcript>: Choice that they chose. Okay.

01:49:17
<transcript>: What I need to do now I need to do.

01:49:24
<transcript>: That I need to do like.

01:49:24
<transcript>: this

01:49:25
<transcript>: This.

01:49:28
<transcript>: Let's see that's my.

01:49:40
<transcript>: Last horizontal I want inverticle split.

01:49:45
<transcript>: Okay. So if I want vertical.

01:49:49
<transcript>: That. There we go, we're gonna do.

01:49:49
<transcript>: well first i

01:49:54
<transcript>: Well, first I got to put in, yeah, the directory. And then we're gonna do.

01:49:57
<transcript>: Mpx Prisma.

01:49:57
<transcript>: db

01:49:59
<transcript>: Db push.

01:50:05
<transcript>: Does that sound correct? Thank you for the following stickiness.

01:50:11
<transcript>: We found changes. It cannot be executed. To apply this change, we need to reset the database. You want to continue? Yes.

01:50:14
<transcript>: Oh.

01:50:16
thickiness: :)

01:50:17
<transcript>: Could not clean up.

01:50:20
<transcript>: What.

01:50:24
<transcript>: All data will be lost. Error.

01:50:29
<transcript>: Do I need to do DB. What is the create.

01:50:29
<transcript>: generate

01:50:30
<transcript>: Generate.

01:50:30
<transcript>: gener

01:50:34
<transcript>: Generate MPX Prism to generate that's like for the schema. Right.

01:50:39
<transcript>: Mpx Prisma DB Plush Can we can we do that.

01:50:44
krowzar: that's for the client I think

01:50:45
<transcript>: I'm okay with resetting it. What's the problem.

01:50:45
<transcript>: fallback

01:50:53
theruggedbear: generate is generating your ts types

01:50:55
<transcript>: Fallback method for database resets failed meaning migrate could not clean up the database entirely. Original error direct the is disabled. Oh is this a planet scale thing I need to enable.

01:50:58
<transcript>: Maybe.

01:51:04
<transcript>: Perhaps.

01:51:08
<transcript>: Let's see, plan it scale.

01:51:10
<transcript>: Prisma.

01:51:18
<transcript>: Direct DDL is disabled. I'm really excited to build this in some other stacks.

01:51:18
<transcript>: get honest

01:51:19
<transcript>: Get honest.

01:51:25
<transcript>: Clean at scale.

01:51:27
<transcript>: Guys or an answer to this one.

01:51:37
<transcript>: I'm okay with wiping out the whole database, you know.

01:51:47
<transcript>: Yeah. Generate generates your TS types. Welcome to Chat stickiness.

01:51:54
<transcript>: But DB pushes failing update prison with the plant scale database.

01:51:58
<transcript>: What's this about.

01:52:03
<transcript>: Oh, it's because it's pretty production.

01:52:05
<transcript>: Let's fix that.

01:52:10
<transcript>: Database for device developers. Sign in.

01:52:17
<transcript>: What's this App Sync test? Oh, that's when we did the VTL stuff, right.

01:52:17
<transcript>: so

01:52:19
<transcript>: So this one.

01:52:19
<transcript>: send table

01:52:24
<transcript>: Send tables. One branch. I'm just kind of just delete. It kind of start over.

01:52:24
<transcript>: setting

01:52:25
<transcript>: Settings.

01:52:31
<transcript>: Delete.

01:52:40
<transcript>: It's production? Where do I say branches? Is it here.

01:52:49
<transcript>: How do I make updates.

01:52:54
<transcript>: I guess do I need to do this on a separate brand.

01:52:56
<transcript>: Maybe so.

01:53:03
<transcript>: Let's make a new branch.

01:53:03
<transcript>: we'll call

01:53:05
<transcript>: We'll call it.

01:53:08
<transcript>: Excuse me? X state.

01:53:10
<transcript>: Free branch.

01:53:18
<transcript>: Okay. I guess this is the benefit of this workflow. We should do it and not just wipe out my whole prod database. I guess.

01:53:18
<transcript>: but then when i

01:53:20
<transcript>: But then when I want to go to prod.

01:53:27
<transcript>: When I want to go to Prod, I'm gonna want to just wipe out that original because none of that data matters.

01:53:31
<transcript>: Oh, I can promote so I can promote this branch to production. Cool. Okay.

01:53:35
<transcript>: Depending on how long this takes, I feel good about this.

01:53:40
<transcript>: And then I'll need to.

01:53:43
<transcript>: Connect to that branch here.

01:53:50
<transcript>: Next state.

01:53:53
<transcript>: Okay. Is it ready.

01:53:53
<transcript>: created

01:53:54
theruggedbear: i wish planetscale had postgres :(

01:53:58
<transcript>: Created a ploy request. Oh, so I can deploy two main. Okay.

01:54:00
<transcript>: Okay.

01:54:04
<transcript>: Now can I do a DB push.

01:54:09
<transcript>: It's not a production branch. Yes.

01:54:11
<transcript>: Cool.

01:54:13
<transcript>: We did it.

01:54:13
<transcript>: all right

01:54:18
<transcript>: All right, let's go back to the game router. This is the game router. Yes.

01:54:22
<transcript>: So create round is going to be a little different now.

01:54:25
<transcript>: Thank you for the follow.

01:54:28
<transcript>: Oswald.

01:54:28
<transcript>: peace

01:54:30
<transcript>: Peace, so much.

01:54:35
<transcript>: Yeah, I wish please go ahead and Postgres Neon right.

01:54:35
<transcript>: i need to sign

01:54:42
<transcript>: I need to sign up. Did not sign up for the neon neon Postgres. I need to sign up for this so I'm ready to play with it. It's been.

01:54:42
<transcript>: did i already did

01:54:44
<transcript>: Did I already did this.

01:54:44
<transcript>: i

01:54:48
<transcript>: I don't know. Maybe I did gonna request I'm gonna do it again.

01:54:54
<transcript>: Success. I can't believe I didn't do that earlier if I didn't.

01:54:54
<transcript>: should have done that earlier

01:54:56
<transcript>: Should have done that earlier. Whatever.

01:55:01
<transcript>: So I'm being honest. It'll be a while, probably before I play with it. So.

01:55:02
<transcript>: Okay.

01:55:02
<transcript>: expire

01:55:07
<transcript>: Expires. There's no longer an Expires on the round.

01:55:07
<transcript>: but

01:55:09
<transcript>: But there is.

01:55:11
<transcript>: Let's see.

01:55:11
<transcript>: there

01:55:13
<transcript>: There is one.

01:55:19
<transcript>: On create game. So here's a new game.

01:55:19
<transcript>: there's

01:55:20
<transcript>: There's our game.

01:55:26
<transcript>: And then we're gonna have a start and expires.

01:55:36
<transcript>: No, there's not an. Yeah, there is an expires. So by default. Okay, we're gonna start it off with a 32nd timer. You're gonna have a 32nd timer every time.

01:55:36
<transcript>: you

01:55:37
<transcript>: You.

01:55:47
<transcript>: Get it right answer. You bump that up 5 seconds. Every time you get a wrong answer, you drop it 5 seconds. Does that sound good to start stuff like that.

01:55:53
<transcript>: So expires get seconds plus.

01:55:58
<transcript>: What, 60.

01:55:58
<transcript>: times

01:56:00
<transcript>: Times.

01:56:02
<transcript>: Right now get seconds.

01:56:08
<transcript>: So just need to add the number of seconds I want to add so 30, right.

01:56:12
<transcript>: So that's 30 seconds later.

01:56:15
<transcript>: The start expires and then.

01:56:15
<transcript>: here we

01:56:19
<transcript>: Here. We need to say, start.

01:56:20
<transcript>: Expires.

01:56:20
<transcript>: right

01:56:22
<transcript>: Right.

01:56:24
<transcript>: Start.

01:56:29
<transcript>: I just put a date on like that expires and start.

01:56:34
<transcript>: This.

01:56:40
<transcript>: Typescript round and plus we have to type in a because it does not have type annotation as reference or.

01:56:43
<transcript>: What, show, what.

01:56:48
<transcript>: Okay. What was this one start.

01:56:48
<transcript>: let's

01:56:51
<transcript>: Let's try LSP LSB.

01:56:51
<transcript>: restart

01:56:53
<transcript>: Restart.

01:57:02
<transcript>: Okay. I mean, we just did this. We just set this schema.

01:57:05
<transcript>: So.

01:57:10
<transcript>: Around now has end and choice.

01:57:10
<transcript>: and get

01:57:11
<transcript>: And get.

01:57:11
<transcript>: start

01:57:16
<transcript>: Start and expires that are both date times. Cool, cool, cool.

01:57:20
<transcript>: Starts at zero.

01:57:28
<transcript>: The name? I don't know. Does a game need a name? I feel like I'm just putting in.

01:57:28
<transcript>: a

01:57:31
<transcript>: A test string in there for now.

01:57:31
<transcript>: kind of feels weird

01:57:32
<transcript>: Kind of feels weird.

01:57:35
<transcript>: Slightly strange.

01:57:40
<transcript>: Okay. I'm going to take quick break.

01:57:45
<transcript>: Fill up my water. Get a lower bar.

01:57:45
<transcript>: the whole thing

01:57:51
<transcript>: The whole thing. I'll be right back. I'm very excited. We're dropping in the state machine on today's stream. And I'm popped.

01:57:51
<transcript>: back

01:57:53
<transcript>: Back.

02:09:38
<transcript>: How are we doing.

02:09:38
<transcript>: how we doing

02:09:42
<transcript>: How we doing? I'm gonna I'm very excited about the state machine stuff.

02:09:50
<transcript>: I want to get back to it. I feel like there's something to ask? Oh, yeah? If anybody knows anybody.

02:09:57
daglee: Is that chocolate?

02:09:58
<transcript>: That knows somebody if you're somehow connected to someone that works at Snapchat, Snap, Snap, Ink, whatever.

02:09:58
<transcript>: the company

02:10:01
<transcript>: The company that makes the Snap camera.

02:10:01
<transcript>: dagli

02:10:21
<transcript>: Daglie. It's a chocolate chip cookie dough Lara bar. If anyone knows anybody, I would love to be connected with someone. It's nap. I just need a connection. I have no connections to Snap developers, and I need the Snap camera to Sport 1080p on Mac so badly, I would pay money. I would pay them and they don't care. They don't need my money. But I would.

02:10:21
<transcript>: be i

02:10:30
<transcript>: Be I'd do a lot of things I would contribute. There's some way I could do the development work. I just need Snack Camera on Mac to have 1080p output.

02:10:30
<transcript>: none of this seven

02:10:34
<transcript>: None of this 720p nonsense. Thank you for the follow. Fabio.

02:10:36
<transcript>: Alright. Let's get back to it.

02:10:42
<transcript>: So if you know somebody if anybody knows somebody that knows somebody that works a snap.

02:10:49
<transcript>: Actually used to know somebody.

02:10:52
<transcript>: But.

02:10:54
<transcript>: I was laid back.

02:10:54
<transcript>: my sat

02:10:58
<transcript>: My Satusdays. And I don't I don't know who it was.

02:11:03
<transcript>: Okay.

02:11:06
<transcript>: So we sat an expire.

02:11:08
<transcript>: Fires.

02:11:08
<transcript>: for thirty

02:11:11
<transcript>: For 30 seconds from now on the game. When you start the game.

02:11:17
<transcript>: We create a new round.

02:11:24
<transcript>: Great round does what.

02:11:29
<transcript>: There's no longer a start. There's no longer expires.

02:11:31
<transcript>: So.

02:11:39
<transcript>: This is the start.

02:11:47
<transcript>: And then end in choice will come when you answer right.

02:11:51
<transcript>: Okay.

02:11:55
<transcript>: So new game.

02:11:57
<transcript>: Around.

02:12:01
<transcript>: Okay.

02:12:05
<transcript>: This is kind of dumb.

02:12:07
<transcript>: Right. This is kind of dumb.

02:12:11
<transcript>: We just say.

02:12:13
<transcript>: Return.

02:12:17
<transcript>: Do you even need to say it's async.

02:12:21
<transcript>: I could just return the promise.

02:12:23
<transcript>: Right.

02:12:25
<transcript>: Promise? Yeah.

02:12:29
<transcript>: And that's a promise.

02:12:35
<transcript>: Okay.

02:12:35
<transcript>: mutation

02:12:38
<transcript>: Mutation answer here's where it changes.

02:12:38
<transcript>: so

02:12:40
<transcript>: So now.

02:12:43
<transcript>: I'm the round.

02:12:47
<transcript>: We have the start time.

02:12:51
<transcript>: We're gonna have the current is going to be.

02:12:55
<transcript>: End.

02:13:03
<transcript>: Because that's going to go on our actual.

02:13:03
<transcript>: round

02:13:04
<transcript>: Round right.

02:13:04
<transcript>: upd

02:13:07
<transcript>: Updating the round. Don't we do that somewhere.

02:13:07
<transcript>: birthday

02:13:09
<transcript>: Birthday of the game.

02:13:11
<transcript>: They also update the round right.

02:13:15
<transcript>: That's new to these changes.

02:13:15
<transcript>: so

02:13:18
<transcript>: So yank that.

02:13:26
<transcript>: I thank you for the follows. Swastik? Acharia. I'm sorry if I bought your name terribly.

02:13:26
<transcript>: generally

02:13:28
<transcript>: Generally do.

02:13:32
<transcript>: Round. And that's gonna be.

02:13:35
<transcript>: Round update.

02:13:37
<transcript>: Where ID.

02:13:39
<transcript>: Is round ID.

02:13:40
swastik_acharyya: no it was perfect 😂

02:13:41
<transcript>: We're gonna set.

02:13:45
swastik_acharyya: hello everyone

02:13:46
<transcript>: Let's see just delete all that we're gonna do.

02:13:48
<transcript>: End.

02:13:50
<transcript>: Wait.

02:13:50
<transcript>: choice

02:13:54
<transcript>: Choice and end right.

02:13:57
<transcript>: Type number.

02:13:57
<transcript>: is not

02:13:59
<transcript>: Is not.

02:14:06
<transcript>: Oh, we're already have the round up here. We did fat.

02:14:06
<transcript>: can you

02:14:08
<transcript>: Can you do like round update.

02:14:09
voltaryx: oh red highlights is cool idea for errors. i loved that

02:14:13
voltaryx: Hey btw

02:14:15
<transcript>: The other thing Prisma. Like if you have a no.

02:14:21
<transcript>: Do I need to. I don't need the result, right.

02:14:28
<transcript>: The Lea? Nope.

02:14:30
<transcript>: Like that.

02:14:38
<transcript>: Same type number is not assignable type string or date or no.

02:14:38
<transcript>: oh end is the

02:14:41
<transcript>: Oh, end is the date now, so we need to.

02:14:41
<transcript>: new

02:14:42
<transcript>: New date.

02:14:53
<transcript>: But even even this I need to let's see.

02:14:57
<transcript>: Expires is going to be game.

02:15:00
<transcript>: Expires right.

02:15:04
<transcript>: So we have to actually get the game.

02:15:04
<transcript>: does round

02:15:07
<transcript>: Does round have the game on it.

02:15:09
<transcript>: Game.

02:15:09
<transcript>: how do you get

02:15:11
<transcript>: How do you get like.

02:15:18
<transcript>: Is there way to like load? You know, I'm saying like load relationships.

02:15:18
<transcript>: load

02:15:20
<transcript>: Load Related entities.

02:15:24
<transcript>: I said, It perfect. Great. Welcome to Chess, plastic.

02:15:24
<transcript>: also

02:15:27
<transcript>: Also welcome to Chat. Voltaire.

02:15:33
<transcript>: Red Highlights is cool idea for errors. Cool thing, by the way Hello to you.

02:15:44
<transcript>: In Prisma. Can I load like a related entity on like if I have the round, can I load the game that's associated with it? It's on the schema.

02:15:50
<transcript>: Let's see.

02:15:53
<transcript>: Prisma.

02:16:00
theruggedbear: you mean by round id ?

02:16:01
<transcript>: Here we go.

02:16:03
<transcript>: Include.

02:16:12
voltaryx: Do you have any problem with tsserver with 2k+ line in insert mode?

02:16:39
<transcript>: Okay. So we include the game. Does that mean here we say round game. Yeah.

02:16:39
<transcript>: okay

02:16:40
<transcript>: Okay.

02:16:40
<transcript>: so that'll do the

02:16:42
<transcript>: So that'll do the join.

02:16:46
voltaryx: I couldnt fix the delay issue

02:16:46
<transcript>: Find unique.

02:16:46
<transcript>: vernacle

02:16:49
<transcript>: Vernacles and as it type any.

02:16:52
<transcript>: What.

02:17:02
<transcript>: I don't know what to think about that.

02:17:04
<transcript>: Let's keep moving though.

02:17:06
<transcript>: Start end.

02:17:06
<transcript>: and then

02:17:09
<transcript>: And then elapsed.

02:17:12
<transcript>: I'm not gonna get bonus points for getting it quickly.

02:17:12
<transcript>: we're just gonna say if you get it right

02:17:14
<transcript>: We're just gonna say, if you get it right, you extend the delay.

02:17:18
<transcript>: Get wrong.

02:17:23
<transcript>: You lose time, right. Thanks for the Follow Voltaire.

02:17:28
<transcript>: By round ID. Yeah, I think we figured it out rugged buried in me.

02:17:28
<transcript>: figured

02:17:30
<transcript>: Figured it out.

02:17:41
<transcript>: Do you have any problem with TS server with 2000 plus lines and insert mode couldn't fix the delay issue.

02:17:46
<transcript>: I don't know if I've had any files with 2000 lines in.

02:17:50
<transcript>: I'm not sure filter.

02:17:57
<transcript>: Okay. So that's the current expires time.

02:18:04
<transcript>: First we need to check if they answered after the expiry.

02:18:13
<transcript>: If.

02:18:13
<transcript>: in

02:18:14
<transcript>: In.

02:18:16
<transcript>: Is.

02:18:19
<transcript>: Greater than expires.

02:18:23
<transcript>: They're too late.

02:18:28
<transcript>: Assuming it isn't.

02:18:28
<transcript>: we'll hand

02:18:30
<transcript>: We'll handle this case on a map.

02:18:33
<transcript>: If it isn't.

02:18:45
<transcript>: Where to have this expired.

02:18:46
developmentrobot: Even plan on doing a stream where you try out different frontend frameworks, like Vue or Solid?

02:18:46
<transcript>: Flag.

02:18:55
<transcript>: So we don't need a lapse anymore. We don't care when they.

02:18:58
<transcript>: Do it right.

02:18:58
<transcript>: fire

02:19:01
<transcript>: Fired is just in the greater than.

02:19:06
<transcript>: Greater than.

02:19:06
<transcript>: exp

02:19:08
<transcript>: Expires.

02:19:09
dedadev: @developmentrobot what is solid

02:19:16
<transcript>: It's correct.

02:19:20
<transcript>: Well, I got rid of that error. Okay.

02:19:23
<transcript>: Pract if the round answer is equal to the choice.

02:19:26
<transcript>: Then we do score Delta.

02:19:27
theruggedbear: @developmentrobot a js framework

02:19:37
<transcript>: Correct and not expired is 1 second one point for correct answer. We're gonna do the whole streak thing later, but now we need to have constant expires Delta.

02:19:39
<transcript>: Equals.

02:19:50
<transcript>: Correct.

02:19:50
<transcript>: and

02:19:52
<transcript>: And not expired.

02:19:58
<transcript>: It's going to be plus 5 seconds.

02:20:00
<transcript>: Otherwise.

02:20:02
<transcript>: Plus.

02:20:04
<transcript>: Or minus.

02:20:07
<transcript>: 5 seconds.

02:20:07
<transcript>: is that too harsh

02:20:09
<transcript>: Is that too harsh if you get one wrong.

02:20:13
<transcript>: Not sure if that's too harsh we'll find out.

02:20:13
<transcript>: ever plan

02:20:19
<transcript>: Ever plan on doing a stream where you try different frontend frameworks like viewers solid yes developer mintro bot.

02:20:24
<transcript>: We're gonna be doing definitely some solid development on this stream.

02:20:28
adamdotdev: jj

02:20:28
<transcript>: Hopefully very soon.

02:20:31
<transcript>: There's some JS for you.

02:20:34
<transcript>: Okay.

02:20:34
<transcript>: so i

02:20:38
<transcript>: So I expires Delta. So then we're gonna say.

02:20:40
<transcript>: Updates around.

02:20:44
turki_9999999: @adamdotdev how do you study for AWS exam?

02:20:49
<transcript>: Okay. So we add choice and end to the round. That's good.

02:20:53
<transcript>: We're a round ID. Okay, and then we update the game.

02:20:56
<transcript>: We set the score. We increment it by score. Delta.

02:20:59
<transcript>: And then we set the.

02:20:59
<transcript>: expires

02:21:01
<transcript>: Expires. Which is a.

02:21:01
<transcript>: what

02:21:03
<transcript>: What now.

02:21:11
<transcript>: It's a string, date or Prisma date Timefield update operations input.

02:21:15
<transcript>: So basically, I want to add, let's do this. Prisma.

02:21:19
<transcript>: Add seconds to date.

02:21:23
<transcript>: This one I want to add.

02:21:35
<transcript>: Time to the expires. Right.

02:21:38
<transcript>: How do I do that.

02:21:44
<transcript>: And.

02:21:44
<transcript>: time

02:21:46
<transcript>: Time to date.

02:21:58
dedadev: can I see your Vim plugins list

02:21:58
<transcript>: Maybe we'll just do Prisma update.

02:22:02
<transcript>: Update Date time.

02:22:13
<transcript>: That's new date.

02:22:17
<transcript>: We want to do a date operation or something.

02:22:35
theruggedbear: !neovim

02:22:35
<transcript>: Updated data.

02:22:43
<transcript>: Updated at.

02:22:43
<transcript>: some moment

02:22:43
charkles09: @turki_9999999 There's a real good course on udemy for developpers. From Stephane Maarek

02:22:44
<transcript>: Some moment.

02:22:46
dedadev: !neovim

02:22:47
<transcript>: That's like that means something.

02:22:51
theruggedbear: @dedadev https://github.com/adamelmore/dotfiles

02:22:51
dedadev: !dotfiles

02:22:52
fossabot: Adam's dotfiles live here: https://github.com/adamelmore/dotfiles

02:22:53
swastik_acharyya: what fonts are you using ?

02:22:57
<transcript>: Now anyone know how to change.

02:23:00
<transcript>: I want to check.

02:23:02
<transcript>: A date.

02:23:05
<transcript>: In Prisma.

02:23:05
<transcript>: of date function

02:23:07
<transcript>: Of Date Functions. Here we go.

02:23:09
<transcript>: Here we go.

02:23:11
<transcript>: Maybe.

02:23:26
<transcript>: Former ISO. Okay, so last say that two ISO string new date to Isostring. I guess I could. That's what we could do. We just come up with you.

02:23:32
<transcript>: Well, no, because I don't know. Yeah, I do. I know it expires is, so I don't need to do all this. We'll just say.

02:23:34
<transcript>: Cons.

02:23:36
<transcript>: conspir

02:23:36
<transcript>: conspiracy

02:23:37
<transcript>: Conspiracy equals.

02:23:40
theruggedbear: !font

02:23:41
fossabot: Adam uses the Dracula theme and the Operator Mono font in VSCode.

02:23:57
<transcript>: Right.

02:23:57
<transcript>: yeah

02:23:57
dedadev: @dedadev they are not liste there

02:24:00
<transcript>: Yeah, round that game.

02:24:07
<transcript>: It expires. Here is.

02:24:12
<transcript>: Eight.

02:24:20
<transcript>: I want to extend.

02:24:25
<transcript>: I'm gonna add seconds.

02:24:30
<transcript>: Sets. Seconds. So I'll do.

02:24:30
<transcript>: expired

02:24:32
<transcript>: Expired equals.

02:24:40
<transcript>: Date.

02:24:48
<transcript>: Wait. I'm not returning around anywhere, am I.

02:25:02
<transcript>: Set. Seconds. Like this. Is this what I want to do.

02:25:06
<transcript>: Fires get second.

02:25:16
<transcript>: Plus expires Delta. Is that all accurate? I don't know. This feels weird. Every time I do math, date stuff. Date mass in JavaScript.

02:25:16
<transcript>: i just feel like i'm doing

02:25:16
theruggedbear: @dedadev https://github.com/adamelmore/dotfiles/tree/main/.config/nvim

02:25:18
<transcript>: I just feel like I'm doing it wrong.

02:25:25
<transcript>: I think I think this is right.

02:25:25
<transcript>: now we can

02:25:29
<transcript>: Now we can just set expires on the yeah on the game, right.

02:25:32
<transcript>: Okay.

02:25:32
<transcript>: so

02:25:35
<transcript>: So then I guess the question is.

02:25:41
<transcript>: If they miss the buzzer because.

02:25:41
<transcript>: like

02:25:54
<transcript>: Like expires right here. No expired. If end is greater than if right now is after the expires the original expire sign. They're too late. Otherwise we're extending that expires time and updating.

02:25:59
<transcript>: Updating the expires. Here.

02:26:03
<transcript>: But it should only be if.

02:26:03
<transcript>: not

02:26:05
<transcript>: Not expired.

02:26:08
<transcript>: Right.

02:26:16
<transcript>: What do I do here? What's wrong with correct.

02:26:16
<transcript>: it's not

02:26:18
<transcript>: It's not expired.

02:26:22
<transcript>: We.

02:26:22
<transcript>: set the second

02:26:26
<transcript>: Set the seconds. We add the Delta to the seconds, right.

02:26:26
<transcript>: what do i do

02:26:27
<transcript>: What do I do.

02:26:34
<transcript>: Not expired expires at 7 seconds.

02:26:44
<transcript>: I used.

02:26:46
<transcript>: Inaccurate.

02:26:46
<transcript>: round the

02:26:51
<transcript>: Round the start deck of time. I guess not, but I don't care when the round started.

02:26:53
<transcript>: Okay.

02:26:58
<transcript>: Weird some LSP. Weirdness.

02:27:02
<transcript>: Okay, Let's.

02:27:07
<transcript>: Let's see. Is our server done? Did we? Oh, I didn't start at the music again.

02:27:33
<transcript>: So. Okay. I think that's good. We've updated the round. Can you do? I guess it'd be two separate operations. I wonder if I could do these in parallel Prisma.

02:27:36
<transcript>: Parallel updates.

02:27:42
<transcript>: It doesn't need to be a transaction. Yeah, I guess it doesn't need a transaction.

02:27:42
theruggedbear: i hate working with dates and date times ...

02:27:46
<transcript>: Update mini yeah Yeah.

02:27:52
<transcript>: Making me done same time, right.

02:28:01
<transcript>: What's nested rights? What's the difference here.

02:28:08
<transcript>: Single Prismapia call with multiple operations that touch multiple related records. For example, creating a user get the post.

02:28:17
<transcript>: This will be an update. Many. They don't need to. They don't touch each other in any way. Right.

02:28:23
<transcript>: Okay, let's do an update. Many.

02:28:34
<transcript>: Use bulk. You want to update a batch at the same type of record, like a batch of emails. Oh, it's not saying type of record. It's two separate types.

02:28:55
<transcript>: I just need to run them in parallel.

02:28:55
<transcript>: i'm

02:28:56
uberrick: think you'd be looking to do a transaction

02:28:58
<transcript>: I'm I can do that just with promises. And.

02:28:58
<transcript>: stuff but

02:29:00
<transcript>: Stuff but.

02:29:00
<transcript>: yeah

02:29:03
<transcript>: Yeah, if I do it at a transaction.

02:29:03
<transcript>: as

02:29:07
<transcript>: As a transaction, they won't run in parallel. But I guess that's okay.

02:29:07
<transcript>: i mean the performance

02:29:11
<transcript>: I mean, the performance implications aren't that bad, I guess.

02:29:23
<transcript>: Rights are considered independence. I do not rely on the results of previous operation. The following groups of infant rights could occur in any order of being the status of listed.

02:29:23
<transcript>: see

02:29:25
<transcript>: See, these are independent.

02:29:32
<transcript>: Bulk operations. Write multiple records, the same type. It's not that.

02:29:36
<transcript>: Is it a.

02:29:42
<transcript>: So then there's the Transaction API generic solution to infantry allows you to run multiple.

02:29:46
<transcript>: Issues, or.

02:29:49
<transcript>: Scenario Privacy.

02:29:53
<transcript>: What does the other options here for individual.

02:29:58
<transcript>: Logic as part of an atomic abrasion.

02:30:09
<transcript>: I guess we'll just do them as a transaction.

02:30:12
<transcript>: Yes.

02:30:16
<transcript>: Interactive Transactions If you have an existing application.

02:30:21
<transcript>: Useless. Get this.

02:30:21
<transcript>: like i don't

02:30:23
<transcript>: Like, I don't think that's this.

02:30:26
<transcript>: Okay.

02:30:34
<transcript>: What do we think? Is this just the transaction API.

02:30:41
<transcript>: I'm going to update a bastard. Includes different types of records, such as emails, and users do not need to relate in any way. Yeah. Okay.

02:30:45
<transcript>: So Transaction API How's this work.

02:30:46
<transcript>: Prisma.

02:30:54
<transcript>: Prisoner transaction. So instead of awaiting them, we like store the updates.

02:30:58
<transcript>: Oh, Geez.

02:31:00
<transcript>: So this is a.

02:31:00
<transcript>: round

02:31:02
<transcript>: Round update.

02:31:05
<transcript>: And this is.

02:31:05
<transcript>: a game

02:31:07
<transcript>: A game update.

02:31:11
<transcript>: Right. And then we say.

02:31:18
<transcript>: Const respond. I don't know what that's gonna be yet await. Prisma.

02:31:20
<transcript>: Transaction.

02:31:23
<transcript>: I don't love the dollar sign. Don't know what that's about.

02:31:25
<transcript>: Round update.

02:31:27
<transcript>: Game update.

02:31:33
<transcript>: Oh.

02:31:38
<transcript>: It's a context that Prisma.

02:31:40
<transcript>: Okay.

02:31:45
<transcript>: What is this? So that is an array with the round and the game in it.

02:31:45
<transcript>: so

02:31:48
<transcript>: So round game.

02:31:48
<transcript>: i don't need the range

02:31:50
<transcript>: I don't need the range, though.

02:31:59
<transcript>: I just delete that. Yeah. Just like that round Endgame.

02:31:59
<transcript>: concept

02:32:01
<transcript>: Concept. Okay.

02:32:03
<transcript>: That'll be.

02:32:03
<transcript>: trans

02:32:06
<transcript>: Transaction which I guess is good.

02:32:09
<transcript>: We set the choice. In the end, we set the.

02:32:13
<transcript>: Score, Increment. And the Expire. The new expires.

02:32:13
<transcript>: we return

02:32:16
<transcript>: We return all that in a payload.

02:32:16
<transcript>: back to the

02:32:18
<transcript>: Back to the client.

02:32:23
<transcript>: I think we did it. The server is good.

02:32:25
<transcript>: This is not good, though.

02:32:29
<transcript>: All right, Ryan, this is our client. Okay.

02:32:34
<transcript>: Let's restart. Oh, it's not even running PMPM, run, Dev.

02:32:36
<transcript>: device

02:32:36
<transcript>: device very broken

02:32:41
<transcript>: Device. Very broken. So we said that this is our game state. You have the game, you have the round.

02:32:44
<transcript>: The results.

02:32:47
<transcript>: Is the answer. Let's see.

02:32:52
<transcript>: Game round answer.

02:32:56
<transcript>: And then choice is a string.

02:33:01
<transcript>: These functions are gonna go away. That was a stand thing.

02:33:09
<transcript>: So that's our game state or our context. I guess you might call it.

02:33:13
<transcript>: All right, we're getting ready to drop in a big state machine thing.

02:33:18
<transcript>: Anything in this that I need to keep.

02:33:18
<transcript>: or understand

02:33:22
<transcript>: Or understand now this is all just gonna go away.

02:33:31
<transcript>: Okay, cool.

02:33:31
<transcript>: home

02:33:32
<transcript>: Home.

02:33:39
<transcript>: Let's handle, answer.

02:33:44
<transcript>: This use effect is going away feels good.

02:33:44
<transcript>: feels good

02:33:45
<transcript>: Feels good.

02:33:50
<transcript>: I delete this function. Was that gonna work DAFF kinda.

02:33:54
<transcript>: Worked this double bath.

02:33:57
<transcript>: What is this? A lap.

02:33:58
<transcript>: Oh, wait, wait.

02:34:01
<transcript>: We still have this idea of our.

02:34:06
<transcript>: Timer. I guess we have to have the timer still.

02:34:13
<transcript>: I was excited about deleting this, but I think we have to keep it for the bar. Oh, the timer's different now.

02:34:16
<transcript>: Timer now is.

02:34:16
<transcript>: the total

02:34:24
<transcript>: The total the whole game. So it's gonna like be dropping from 30 seconds. Then you're gonna get one right and you're gonna get 5 seconds.

02:34:24
<transcript>: so this

02:34:26
<transcript>: So this, it's gonna change.

02:34:26
<transcript>: let's just

02:34:28
adamdotdev: jj

02:34:28
<transcript>: Let's just.

02:34:33
<transcript>: Jays, let's just keep going and see what we.

02:34:39
<transcript>: Experimental this because that was kind of in progress.

02:34:42
<transcript>: Handle new game.

02:34:47
<transcript>: This is a new game button like when you click new game right.

02:34:49
<transcript>: Yeah.

02:34:51
<transcript>: Okay.

02:35:00
<transcript>: Let's just drop in our state machine now so over here.

02:35:04
<transcript>: This code, right.

02:35:12
<transcript>: Let's just drop it all.

02:35:15
<transcript>: Right there, I guess.

02:35:19
<transcript>: So.

02:35:19
<transcript>: we have

02:35:20
<transcript>: We have.

02:35:20
<transcript>: create machine

02:35:23
<transcript>: Create machine and assign.

02:35:30
<transcript>: Machine from X eight. I did install X eight state right.

02:35:38
<transcript>: We don't have a context like that. We have this context. Let's see.

02:35:38
<transcript>: what i can do

02:35:40
<transcript>: What I can do with config.

02:36:01
<transcript>: Game machine.

02:36:04
<transcript>: Work on what this looks like.

02:36:09
<transcript>: Sorry I didn't have keycaster going.

02:36:11
the_real_enrico_pallazzo: It doesn't add up the filters?! BAH!

02:36:17
<transcript>: Id game initial idle.

02:36:20
<transcript>: We got invoke the timer at the beginning.

02:36:20
<transcript>: on the

02:36:23
<transcript>: On the go to game over.

02:36:27
<transcript>: To the final stage.

02:36:27
<transcript>: we're

02:36:31
<transcript>: We're not gonna we're not gonna actually restart the game. I don't think.

02:36:40
<transcript>: Or yeah, I guess we are there is no end state.

02:36:47
<transcript>: Idle on start game. I'm gonna rename all these so like.

02:36:50
<transcript>: This will be stark.

02:36:50
<transcript>: game

02:36:51
<transcript>: Game.

02:36:55
<transcript>: All the events should be tapped. Right.

02:36:57
<transcript>: Go to active.

02:37:03
<transcript>: Source? Undone.

02:37:07
<transcript>: This one's gonna be on.

02:37:07
<transcript>: answer

02:37:08
<transcript>: Answer.

02:37:08
<transcript>: we

02:37:11
<transcript>: We go to checking answer.

02:37:14
<transcript>: Which invokes that check answer source.

02:37:23
<transcript>: I guess instead of answer that should be guess right.

02:37:29
<transcript>: On guests. We go to checking in.

02:37:43
<transcript>: I'm going to rename all this it's all getting renamed showing answer after some delay.

02:37:48
<transcript>: This one will be just after 2000 right.

02:37:52
<transcript>: He was saying, we could do a dynamic.

02:37:52
<transcript>: delay

02:37:53
<transcript>: Delay.

02:37:53
<transcript>: that's gonna be

02:37:54
<transcript>: That's gonna be.

02:37:54
<transcript>: up

02:37:56
<transcript>: Up here.

02:38:01
<transcript>: Timer.

02:38:07
<transcript>: How do I want to do that.

02:38:12
<transcript>: Because there's a little difference here. He was thinking.

02:38:12
<transcript>: when i talked

02:38:14
<transcript>: When I talked to David, he was saying.

02:38:25
<transcript>: That we could make this timer dynamic here, but it's not this one. We're always gonna show the answer for 2 seconds.

02:38:29
<transcript>: The dynamic part is this top level. This invoke.

02:38:33
<transcript>: And when timer is done, it goes to game over.

02:38:35
<transcript>: That's the thing that needs to be dynamic.

02:38:38
<transcript>: So can.

02:38:43
<transcript>: Game.

02:38:51
<transcript>: What was I in before? What was the thing I was visualizing. And all that thing was not the thing.

02:38:56
<transcript>: This thing. So this is registry. Oh, this is the beta.

02:39:01
<transcript>: And this is the current vis. Okay, so this is the beta.

02:39:02
<transcript>: Here.

02:39:07
<transcript>: So this thing right here.

02:39:11
<transcript>: Has an invocation, but what I really need.

02:39:17
<transcript>: That could return a promise, but that promise can't be a fixed.

02:39:22
<transcript>: Can't be a fixed thing, right.

02:39:28
<transcript>: I thank you for the follow or row chinkaro.

02:39:35
<transcript>: You know, I'm saying here.

02:39:35
<transcript>: we

02:39:42
<transcript>: We want to have, like, an overarching timer, and that's what this invoke was gonna do, but that was just gonna return a promise.

02:39:47
<transcript>: And that promise the expire time changes.

02:39:52
<transcript>: So how does it it's almost like a state machine.

02:39:55
<transcript>: It needs to wait on a state machine or something.

02:40:04
<transcript>: About this.

02:40:09
<transcript>: In any case when that invoke when that promise resolves.

02:40:19
<transcript>: It's like I need it to so the way it was gonna work.

02:40:23
<transcript>: Is this timer? This delay.

02:40:29
<transcript>: No, sorry. This one right here, timer. It's gonna return to promise.

02:40:29
<transcript>: we

02:40:36
<transcript>: We need to know. Oh, here. So timer, context, and event. Does it get invoked just the one time, I guess.

02:40:36
<transcript>: this gets invoked

02:40:39
<transcript>: This gets invoked when the thing is started, doesn't it.

02:40:39
<transcript>: yeah

02:40:40
<transcript>: Yeah.

02:40:44
<transcript>: Oh, but that won't work. It needs to only.

02:40:51
<transcript>: It needs only start the timer once they go from idle to start.

02:40:51
<transcript>: start

02:40:53
<transcript>: Start game.

02:40:57
<transcript>: So it's like we need to start a timer.

02:41:00
<transcript>: The moment we go into start game.

02:41:03
<transcript>: Right.

02:41:03
<transcript>: let's

02:41:05
<transcript>: Let's say but I think I got actually do that.

02:41:05
<transcript>: in

02:41:08
<transcript>: In here. Not here.

02:41:08
<transcript>: i think i can do it in here

02:41:09
<transcript>: I think I can do it in here.

02:41:09
<transcript>: so

02:41:12
<transcript>: So when you go to start game.

02:41:16
<transcript>: Do we need to have like an action.

02:41:16
<transcript>: is that what

02:41:19
<transcript>: Is that what these are entry, actions, or something.

02:41:28
<transcript>: So start getting.

02:41:33
<transcript>: Active. We have an invocation.

02:41:33
<transcript>: no

02:41:35
<transcript>: No.

02:41:35
<transcript>: because we

02:41:38
<transcript>: Because we come back to active, right.

02:41:48
<transcript>: Is this what actions are for.

02:42:09
<transcript>: I gotta think, I gotta think, think, think the problem I'm facing is in order to do this dynamic timer, you show me how to do it. Here.

02:42:09
<transcript>: i could

02:42:16
<transcript>: I could do it here with an invocation or with delays. You can make the delays.

02:42:19
<transcript>: Dynamic right.

02:42:27
<transcript>: So showing answer it shows that for 2 seconds and it goes back to active.

02:42:30
<transcript>: But I'm.

02:42:30
<transcript>: the whole

02:42:33
<transcript>: The whole thing once you go into.

02:42:36
<transcript>: Once you start a game.

02:42:42
<transcript>: It's like a lead. It's an exit action on idle. Maybe.

02:42:45
<transcript>: Can an action.

02:42:49
<transcript>: I need something.

02:42:49
<transcript>: that

02:42:51
<transcript>: That's listening.

02:42:57
<transcript>: To every state change. It's like I need something that is aware of every state change.

02:42:59
<transcript>: To check the content.

02:42:59
<transcript>: on every

02:43:04
<transcript>: On every state change to reset a new delay. Does that make sense.

02:43:07
<transcript>: Barely barely to me either.

02:43:12
<transcript>: Barely makes sense.

02:43:26
<transcript>: I did it on the top level of the game.

02:43:28
<transcript>: We had this.

02:43:28
<transcript>: oh you know what

02:43:30
<transcript>: Oh, you know what.

02:43:34
<transcript>: Okay. So this timer.

02:43:43
<transcript>: History final.

02:43:45
<transcript>: This one could.

02:43:45
<transcript>: if

02:43:50
<transcript>: If it could just, like invoke the timer. Oh, here, like I'm done.

02:43:50
raphaelesalvatore: it would be funny to combine filters,

02:43:56
<transcript>: So in that completes when that resolves.

02:43:56
<transcript>: could we

02:43:58
raphaelesalvatore: minion + the prime :D

02:43:59
<transcript>: Could we conditionally? What's guard.

02:43:59
<transcript>: could we

02:44:01
<transcript>: Could we conditionally check here.

02:44:01
<transcript>: is it actually

02:44:05
<transcript>: Is it actually after expired and if not.

02:44:08
<transcript>: Reinvoke the timer. Is that a thing.

02:44:17
<transcript>: We're that could just be a fixed.

02:44:19
<transcript>: Interval, I guess.

02:44:32
<transcript>: So we chose the hard one. We chose the hard.

02:44:32
<transcript>: game to

02:44:34
<transcript>: Game to model.

02:44:38
<transcript>: That would be funny. To combine filters. Yeah.

02:44:44
<transcript>: It's just a Snap camera. I don't think they support multiple filters at once. That would be kind of cool.

02:44:49
<transcript>: I guess some of them would probably clash with each other that's by the reason.

02:44:53
<transcript>: All right. I'm coming over here.

02:45:01
<transcript>: I know a lot of you are just working just listening in, but I'm gonna just I'm gonna ask some questions here with my minion face.

02:45:06
<transcript>: What I'm trying to figure out is, how do I.

02:45:09
<transcript>: Create this timer that's dynamic.

02:45:09
<transcript>: at the top level

02:45:17
<transcript>: At the top level, we need to move to the end game over state. We move the game over state whenever.

02:45:21
stroopwafel26: hello

02:45:27
<transcript>: We reach the game expired time game will just be a property. Stroop is here. Hey, Street, I need you to solve this problem. Okay.

02:45:33
<transcript>: So the context has game on it. That game on context gets updated.

02:45:33
<transcript>: every after

02:45:35
<transcript>: Every after every answer.

02:45:35
<transcript>: and after

02:45:38
<transcript>: And after every answer that game.

02:45:38
<transcript>: expires product

02:45:39
<transcript>: Expires product.

02:45:39
<transcript>: is a date

02:45:41
<transcript>: Is a date.

02:45:41
<transcript>: it's changing

02:45:44
<transcript>: It's changing so it starts out at 30 seconds as the timer goes.

02:45:44
<transcript>: and

02:45:58
<transcript>: and you answer correctly you get more time so we add five seconds if you miss an answer if you get it wrong you lose five seconds so we need to have this global top level timer that's gonna move into the game overstate

02:46:03
<transcript>: Based on that dynamic.

02:46:05
<transcript>: Expires property right.

02:46:10
<transcript>: Does that make sense.

02:46:14
<transcript>: I think the follow atomizer.

02:46:22
<transcript>: And Jeff Armstrong. Thank you both for the follows. I appreciate that.

02:46:29
<transcript>: 2018 followers. Hey, we're coming up on 2022. That'll be fun. We have 2022 followers.

02:46:32
<transcript>: Just like the year that we're presently in.

02:46:40
<transcript>: I wish I would have thought through this if I would have thought through this a little harder. When David was on, he could probably answer this question.

02:46:44
<transcript>: Chow thanks for the follow thanks so much.

02:46:45
daglee: Don't you write it when you leave a question and read it when you enter a question?

02:46:49
stroopwafel26: sorry I have no thoughts, my brain is fried

02:46:52
<transcript>: Don't you write it when you leave a question and read it when you enter a question.

02:47:00
<transcript>: Write it when you leave a question and read it when you enter a question. Yes.

02:47:00
<transcript>: so

02:47:08
<transcript>: So you write it. So once we answer, we get a payload back that has the updated game value. The updated expiration.

02:47:14
<transcript>: And then we read it. When we enter into a question, well, we're continuously reading it.

02:47:21
<transcript>: Sort of we've got a little timer bar on the screen that's gonna be continually. I guess it may.

02:47:28
<transcript>: It is on the context. Yeah, that's okay. Stroop. You know, I had to have thoughts.

02:47:40
<transcript>: Don't you write it when you leave a question and read it when you enter a question it needs. Even if you don't enter a new question in the middle of your question, it might need to know up the timer expired.

02:47:40
<transcript>: so

02:47:43
<transcript>: So we need like this global.

02:47:43
<transcript>: like the way

02:47:46
<transcript>: Like the way he helped me model it was this invoke.

02:47:46
<transcript>: on game

02:47:48
<transcript>: On game.

02:47:48
<transcript>: i realized

02:47:51
daglee: My point is that it isn't that global?

02:47:55
<transcript>: I realized now that's not quite accurate, because that would start the timer before you even enter into the active state. And that's no good.

02:47:59
<transcript>: It's almost like we need a submachine.

02:48:10
<transcript>: It isn't that global? Well, it kind of is it's once you go once you do the start game event, that's when the timer should start.

02:48:10
<transcript>: right

02:48:11
<transcript>: Right.

02:48:15
<transcript>: And that timer.

02:48:18
<transcript>: Should interrupt wherever you are.

02:48:18
<transcript>: that whatever

02:48:21
<transcript>: That whatever state you're in.

02:48:21
<transcript>: it should pop

02:48:33
<transcript>: It should pop in and interrupt and move you to the game overstate. Once that timer expires. The problem is that it's not known at the start game what time that will be? It's dynamic change after every answer.

02:48:33
<transcript>: right

02:48:34
<transcript>: Right.

02:48:37
<transcript>: That's the problem.

02:48:46
<transcript>: What do we think? People.

02:48:51
<transcript>: Like I wonder if this seems to be a submachine that we enter into once you start getting.

02:48:51
<transcript>: that sub

02:48:54
<transcript>: That submachine has an invoke.

02:48:54
<transcript>: that still doesn't

02:48:57
<transcript>: That still doesn't help me figure out how.

02:49:07
<transcript>: Like, we need a delay, a dynamic delay. And we know how to do that.

02:49:07
<transcript>: he showed

02:49:12
<transcript>: He showed us how to make the delay dynamic, but it doesn't help us.

02:49:18
<transcript>: Doesn't help us. He.

02:49:27
<transcript>: Kind of want to just like DM. David.

02:49:27
<transcript>: i don't know if

02:49:30
<transcript>: I don't know if I can even express so the problem.

02:49:30
<transcript>: like

02:49:32
<transcript>: Like I don't know if I can actually put into words.

02:49:53
<transcript>: Maybe I'll type it into a chef first. Here's my problem that I'm gonna send to David. My problem is.

02:49:56
<transcript>: I'm trying to figure out.

02:50:02
<transcript>: How I can have a dynamic.

02:50:08
<transcript>: And global.

02:50:08
<transcript>: time

02:50:10
<transcript>: Timer.

02:50:13
<transcript>: Where the timer.

02:50:17
<transcript>: Expiration.

02:50:17
<transcript>: moves

02:50:19
<transcript>: Moves around.

02:50:19
<transcript>: based

02:50:21
<transcript>: Based on each.

02:50:21
<transcript>: answer

02:50:22
<transcript>: Answer.

02:50:22
<transcript>: right

02:50:24
<transcript>: Right or wrong.

02:50:28
<transcript>: At the end of the timer.

02:50:32
<transcript>: We should move.

02:50:32
<transcript>: to

02:50:37
<transcript>: To the game over state.

02:50:38
adamdotdev: I'm trying to figure out how I can have a dynamic *and* global timer, where the timer expiration moves around based on each answer (right or wrong). At the end of the timer, we should move to the "Game Over" state. Does that make sense?

02:50:39
<transcript>: Does that make sense.

02:50:39
<transcript>: i'm gonna just

02:50:40
<transcript>: I'm gonna just.

02:50:43
<transcript>: Read this if you're here and you're listening.

02:50:52
<transcript>: Does that sound like a coherent question so that I could ask David. I just don't want to bug him with stuff that's, like, totally incoherent.

02:50:53
raphiledevin: Sounds like smt like GameState? Contains Timer, has update functions for timer. Delegate when you need to route to end

02:50:57
<transcript>: You know what I'm saying.

02:51:08
<transcript>: Welcome to Chat Rappy. Sounds like something like Game State contains timer has update functions for timer. Delegate when you need to route to end.

02:51:11
<transcript>: So the context.

02:51:11
<transcript>: is what you

02:51:17
<transcript>: Is what you mean by game state contains the timer has update functions for timer.

02:51:17
<transcript>: yeah

02:51:19
raphiledevin: Passed through screens or global

02:51:25
<transcript>: Yeah, I was just trying to put it all in my state machine, like, I want to have I want to have it all in my state machine, ideally.

02:51:27
<transcript>: The whole like.

02:51:28
theruggedbear: that sounds like nested machines, something david mentioned.

02:51:31
<transcript>: Stick here is that I could put it all in one X state state machine.

02:51:38
<transcript>: I do think it sounds like a nested state machine. I agree. Let's try before I bug David. Let's just try.

02:51:40
<transcript>: Let's see what we can come up with here.

02:51:43
<transcript>: Did I save that first version.

02:51:47
<transcript>: I added some nonsenses, didn't I.

02:51:51
<transcript>: Add something weird.

02:51:53
<transcript>: So I need to remove something.

02:52:00
<transcript>: Came over showing answer. I guess I did. I thought I added some nonsense.

02:52:04
raphiledevin: kk, typed before I saw any code/state machine :D

02:52:04
<transcript>: Okay save.

02:52:08
<transcript>: Game.

02:52:12
<transcript>: Okay. We've saved it. So now I can. I can mess with it. Right.

02:52:23
<transcript>: Oh, no worries, Rapha? Yeah, yeah, we're using X state. We're trying to just model all this in X state. It's kind of learning exercise as much as anything.

02:52:25
<transcript>: So let's see.

02:52:31
<transcript>: The game is no longer gonna have a timer invocation right.

02:52:33
cowfacedude99: the end state is another state right?

02:52:33
<transcript>: And remove that.

02:52:33
<transcript>: we

02:52:36
<transcript>: We start out.

02:52:38
<transcript>: At idle here.

02:52:42
<transcript>: We start game and then we go into.

02:52:42
<transcript>: a machine

02:52:47
<transcript>: A machine. I think here. Right. A submachine. Can I try and do that actually in here.

02:52:47
<transcript>: oh i don't know

02:52:49
<transcript>: Oh I don't know if I can actually create.

02:52:56
<transcript>: Can I create a submit.

02:52:58
<transcript>: Parallel.

02:52:58
<transcript>: what's

02:53:00
<transcript>: What's parallel.

02:53:04
cowfacedude99: screen @adamdotdev

02:53:07
<transcript>: Now I'm just. I'm just making stuff up. I may not be able to create a new.

02:53:07
<transcript>: oh

02:53:11
<transcript>: Oh, yes. So that's how you create a sub. Okay.

02:53:11
<transcript>: so this is

02:53:14
<transcript>: So this is our new, active.

02:53:18
<transcript>: Right.

02:53:20
<transcript>: Will it be parallel to.

02:53:23
<transcript>: It we'll see.

02:53:23
<transcript>: this is

02:53:25
<transcript>: This is our active.

02:53:25
<transcript>: and we're

02:53:27
<transcript>: And we're gonna just remove.

02:53:32
<transcript>: So idle start game goes to.

02:53:32
<transcript>: this active

02:53:33
<transcript>: This active.

02:53:35
<transcript>: Right.

02:53:37
cowfacedude99: we do need the context although we like to see your face LUL @adamdotdev

02:53:39
<transcript>: This one.

02:53:42
<transcript>: Also.

02:53:45
<transcript>: This one.

02:53:50
<transcript>: Okay.

02:53:56
<transcript>: So then what is that active answer.

02:53:57
thdxr: I had to jump right before david came on. Adam sounds 100x more confident with xstate lol

02:54:02
<transcript>: Okay, so they can delete this state now.

02:54:06
<transcript>: Okay. What do we have here? We have.

02:54:12
<transcript>: We go from Idle Idol start game into this submachine.

02:54:12
<transcript>: so now

02:54:16
<transcript>: So now the game is started and this one has an invoice on it.

02:54:16
<transcript>: it

02:54:19
<transcript>: It's still not quite right.

02:54:19
<transcript>: i

02:54:23
<transcript>: I can't dynamically change this promise. Right.

02:54:30
theruggedbear: we can not see

02:54:30
<transcript>: Because the invocations only get called once I believe when you enter the state is that does anyone know.

02:54:38
<transcript>: Dax. I I definitely know more.

02:54:38
<transcript>: than i

02:54:40
<transcript>: Than I did I'm still.

02:54:40
<transcript>: still

02:54:45
icedcoffefe: there is nothing

02:54:47
<transcript>: Still not understanding much, but oh, am I not sharing? I'm not sharing my screen. Oh, my word.

02:54:49
<transcript>: People.

02:54:49
<transcript>: how long

02:54:56
<transcript>: How long have I just use this and staring inside of my face? I guess you guys are doing other stuff that makes sense. Then you cannot see that's a good call.

02:54:56
<transcript>: in state is

02:54:58
<transcript>: In State is another state, right.

02:55:00
<transcript>: Yes.

02:55:05
<transcript>: We do need the context, although we like to see your phase, though.

02:55:17
<transcript>: Yeah. So, DAX, we learned some stuff with David. Learned a lot. And I'm a huge fan of X State. Now, like, I'm gonna use it for everyone, because that's how I am. I get excited about something. I use it for everything.

02:55:22
<transcript>: So let me move this.

02:55:22
<transcript>: kind of

02:55:26
<transcript>: Kind of like I'm in the way right now, right? I think for the follow the late night code.

02:55:31
<transcript>: So here we go. We're saying maybe there's a submachine here.

02:55:51
<transcript>: So game machine, what we're trying to figure out is how we do the dynamic global timer. We want to expire the game. So, DAX, I don't know if you heard the way we're gonna go with we're gonna go with the infinite timer. Starts at 30 seconds. Every right answer, you get five more seconds. Every wrong answer, you lose 5 seconds. So theoretically, you could go forever.

02:55:51
<transcript>: it could also be done

02:55:52
thdxr: love it

02:55:55
<transcript>: It could also be done very quickly if you just missed the first few right.

02:55:57
<transcript>: So that's all the timer is going to work.

02:55:57
<transcript>: we need that

02:55:59
<transcript>: We need that to be sort of like.

02:56:06
<transcript>: This global timer that's ready to interact wherever you're at whatever state you're in the middle of and take you to the game overstate.

02:56:06
<transcript>: make

02:56:14
<transcript>: Make sense. Yeah. So just trying to figure out how to do that in a state machine without bugging David again.

02:56:29
<transcript>: So what we decided is maybe this active is a submachine. So it goes from idol. You start game, you're inactive. Now this is an active. I got the problem is so the initial state of active would be.

02:56:33
<transcript>: This is like you're looking at a new question.

02:56:38
<transcript>: What is that state called.

02:56:40
<transcript>: Guessing.

02:56:44
<transcript>: Right. I don't know. You're like looking at a thing.

02:56:48
<transcript>: And then you do an action called answer.

02:56:54
<transcript>: And then we check the answer. So I need to move this. Can I move that in there? I probably can't.

02:57:00
<transcript>: This is the beta. So we're gonna add a new state in here called checking.

02:57:02
<transcript>: Answer.

02:57:06
<transcript>: Just gonna do the invoke for us, right.

02:57:12
<transcript>: So guessing goes into checking answer when you do.

02:57:17
<transcript>: Yes. The guess event. We're gonna actually try and name these better.

02:57:17
<transcript>: like

02:57:20
<transcript>: Like capitals. Right.

02:57:23
<transcript>: Okay.

02:57:28
<transcript>: Guess so you go from guessing. You make a guess. You go to checking answer.

02:57:31
<transcript>: And then that needs an invoke.

02:57:31
<transcript>: we'll

02:57:34
<transcript>: We'll placeholder.

02:57:35
<transcript>: Answer.

02:57:38
<transcript>: Okay.

02:57:46
<transcript>: So that's what makes the http requests to our back end or our TrpC mutation.

02:57:46
<transcript>: thanks for

02:57:54
<transcript>: Thanks for the follow fubinator 2021 we're one away from 2022 that'll be fun same followers as years.

02:57:56
<transcript>: 2022.

02:58:03
<transcript>: Good time. So there it is. Squiggly. Quinn, thank you so much for the follow. You are the 20.

02:58:03
<transcript>: two

02:58:10
<transcript>: 2020 to 2022nd follower. Thank you. Welcome.

02:58:11
<transcript>: Confetti.

02:58:14
<transcript>: Okay.

02:58:25
<transcript>: Oh, realm PLG living in the future 2023. I think unless I counted wrong or someone unfold me. Very possible. Nope.

02:58:27
<transcript>: 2023.

02:58:29
<transcript>: Okay.

02:58:29
<transcript>: so we go

02:58:35
<transcript>: So we go from guessing. We guess now we're checking the answer from checking answer when that one's done.

02:58:38
<transcript>: We go to showing answer.

02:58:40
<transcript>: Showing answer.

02:58:42
<transcript>: Okay.

02:58:44
<transcript>: So.

02:58:44
<transcript>: this

02:58:50
<transcript>: This invoke. When we go like this, it's gonna automatically be basically based on the invoke. Done. Yeah.

02:58:50
<transcript>: so

02:58:55
<transcript>: So Yep, show the answer and then after 2 seconds.

02:58:58
<transcript>: How did you do that.

02:59:05
<transcript>: Oh, it's just when we make the next state, so after 2 seconds, it goes back to guessing. Okay.

02:59:08
<transcript>: I love X State. I'm a fan.

02:59:12
<transcript>: This will be after.

02:59:19
<transcript>: 2 seconds.

02:59:25
<transcript>: Like you go from guessing.

02:59:28
<transcript>: We check the answer after the guest event.

02:59:37
<transcript>: Once that resolves, we show the answer in the after 2 seconds, we're back to guessing now this whole thing. So I'm gonna delete this.

02:59:45
<transcript>: I'm gonna delete this and game over. So we have this game over state, which is kind of like outside of.

02:59:45
<transcript>: it's

02:59:47
<transcript>: It's outside of the.

02:59:47
<transcript>: active

02:59:49
<transcript>: Active thing right.

02:59:49
<transcript>: i

02:59:52
<transcript>: I don't active game over.

02:59:52
<transcript>: but

03:00:02
<transcript>: But we transition the game over based on dynamic stuff that comes in this promise right here. Right? What are actions.

03:00:05
jenswoeste: good afternoon adam & chat!

03:00:06
<transcript>: So actions that's like where you can run code based on.

03:00:10
<transcript>: What are actions? I need to understand. We never talked about actions.

03:00:10
<transcript>: yes this

03:00:15
<transcript>: Yes. This year. Excite actions. He said they were being renamed to something.

03:00:25
<transcript>: Fire and Forget effects. Oh, yeah? He said, these are your effects.

03:00:25
<transcript>: so

03:00:28
<transcript>: So my timer just an effect. Ultimately.

03:00:35
<transcript>: Did I even ask a question.

03:00:35
<transcript>: so

03:00:43
<transcript>: So transition actions, and then entry and exit actions. This would be a transition action. So when we transition.

03:00:49
<transcript>: It's that which one was it? It was.

03:00:51
<transcript>: Let's pull this over here.

03:00:55
<transcript>: Let's.

03:00:59
<transcript>: Thank you for the follows. Wait.

03:00:59
<transcript>: did i is it the

03:01:02
<transcript>: Did I? Is it the music? No one followed me.

03:01:02
<transcript>: well thanks anyway

03:01:05
stroopwafel26: Hey Jens

03:01:09
<transcript>: Well, thanks anyway. Thanks for everyone who'd followed me before DAX. I saw your follow. Appreciate that yesterday. Thank you.

03:01:13
<transcript>: You were moderating and you weren't following me unscathing.

03:01:13
<transcript>: i don't know

03:01:17
<transcript>: I don't know how to use most platforms so like.

03:01:21
jenswoeste: hey stroop

03:01:22
<transcript>: I'm not following people on lots of things. I should be following them on. Okay, let's see.

03:01:24
thdxr: gonna unfollow you and refollow you every day

03:01:28
<transcript>: That was a follow. Thank you, Dagley. Thank you for the follow.

03:01:31
<transcript>: Sounds good, dad. Sounds good.

03:01:38
<transcript>: Yens we are playing with X State we had David on earlier. He taught us all the things.

03:01:38
<transcript>: i actually

03:01:47
<transcript>: I actually know something. Now there's a rugged bear thanks to the follow. Okay, so I rise on following and refollowing. Or maybe you really weren't following, but I feel like you were following.

03:01:48
theruggedbear: Kappa

03:01:50
<transcript>: That sound keeps playing.

03:01:50
<transcript>: it keeps

03:01:54
<transcript>: It keeps going off. Okay.

03:01:56
stroopwafel26: MaxLOL

03:01:56
<transcript>: So.

03:01:56
<transcript>: this one right here

03:02:01
<transcript>: This one right here. Done. Answer. If we added an action to this.

03:02:01
<transcript>: it says it's

03:02:02
stroopwafel26: welcome @theruggedbear !

03:02:03
<transcript>: It says, It's a fire. And forget.

03:02:07
<transcript>: So I guess that's not what we want.

03:02:09
<transcript>: Invocation.

03:02:10
jenswoeste: sounds like the first bar of seal/crazy?

03:02:14
<transcript>: Okay, so could we emit events.

03:02:14
<transcript>: okay hang on

03:02:15
<transcript>: Okay. Hang on.

03:02:18
<transcript>: Could our timer be an event.

03:02:21
<transcript>: That starts here.

03:02:21
<transcript>: let's see

03:02:22
<transcript>: Let's see.

03:02:23
theruggedbear: channel points abuse ? i get 12 points each time i follow Kappa

03:02:25
<transcript>: An invocation.

03:02:25
<transcript>: could

03:02:28
<transcript>: Could emit an event right.

03:02:31
<transcript>: Or no.

03:02:34
stroopwafel26: a loophole

03:02:40
<transcript>: You get twelve point each time you follow. Uhoh.

03:02:45
<transcript>: Sounds like the first bar of the seal. Crazy.

03:02:45
<transcript>: oh this song

03:02:47
<transcript>: Oh, this song does.

03:02:54
<transcript>: Are you saying the words I said.

03:02:56
jenswoeste: the follow sound

03:03:00
<transcript>: So is everyone understand my problem here.

03:03:03
<transcript>: I can use a delay.

03:03:06
thdxr: @theruggedbear now we have to figure out how to convert points to cold hard cash

03:03:07
<transcript>: Delayed events and transitions. Delays and timeouts can be handled.

03:03:07
<transcript>: declaratively

03:03:10
<transcript>: Declaratively with state Charts to learn more.

03:03:10
<transcript>: see introduc

03:03:23
<transcript>: See Introduction stagers. So delight delayed transitions can be taken automatically after a delay or transition can be taken automatically. It's represented in a state definition in the after property, which maps millisecond delays their transitions. Great.

03:03:26
<transcript>: Fantastic.

03:03:26
<transcript>: delay trans

03:03:26
stroopwafel26: sometimes you can convert channel points into weird keyboards

03:03:37
<transcript>: Delay transitions can be specified in the same way that you specify them on the onproperty. The problem is it's dynamic? The lattices can also be conditional with regard to a single delay value. So after 1000.

03:03:48
<transcript>: Or Delay Transitions Committee can be conditional for multiple delays. First selected delay transition will be taken, which will prevent later transition from being taken.

03:03:53
<transcript>: Conditional delay transitions can also be specified as an array.

03:04:04
<transcript>: Delay expressions on transitions. Delayed transitions to show that the after property can have dynamic delays.

03:04:04
<transcript>: specified either

03:04:06
<transcript>: Specified either by string delay reference.

03:04:06
<transcript>: so

03:04:10
<transcript>: So here after light delay.

03:04:10
<transcript>: we got

03:04:11
<transcript>: We got a yellow.

03:04:22
<transcript>: From yellow after yellow light delay. We got a red, and those are gonna be delays here. Yeah. So context and event, but my problem is.

03:04:26
<transcript>: Does it only when does it.

03:04:26
<transcript>: when does it

03:04:28
<transcript>: When does it call this.

03:04:28
<transcript>: because

03:04:33
<transcript>: Because the context will have what I need to tell you if the delay is.

03:04:39
<transcript>: Let's see.

03:04:47
<transcript>: Or just like conditions like transition, prefer using strong string delay references. Just like the first example or in the delay property.

03:04:49
<transcript>: Okay.

03:04:56
<transcript>: So if you just want to send an event after a delay, you can specify the delay as an option. The second argument of the send Action crater.

03:05:02
<transcript>: You can also prevent those delayed events from being sent by canceling them.

03:05:08
<transcript>: Oh the follow sounds gotcha.

03:05:13
<transcript>: Now we have to figure out how to convert points to cold arches.

03:05:19
<transcript>: Sometimes you can convert channel points in a weird gameboard. That's true.

03:05:22
<transcript>: Got.

03:05:22
<transcript>: two sonic key

03:05:24
<transcript>: Two Sonic Keyboards Coming on Thursday.

03:05:27
<transcript>: We'll do a little build string.

03:05:38
stroopwafel26: 2 keyboards so you can type faster

03:05:47
icedcoffefe: keykahps?

03:05:47
<transcript>: Actually, one of them's already built the other one is not. So we'll build the other one, but we have to put key cops on the first one, I guess. And I have to switch this top. So I think they built them in a way I wasn't expecting they swapped the colors anyway. Mode put together one of them for me because I asked them to because this one that they put together sounds amazing. And I want this one to sound just as good.

03:05:49
<transcript>: So.

03:05:49
<transcript>: we'll see

03:05:51
<transcript>: We'll see see if it sounds just some good.

03:05:57
<transcript>: Keycaps. That's right.

03:06:08
jenswoeste: so seal/crazy - approx 20 secs in - thats totally your follow sound ;)

03:06:14
<transcript>: So I think we can actually maybe do this. Delay expressions. The delay option can also be evaluated as a delay expression, which is a function that takes in the current context and events that triggered the send action and returns the resolve delay in milliseconds. Let's think about this.

03:06:16
<transcript>: Initial state.

03:06:18
<transcript>: Who.

03:06:18
<transcript>: so

03:06:20
<transcript>: So idle.

03:06:25
<transcript>: And then pending. Where is the delay here? So here we go.

03:06:25
<transcript>: send

03:06:26
<transcript>: Send.

03:06:26
<transcript>: so this is

03:06:30
<transcript>: So this is a pending state. When we enter it, we send an event.

03:06:30
<transcript>: okay

03:06:32
<transcript>: Okay.

03:06:32
<transcript>: we

03:06:33
mergin: what is this?

03:06:35
<transcript>: We send the finish event, but we determine the delay.

03:06:37
<transcript>: From.

03:06:37
<transcript>: customization

03:06:39
<transcript>: Customization.

03:06:39
<transcript>: weight

03:06:40
<transcript>: Weight, property.

03:06:42
thdxr: x s t a t e

03:06:44
<transcript>: The problem is.

03:06:44
<transcript>: there's no

03:06:49
<transcript>: There's no entry into a state that can confidently tell me.

03:06:51
<transcript>: It did.

03:06:51
<transcript>: like the time

03:06:57
<transcript>: Like the timer could go off when you're in the middle of any of these States. So I don't think that approach works.

03:06:57
<transcript>: right

03:06:59
<transcript>: Right.

03:07:01
<transcript>: No, I don't think so.

03:07:07
<transcript>: Interpret.

03:07:12
<transcript>: Okay.

03:07:12
<transcript>: i think

03:07:17
<transcript>: I think though I think I saw a way we could do this. I think we could do it up here.

03:07:28
<transcript>: So when we enter. Okay, delayed transitions right here. So a dynamic delayed transition, potentially.

03:07:30
<transcript>: I think.

03:07:30
<transcript>: could work

03:07:32
<transcript>: Could work.

03:07:32
<transcript>: when

03:07:35
<transcript>: When we enter here, when we enter active.

03:07:39
<transcript>: Play.

03:07:45
<transcript>: So start game. This is an event.

03:07:48
<transcript>: Now.

03:07:55
<transcript>: It's like a.

03:08:05
mergin: its interesting.

03:08:11
<transcript>: Solely the fall sounds.

03:08:11
<transcript>: it's actually

03:08:15
mergin: i need to read a bit more about this

03:08:17
<transcript>: It's actually, I pulled it from my theme song Xando. Thanks for the follow.

03:08:17
<transcript>: it's pulled from

03:08:21
<transcript>: It's pulled from my X Brake Master cylinder theme song.

03:08:24
<transcript>: But it sounds just like it.

03:08:24
<transcript>: now i'm very

03:08:27
<transcript>: Now, I'm very curious 20 seconds in.

03:08:27
<transcript>: seal crazy

03:08:30
<transcript>: Seal crazy let's just let's just see.

03:08:30
<transcript>: let's just see

03:08:31
<transcript>: Let's just see.

03:08:38
<transcript>: Here we go.

03:08:51
<transcript>: Oh, wow. Very similar. Yeah.

03:08:53
<transcript>: Based on.

03:08:59
<transcript>: Good call out yens good call out.

03:09:03
<transcript>: Merging? Yeah, it's X state.

03:09:03
<transcript>: so

03:09:06
<transcript>: So I thought I had it. I thought I had a way we could do this.

03:09:12
<transcript>: I thought when we enter the active, we could then have this delayed transition.

03:09:12
<transcript>: but now

03:09:16
<transcript>: But now I'm realizing like I don't know what would.

03:09:21
<transcript>: Oh, well, okay, yeah. Active goes to game over.

03:09:27
<transcript>: On a delay in that delay. Yeah, yeah. The delay is dynamic, right.

03:09:27
<transcript>: so this

03:09:29
<transcript>: So this is an after.

03:09:32
<transcript>: And the delay is going to be like.

03:09:37
<transcript>: Fires or something.

03:09:37
<transcript>: okay

03:09:39
<transcript>: Okay.

03:09:39
<transcript>: factor

03:09:41
<transcript>: Factor expires.

03:09:41
<transcript>: and that

03:09:45
<transcript>: And that expires delay will be dynamic. Okay.

03:09:49
<transcript>: We're right.

03:09:56
<transcript>: Okay.

03:09:56
<transcript>: let's rename

03:10:00
<transcript>: Let's rename this so this event is going to be.

03:10:03
<transcript>: New game.

03:10:05
jenswoeste: its fun when you hear a sound that you somehow recognise but cant quite pinpoint it. And then suddenly you have it (and you cant shake it again)

03:10:05
<transcript>: Or I guess start game.

03:10:05
<transcript>: same

03:10:08
<transcript>: Same event as this right.

03:10:16
<transcript>: I think that's it that's our state machine, right.

03:10:16
<transcript>: i think we figured

03:10:18
<transcript>: I think we figured it out.

03:10:20
<transcript>: So we have an answer.

03:10:20
<transcript>: service

03:10:24
<transcript>: Service. We have to fill out.

03:10:24
<transcript>: okay

03:10:26
<transcript>: Okay. Can I simulate this.

03:10:28
<transcript>: Start game.

03:10:34
<transcript>: I guess I can't, because Expires is a dynamic delay, right? I don't know how it's gonna work.

03:10:36
<transcript>: So.

03:10:36
<transcript>: guess

03:10:37
<transcript>: Guess.

03:10:37
<transcript>: we

03:10:40
<transcript>: We do the guess we get an answer back.

03:10:40
<transcript>: after

03:10:43
<transcript>: After 2 seconds it should go to guessing again.

03:10:47
<transcript>: Is it not doing it.

03:10:54
<transcript>: I have to manually click. Okay, so just keep doing this.

03:10:54
<transcript>: until

03:10:56
<transcript>: Until eventually it goes to game over.

03:11:02
<transcript>: And we can start game again. I think that's good. That's the bones of it. Right.

03:11:05
<transcript>: So Let's.

03:11:05
<transcript>: let's

03:11:07
<transcript>: Let's export it.

03:11:16
<transcript>: Let's export.

03:11:20
<transcript>: How did I do that before.

03:11:26
<transcript>: Export. Here we go, JSON. And now I can paste this into this one over here.

03:11:32
<transcript>: Then you created a new thing over here just to not break this one.

03:11:32
<transcript>: think so

03:11:33
<transcript>: Think so.

03:11:39
<transcript>: Let's see. How do I do that.

03:11:49
<transcript>: I want to create a new here, I guess.

03:11:52
<transcript>: Oh Oops.

03:11:52
<transcript>: nope

03:11:54
<transcript>: Nope.

03:11:56
<transcript>: Nope Nope Nope Nope.

03:12:06
<transcript>: There we go.

03:12:09
stroopwafel26: @JensWoeste a fun twist on that https://en.wikipedia.org/wiki/Mondegreen

03:12:16
<transcript>: That should be our machine. Let's visualize it. Sorry. I've got a P. I. Just. I've got two. And in the middle of one of my favorite songs.

03:12:16
<transcript>: in the middle

03:12:19
<transcript>: In the middle of my favorite song? I've got to take a break to pee.

03:12:19
<transcript>: feels bad

03:12:20
<transcript>: Feels bad.

03:12:26
<transcript>: Sunny Here the sound that you somehow recognize I can't quite pinpoint it and suddenly you have it.

03:12:28
<transcript>: Alright.

03:14:03
jenswoeste: @JensWoeste stayin alive by the beegees. When I was a kid I thought they sang "Stena Line" (which is the name of a cruise company here in scandinavia) LUL

03:14:26
jenswoeste: @JensWoeste Also I thought bryan adams was singing "got my first real s e x dream"

03:15:17
thdxr: adam we see you tweeting from the toilet

03:15:23
jenswoeste: LUL

03:16:08
jenswoeste: @thdxr can you judge from the length whether its one or twohanded typing?

03:16:35
thdxr: BUSTED

03:16:38
<transcript>: Oh, Red Chat. Right. As they took a drink. Then that was too much.

03:16:38
<transcript>: woo i got

03:16:40
<transcript>: Woo I gotta remember who.

03:16:49
<transcript>: Caught me.

03:16:49
<transcript>: you got me

03:16:50
<transcript>: You got me.

03:16:53
<transcript>: I love it so much.

03:16:53
<transcript>: okay

03:16:57
<transcript>: Okay, fetch machine. That's not it. Game. This.

03:17:00
<transcript>: I apologize.

03:17:07
<transcript>: Gotta remember who I'm interacting with on Twitter.

03:17:07
<transcript>: next you got

03:17:11
<transcript>: Next you got me all rattled. It's the first I've ever felt rattled on Twitch.

03:17:20
andreull: throne tweeting

03:17:25
<transcript>: Okay. What are we doing here? So I think do we decide this is good X state after expires game after what is this.

03:17:28
<transcript>: Start game. Okay.

03:17:28
<transcript>: how do i

03:17:29
<transcript>: How do I.

03:17:31
<transcript>: Look at this.

03:17:31
<transcript>: stage

03:17:35
<transcript>: Stage checking answer showing Active. Okay.

03:17:35
<transcript>: initial

03:17:40
<transcript>: Initial after expires target game over and expires is going to be a delay.

03:17:44
<transcript>: So like with option with config.

03:17:44
<transcript>: de

03:17:48
<transcript>: Delays. Just something like this, right? It's gonna be.

03:17:50
<transcript>: Expires.

03:17:53
<transcript>: And that takes context and event.

03:17:55
<transcript>: It returns.

03:17:59
<transcript>: Delay. Right.

03:17:59
<transcript>: some kind of number

03:18:01
<transcript>: Some kind of number, I guess.

03:18:04
<transcript>: Yeah. Number. Okay.

03:18:09
<transcript>: So what it's going to return is like context.

03:18:09
<transcript>: oh

03:18:12
<transcript>: Oh, we can actually do this. Let's actually.

03:18:12
<transcript>: do this

03:18:14
<transcript>: Do this.

03:18:18
<transcript>: Our context. We know it. It's this thing.

03:18:20
<transcript>: Oof.

03:18:26
<transcript>: It's this thing.

03:18:28
<transcript>: Context. There it is.

03:18:33
<transcript>: How do I want to Yap? Yep. That thing.

03:18:38
<transcript>: Just like that.

03:18:38
<transcript>: i guess it's an

03:18:41
<transcript>: I guess it's an interface instead of a type. Does it matter.

03:18:45
<transcript>: Game. Oh, it doesn't know any of these types.

03:18:52
<transcript>: Doesn't matter. I guess it doesn't matter. We're gonna do all this and react, so I should probably just calm down.

03:18:52
<transcript>: close

03:18:54
<transcript>: Close that.

03:19:07
<transcript>: Advanced Type Script usage.

03:19:07
<transcript>: is what you call this

03:19:08
<transcript>: Is what you call this.

03:19:12
<transcript>: But Ultimately, it's gonna be like.

03:19:12
<transcript>: return

03:19:13
<transcript>: Return.

03:19:16
<transcript>: Date.

03:19:16
<transcript>: now

03:19:17
<transcript>: Now.

03:19:19
<transcript>: Context.

03:19:19
<transcript>: i don't

03:19:23
<transcript>: I don't even know if that's right. It's gonna be something like something like this.

03:19:26
<transcript>: Let's just copy it all over now.

03:19:27
stroopwafel26: @JensWoeste I still sing "AH AH AH AH STENA LINE STENA LINE"

03:19:32
<transcript>: Oh no no.

03:19:39
<transcript>: Copy.

03:19:52
<transcript>: Contact.

03:19:52
<transcript>: so here

03:19:53
<transcript>: So here.

03:19:53
<transcript>: delet

03:19:55
theruggedbear: what are you using for window resizing ? Rectangle ?

03:19:56
<transcript>: Delete this one. I guess.

03:19:58
<transcript>: Just right when I.

03:20:02
<transcript>: Know what I do.

03:20:04
<transcript>: 23 J.

03:20:12
<transcript>: The lead it. I need to see any of that services. I know what to do there. Right.

03:20:14
<transcript>: I know what to do. There.

03:20:18
<transcript>: We are importing create machine. And we're also going to import.

03:20:22
<transcript>: Import Use machine.

03:20:24
<transcript>: From.

03:20:24
<transcript>: at

03:20:26
<transcript>: At XD react. Yep.

03:20:31
<transcript>: Okay. Now let's copy this whole thing again.

03:20:35
<transcript>: Actually, I just need to copy.

03:20:38
<transcript>: The Create Machine, right.

03:20:40
<transcript>: For the Game machine.

03:20:40
<transcript>: yeah

03:20:41
<transcript>: Yeah.

03:20:44
<transcript>: Okay.

03:20:46
llcoolchris_: Your nvim setup is clean

03:20:54
<transcript>: Has a game around a result. A choice.

03:20:58
<transcript>: Initial is idle on start game of active.

03:20:58
<transcript>: we have

03:21:01
<transcript>: We have a game over state.

03:21:08
<transcript>: On start game. Target active. Okay.

03:21:08
<transcript>: after

03:21:13
llcoolchris_: Are your using native LSP or Coc?

03:21:24
stroopwafel26: @theruggedbear yabai

03:21:24
<transcript>: After expires, that's where we're gonna define our delay and we're going to hope that thing. I just don't know if that thing gets like, invoked repeatedly. I don't know when that thing gets invoked. That's the problem, I guess is it needs to get invoked if it gets invoked on every transition inside the active state machine.

03:21:24
<transcript>: that'd be perfect

03:21:28
cowfacedude99: @LLCoolChris_ native lsp

03:21:28
<transcript>: That'd be perfect. I just don't know if it will we're gonna find out.

03:21:34
<transcript>: When it expires, it goes to game over. It's got its own substates guessing.

03:21:34
<transcript>: goes to check

03:21:36
<transcript>: Goes to checking answer on guests.

03:21:39
<transcript>: Check the answer invokes the answer.

03:21:45
<transcript>: Prpc mutation and goes to showing answer when it's done.

03:21:52
<transcript>: And then showing answer after 2 seconds goes back to guessing. Okay that's our machine feels good.

03:21:52
<transcript>: i think that's

03:21:57
<transcript>: I think that's all fine. Now let's start actually trying to piece this all together.

03:21:57
<transcript>: so

03:21:59
<transcript>: So here we're gonna do use machine.

03:22:04
<transcript>: Something I don't know what it is we're gonna find out use machine.

03:22:04
<transcript>: and it's gonna be

03:22:07
<transcript>: And it's gonna be our Game machine.

03:22:07
<transcript>: then we can

03:22:09
<transcript>: Then we can pass options. Right.

03:22:11
<transcript>: Oh.

03:22:17
<transcript>: I think we can pass options here.

03:22:24
<transcript>: Can have things like services. Yeah. Okay. So in here, we're gonna have delays.

03:22:26
<transcript>: To have expires.

03:22:28
<transcript>: Right.

03:22:32
<transcript>: Okay. Return one. Whatever.

03:22:32
<transcript>: and

03:22:35
<transcript>: And then we also can have.

03:22:37
<transcript>: Delays.

03:22:40
<transcript>: Was It services.

03:22:44
<transcript>: And the services we need to have an answer. Service.

03:22:44
<transcript>: which

03:22:50
<transcript>: Which also gets context in the event and it returns a promise right.

03:22:55
<transcript>: Okay.

03:23:07
<transcript>: Think about this. So this is gonna be our mutation. It's gonna call. Well, it's this one right. Handle answer. Oh, Geez.

03:23:11
<transcript>: This one. Yeah.

03:23:11
<transcript>: so this

03:23:15
<transcript>: So this is the this is currently does all of the answer stuff.

03:23:19
<transcript>: Oh, what is going on? So much broken.

03:23:19
<transcript>: new

03:23:21
<transcript>: New round.

03:23:26
<transcript>: Handle resistance.

03:23:29
<transcript>: What is all this.

03:23:32
<transcript>: Handle news.

03:23:38
<transcript>: That's when you click the button.

03:23:41
<transcript>: In a new game, it's called.

03:23:43
<transcript>: Right.

03:23:43
<transcript>: yeah

03:23:44
<transcript>: Yeah.

03:23:44
<transcript>: state

03:23:45
<transcript>: State.

03:23:50
<transcript>: All of this is making my head hurt.

03:23:50
<transcript>: i just

03:23:56
<transcript>: I just kind of want to delete it all and just rebuild, but I feel like I'm gonna miss out on all this that I already did.

03:23:58
<transcript>: We just rebuild.

03:24:01
<transcript>: We start from scratch.

03:24:10
<transcript>: What am I using for it's? Yubai. That's right. Street told you I didn't need to read that at all.

03:24:10
<transcript>: you buy

03:24:13
<transcript>: You buy you buy you bye I love saying you buy.

03:24:17
<transcript>: Indium Services Clean Hey, Think, Hello, Cool, Chris, Hey.

03:24:19
theruggedbear: yeah, from scratch sounds better

03:24:21
<transcript>: Shout out Hello, Cool, Chris.

03:24:21
<transcript>: i

03:24:22
stroopwafel26: bye bye yabai

03:24:22
adamdotdev: !so LLCoolChris_

03:24:23
<transcript>: I.

03:24:23
fossabot: Shout out to LLCoolChris_! Go follow them at twitch.tv/llcoolchris_ - they were last seen playing Software and Game Development!

03:24:27
<transcript>: Saw you. I watched your stream one day when.

03:24:27
<transcript>: somebody

03:24:32
<transcript>: Somebody rated you. I don't remember who it was now.

03:24:32
<transcript>: somebody

03:24:34
<transcript>: Somebody rated you.

03:24:41
<transcript>: And I was watching that somebody when they did. And I got to watch you for a bit.

03:24:43
<transcript>: Thanks for coming along.

03:24:44
theruggedbear: @theruggedbear thank you <3

03:24:49
llcoolchris_: Oooh! Ansible I think!

03:24:49
<transcript>: Okay. So we want from scratch that's the vote.

03:24:52
<transcript>: Rugged Bear says from scratch.

03:24:54
llcoolchris_: Thanks man!!!

03:25:00
<transcript>: Ansible. Was that what it was? Stars. Well, yes, he rated you and we all came in speaking English.

03:25:02
<transcript>: And.

03:25:13
<transcript>: I remember vividly. You were not. You were speaking French. We did no French. So we just started thinking English. And of course, you know too Languages, because you're not American.

03:25:19
<transcript>: Okay.

03:25:19
<transcript>: handle

03:25:21
<transcript>: Handle, answer.

03:25:25
<transcript>: Do I want to do all this right now.

03:25:25
<transcript>: answer

03:25:27
<transcript>: Answer mutation.

03:25:27
<transcript>: here

03:25:28
<transcript>: Here.

03:25:28
<transcript>: this is the code

03:25:32
<transcript>: This is the code, basically, right. We're just gonna copy all that.

03:25:33
llcoolchris_: I moved to Canada ahah I had to step up my English game

03:25:35
<transcript>: I don't know what handle result is.

03:25:40
<transcript>: But I know I'm gonna do this.

03:25:46
<transcript>: Can this be async.

03:25:46
<transcript>: can

03:25:48
<transcript>: Can it be.

03:25:48
<transcript>: i think so

03:25:48
theruggedbear: !theme

03:25:49
fossabot: Adam uses the Dracula theme and the Operator Mono font in VSCode.

03:25:49
<transcript>: I think so.

03:25:53
<transcript>: This B. I think.

03:25:53
<transcript>: now i'm just showing

03:25:56
<transcript>: Now I'm just showing my ignorance. I don't know.

03:26:01
stroopwafel26: what's this vscode thing?

03:26:01
<transcript>: Okay.

03:26:04
<transcript>: So answer.

03:26:04
<transcript>: answer

03:26:06
cowfacedude99: I sometimes find it funny that being multilingual is something common in the US

03:26:06
<transcript>: Answer is a service.

03:26:10
<transcript>: The event itself should have a payload on it.

03:26:12
<transcript>: How does that work.

03:26:12
<transcript>: how

03:26:18
thdxr: @stroopwafel26 good news I found a real stroopwafel the other day - delicious

03:26:19
<transcript>: How does that work? Any event object? Can I strongly type this thing.

03:26:23
<transcript>: How do I strongly type X state.

03:26:23
<transcript>: if i want that

03:26:26
<transcript>: If I want that to be of a type something.

03:26:30
<transcript>: I can't do this. Can I.

03:26:37
<transcript>: Do that, right? No, I have that script works.

03:26:40
stroopwafel26: @stroopwafel26 nice! but I'm a real stroopwafel too

03:26:44
<transcript>: Answer.

03:26:46
<transcript>: Answer, answer.

03:26:54
stroopwafel26: I had so many I turned into one

03:26:55
<transcript>: So I guess I'm just going to ignore I'm just gonna just cast this thing.

03:26:58
<transcript>: Const.

03:26:59
<transcript>: constant

03:27:00
<transcript>: Constant.

03:27:01
<transcript>: constantly

03:27:02
<transcript>: Constantly.

03:27:08
<transcript>: Event object.

03:27:10
<transcript>: What does that mean.

03:27:10
<transcript>: what does that supposed to mean

03:27:11
<transcript>: What does that supposed to mean.

03:27:15
<transcript>: Payload, body.

03:27:19
<transcript>: Data. I don't know what's on this thing.

03:27:27
<transcript>: Let's go to services.

03:27:32
<transcript>: Some machine Options services.

03:27:32
<transcript>: key context

03:27:34
<transcript>: Key context. Okay.

03:27:34
<transcript>: dissolves

03:27:37
<transcript>: Dissolves types made a meta.

03:27:46
teej_dv: lllllllllllllllllllll

03:27:46
<transcript>: Events causing services. I don't know. Does anyone know how to how to make this.

03:27:46
<transcript>: more

03:27:48
<transcript>: More type friendly.

03:27:51
<transcript>: Tee. Just here.

03:27:51
<transcript>: hello tee

03:27:53
<transcript>: Hello, Teege.

03:27:54
teej_dv: (that's a lot of L)

03:27:56
<transcript>: And.

03:28:00
<transcript>: You move to Canada.

03:28:03
<transcript>: And step up my English game.

03:28:04
<transcript>: That's awesome.

03:28:10
<transcript>: Need to update my themes thing.

03:28:10
<transcript>: is not

03:28:11
<transcript>: Is not vs. Code.

03:28:21
<transcript>: Yeah. Being multilingual is something common in these sometimes find it funny that being multilingual is something common in the US. It is.

03:28:29
<transcript>: I feel like only people who are cool, and they flex a lot. I bet DAX has a lot of not that you flex a lot, but you're cool.

03:28:29
<transcript>: they actually know multiple

03:28:33
<transcript>: They actually know multiple languages. I just. I know the answer. You probably do.

03:28:33
<transcript>: use

03:28:36
<transcript>: Use Arch Linux. I mean come on.

03:28:37
thdxr: yes lol

03:28:40
<transcript>: That's a lot of L oh, my.

03:28:40
<transcript>: you're just

03:28:45
stroopwafel26: you use arch btw?

03:28:45
<transcript>: You're just teasing me. He does. Of course you do. Dax. What other languages do you know? I have to know.

03:28:45
<transcript>: yeah

03:28:48
<transcript>: Yeah, I do a lot of days.

03:28:48
nexxeln: hi

03:28:50
<transcript>: A lot of else.

03:28:51
teej_dv: <- english only pleb

03:28:56
<transcript>: Sometimes I remember, like, oh, I'm gonna go over there, but mostly Fu. That's funny.

03:29:00
thdxr: I cheated because I was born in india so I learned a different language at birth

03:29:01
nexxeln: i know 3 languages

03:29:01
<transcript>: Thank. I want to go to that used state F you.

03:29:03
theruggedbear: fu LOL

03:29:03
<transcript>: If you react.

03:29:03
<transcript>: that's how i feel

03:29:04
<transcript>: That's how I feel.

03:29:05
thdxr: have to learn spanish now though

03:29:07
sergioquijano: Advantages of living in spain.

03:29:12
<transcript>: You know three languages. Next. Geez, Geez, I'm with you English. Only that's me.

03:29:14
<transcript>: You search by the way.

03:29:21
<transcript>: Cheated because I was born in India. So I liked a different language of birth. Well, that helps I hear it's easier when you're looking.

03:29:24
cowfacedude99: @nexxeln I know 4.

03:29:25
<transcript>: Of age.

03:29:25
<transcript>: have to learn

03:29:28
<transcript>: Have to learn Spanish now Whew.

03:29:28
<transcript>: cat

03:29:28
sergioquijano: You know spanish and english and get along in most of the countries

03:29:31
<transcript>: Cathy's in those four languages.

03:29:31
<transcript>: you guys

03:29:33
nexxeln: well actually i know english, hindi python javascript go

03:29:35
stroopwafel26: I speak Dutch, English, German and Swedish :)

03:29:40
<transcript>: You guys, you're all making me feel real bad. Okay, maybe the Americans knowing one language thing is not true. It's just me. I just know one language.

03:29:41
offbyjohn: Any Welsh speakers? Just me? Thought so.

03:29:44
<transcript>: Stroop. You speak Dutch, English, German, and Swedish.

03:29:44
llcoolchris_: I know enough English to work as a senior dev

03:29:45
theruggedbear: i know 4: romanian, english, js, php Kappa

03:29:47
<transcript>: How does your brain? How does it do that.

03:29:53
wuelnerdotexe: Hola, alguien dijo español ?? CoolCat

03:29:53
<transcript>: Next you know English, Hindi, Python, JavaScript.

03:29:54
jenswoeste: danish, swedish, norwegian, german and basic french

03:29:58
llcoolchris_: Not enough English to be mad funny at work but you know

03:30:02
jenswoeste: english obviously

03:30:02
thdxr: tbh I need to work more on my english first

03:30:07
<transcript>: I'm gonna learn something I'll never need to know. Like, Mandarin. Just that's, like a. That's a nerd, like ink. That's a nerd.

03:30:07
<transcript>: mult

03:30:07
andreull: CE FACI?

03:30:11
wuelnerdotexe: Hellow, people \∆/

03:30:17
<transcript>: Multilingual Flex like I know Mandarin in English. I never have to use Mandarin, but Spanish would be the practical choice. There's a lot of Spanish in America.

03:30:18
llcoolchris_: Enough to follow @teej_dv YouTube videos ahah

03:30:19
sergioquijano: Oh my god, you've never seen code written in spanish

03:30:20
wuelnerdotexe: Greetings from Guatemala 🇬🇹

03:30:20
<transcript>: Not enough English to be mad funny at you. We're, you know.

03:30:21
teej_dv: LUL not thinking mandarin will be default language after collapse of america

03:30:26
<transcript>: You guys and all your your languages.

03:30:30
<transcript>: Anybody else speak Welsh.

03:30:30
<transcript>: off by john

03:30:30
cowfacedude99: and I can understand another ( based on the context LUL)

03:30:32
<transcript>: Off by John. Is he alone.

03:30:35
teej_dv: @LLCoolChris_ <3

03:30:38
<transcript>: Need to work under English. Yeah, that's me.

03:30:40
stroopwafel26: Welsh is just a lot of "oy mate"

03:30:50
<transcript>: Guatemala.

03:30:56
<transcript>: Oh, that's not a good call. Teach.

03:30:56
<transcript>: what

03:31:00
<transcript>: What's the timeline on Claps of America? What are we at now.

03:31:00
<transcript>: is it

03:31:01
<transcript>: Is it.

03:31:01
<transcript>: over

03:31:04
theruggedbear: @stroopwafel26 the accents are insane doe

03:31:06
<transcript>: Over under five years. I guess When's the next election? 2024.

03:31:07
teej_dv: depends how much javascript you keep writing OMEGALUL

03:31:11
llcoolchris_: @teej_dv you bash and prime are the reason why I use vim today lol

03:31:14
<transcript>: Yeah. Not looking good. I would say the 2024 election does not it's not look good around here.

03:31:17
stroopwafel26: @stroopwafel26 u wot mate

03:31:18
teej_dv: @LLCoolChris_ <3 <3 <3

03:31:23
<transcript>: Love it.

03:31:23
<transcript>: i like

03:31:27
<transcript>: I like when teaches. Here you get ready to stream, teach.

03:31:33
teej_dv: maybe ^_^

03:31:37
<transcript>: I don't watch teach dream in too long. What are we doing here? I want to strongly type event. Oh yeah, I'm gonna search that. I'm gonna Google that X state.

03:31:41
<transcript>: Type, script, events.

03:31:43
<transcript>: Using TypeScript.

03:31:48
<transcript>: Machine? Oh, oh, here we go.

03:31:50
<transcript>: This is what I'm looking for.

03:31:50
<transcript>: so you can

03:31:52
<transcript>: So you can define a schema.

03:31:57
<transcript>: I guess I'm already doing that game machine. Let's go up here.

03:32:03
<transcript>: Not defining a schema, but I thought I was defining context. Oh, context isn't like a generic.

03:32:07
<transcript>: Wait a minute.

03:32:12
<transcript>: What about the generics.

03:32:12
<transcript>: are there

03:32:14
<transcript>: Are there other.

03:32:21
<transcript>: Pipes on this generic T event extends as event object. Okay.

03:32:21
<transcript>: but

03:32:28
<transcript>: But like, there's more than one event. So how does that work? Generic.

03:32:30
<transcript>: Generic.

03:32:34
<transcript>: Okay.

03:32:40
<transcript>: Big machine is usually when you're defining machine config object outside of the Create machine function.

03:32:42
<transcript>: So how do the how does that work.

03:32:46
<transcript>: How does T event work.

03:32:52
<transcript>: How does that work.

03:32:52
<transcript>: okay here we

03:32:54
<transcript>: Okay, here we go. User event.

03:33:03
<transcript>: What is user event? So it's the mole. Okay, so it's a discriminator unit of all the different types. Okay, cool. This is awesome. I know how to do this now.

03:33:06
<transcript>: I know how to do this.

03:33:16
<transcript>: Maybe teaches. Maybe streaming. I haven't gotten a catch. I wish so many fun things didn't happen. Like in the evening. I just don't. I'm not at my computer.

03:33:16
<transcript>: i'm not at my

03:33:34
teej_dv: i think we'll do the finale during the day w/ prime

03:33:36
<transcript>: I'm not at my desktop, and like, I don't I can't do stuff like that on my phone, like, Watch Twitch. But I really want I want to watch one of your watch parties. I've not watched any of that Lord of the Rings. The Rings of Power is any good? I don't know. I've wanted to watch you in prime on the watch party. Like, every single time you've done it, and I just can't. So I'm like, putting my kids in the bathtub.

03:33:36
<transcript>: or something

03:33:37
<transcript>: Or something.

03:33:42
teej_dv: it's so bad haha hilarious w/ watch party

03:33:43
<transcript>: Okay. So let's do this. Let's define.

03:33:45
<transcript>: A type.

03:33:45
<transcript>: game

03:33:48
<transcript>: Game event.

03:33:50
<transcript>: Equals.

03:33:50
<transcript>: it's gonna

03:33:56
<transcript>: It's gonna be like this. So there's only a few events, right? We had, like, start game.

03:34:01
<transcript>: Bat, pokec, work.

03:34:04
<transcript>: I don't think he's there anymore, but.

03:34:04
<transcript>: this should be good

03:34:08
<transcript>: This should be good TypeScript. I'm sure X state has lots of good TypeScript in there. Right.

03:34:12
<transcript>: Start game actually doesn't have any other stuff.

03:34:19
<transcript>: We have start game. We have.

03:34:21
<transcript>: Answer.

03:34:30
<transcript>: Right. And that one is going to actually have stuff on it. It's gonna have the choice, which is a string.

03:34:30
<transcript>: okay

03:34:32
<transcript>: Okay.

03:34:36
<transcript>: Yes. Yeah. Any of other events.

03:34:40
<transcript>: Start game and guess.

03:34:40
<transcript>: that's it

03:34:41
<transcript>: That's it.

03:34:45
<transcript>: That's it so we can do this.

03:34:45
<transcript>: game

03:34:47
<transcript>: Game event.

03:34:53
<transcript>: I think we'll do the finale during the day with prime OOH during the day would be fantastic.

03:34:56
<transcript>: My work hours. I don't have.

03:35:03
<transcript>: Do I work? Does this work? It's so bad? Larry's with a watch party. Yeah, I've heard it's bad.

03:35:03
<transcript>: it's disappointing

03:35:04
<transcript>: It's disappointing to me.

03:35:04
<transcript>: because

03:35:07
<transcript>: Because I Love Lord Rings, movies.

03:35:09
<transcript>: I don't know.

03:35:14
<transcript>: Really enjoyed the first ones.

03:35:24
<transcript>: Okay. So now we have Typed events. So this is gonna work. Now.

03:35:30
<transcript>: Like here is this event. Look at this. Wait. But is it.

03:35:33
<transcript>: Is it as.

03:35:33
<transcript>: strongly

03:35:35
<transcript>: Strongly Typed, as I think.

03:35:35
<transcript>: choice

03:35:36
<transcript>: Choice.

03:35:40
teej_dv: the problem is it is so logically inconsistent. If that doesn't bother you at all, then you may still enjoy it (it is very pretty and what not). I just find the writing and the plot make no sense

03:35:42
<transcript>: It doesn't know if it's any one of those.

03:35:44
<transcript>: One. Right.

03:35:44
varunpotti: yoo hey adam!

03:35:49
<transcript>: Wait. Oh, because this answer. It doesn't know. I see.

03:35:52
<transcript>: Is there a way I can oh, wait wait.

03:35:52
<transcript>: value loading

03:35:54
<transcript>: Value Loading context.

03:35:59
<transcript>: What is user type state.

03:36:02
<transcript>: What I need to do is associate.

03:36:02
<transcript>: this

03:36:06
<transcript>: This answer service with the event.

03:36:10
<transcript>: How's that work.

03:36:14
<transcript>: Like.

03:36:18
<transcript>: Here checking answer invokes answer.

03:36:21
<transcript>: Oh.

03:36:23
<transcript>: If that's gonna invoke.

03:36:27
<transcript>: Answer. It won't have the choice on it, will it.

03:36:27
<transcript>: i'll just have to

03:36:30
<transcript>: I'll just have to get it from context. I guess.

03:36:35
<transcript>: Like.

03:36:38
<transcript>: This. This is the guess action.

03:36:38
<transcript>: or guess

03:36:42
<transcript>: Or guess event and it's going to checking answer.

03:36:42
<transcript>: this is one that

03:36:45
<transcript>: This is one that would have the choice on it.

03:36:48
<transcript>: But when it gets here.

03:36:55
<transcript>: That invoke wouldn't have yeah. Would. Yeah. The events that brought it to this state, right.

03:36:55
<transcript>: yeah

03:36:58
<transcript>: Yeah it would, but there's no way for me to tie that.

03:36:58
<transcript>: i guess down

03:36:59
<transcript>: I guess, down here.

03:37:02
<transcript>: Or like this event.

03:37:09
<transcript>: Yeah, there's no way to do that. I don't think.

03:37:12
<transcript>: Welcome to Chat? Veron. Hello.

03:37:12
<transcript>: how are you

03:37:15
<transcript>: How are you? Are you someone I know from somewhere.

03:37:15
<transcript>: like twitter

03:37:16
<transcript>: Like Twitter.

03:37:16
<transcript>: thank you for the

03:37:19
<transcript>: Thank you for the follow a little trucker man.

03:37:25
<transcript>: The problem is it is so logically inconsistent.

03:37:25
<transcript>: if that doesn't both

03:37:45
<transcript>: If that doesn't bother you at all, then you may still enjoy it. It is very pretty. And why and whatnot? I just find the writing and the plot magnet sense. I don't know if that'll bother me. I'm somebody who doesn't like, like my wife just wants to watch, like comedies. I don't enjoy comedies. I really just like a good like a good movie. I generally agree with, like, movie critics, so I probably don't like.

03:37:49
<transcript>: Bad plot lines and logical inconsistency.

03:37:49
<transcript>: my

03:38:07
teej_dv: LUL

03:38:08
<transcript>: My wife is always like, award shows, like movies that win awards are terrible to her. And I generally like them like, it's her. If critics think they're good, maybe it's like an effect, like, oh, the critics think it's good. So I just immediately like it. I'm gonna be smart enough to suss it all out. But I generally where I.

03:38:12
<transcript>: Typically, like movies that are critically acclaimed.

03:38:17
<transcript>: This isn't a movie, though. Is it's like a series or something? It's like.

03:38:17
<transcript>: i don't

03:38:20
<transcript>: I don't know what's the difference anymore.

03:38:20
<transcript>: all these

03:38:26
<transcript>: All these shows that are like ten episodes, and their only Pin episodes is that just like a really long movie.

03:38:26
<transcript>: kind of

03:38:27
<transcript>: Kind of.

03:38:33
<transcript>: Okay. So I really wanted this to be on the event.

03:38:37
<transcript>: I really wanted it to, but it may just be on the context.

03:38:42
<transcript>: So we would pass choice.

03:38:44
<transcript>: Here would be.

03:38:44
<transcript>: context

03:38:46
<transcript>: Context choice.

03:38:46
<transcript>: i guess i was

03:38:52
<transcript>: I guess I was putting the choice on the context anyway. So yeah, that makes sense. Roundup.

03:38:52
<transcript>: that's gonna be

03:38:56
<transcript>: That's gonna be context round. Id. Right.

03:38:56
<transcript>: i guess

03:38:58
<transcript>: I guess this could be null.

03:38:58
<transcript>: that would

03:39:03
<transcript>: That would be a problem, wouldn't it? Yeah. So if.

03:39:07
<transcript>: Not context. How do you avoid stuff like this.

03:39:07
<transcript>: if not

03:39:09
<transcript>: If not context round.

03:39:14
<transcript>: The. I don't know what. What would I do? Return. Promise.

03:39:18
<transcript>: Reject I don't know.

03:39:21
<transcript>: Can't do that.

03:39:21
<transcript>: think about

03:39:23
<transcript>: Think about this.

03:39:27
<transcript>: Let's think about this.

03:39:32
<transcript>: That is not undefined. I just said up here.

03:39:42
<transcript>: Does this the kind of stuff when you say JavaScript is bad. Like this kind of stuff.

03:39:46
<transcript>: Breast wouldn't let you do all this bad stuff that I'm doing.

03:39:46
<transcript>: like

03:39:49
<transcript>: Like a waiting without trying.

03:39:58
<transcript>: Mutate async.

03:39:58
<transcript>: we're trying to figure

03:39:59
teej_dv: haha, yes, that sounds like type problems

03:40:00
<transcript>: We're trying to figure out.

03:40:04
<transcript>: I don't know. Should that not be optional.

03:40:04
<transcript>: sure the context

03:40:07
<transcript>: Sure the context always have a round on it.

03:40:07
<transcript>: can you not

03:40:09
<transcript>: Can you not create a context.

03:40:09
<transcript>: until

03:40:11
<transcript>: Until you have a new game. Maybe.

03:40:17
<transcript>: We could put that on the start game.

03:40:17
<transcript>: like

03:40:22
<transcript>: Like right here we could say there's a round.

03:40:22
<transcript>: and

03:40:25
<transcript>: And there's a game.

03:40:27
<transcript>: Maybe.

03:40:37
<transcript>: Put on the contacts. So there is no context. That's gameless. Is that a thing.

03:40:37
<transcript>: can we do this

03:40:39
<transcript>: Can we do this? I'm not sure yet.

03:40:43
<transcript>: Think so. Not positive. But I think so.

03:40:49
<transcript>: Also like manipulating our context has to happen in what.

03:40:51
<transcript>: In.

03:40:57
<transcript>: I'm not sure yet, but I'm gonna say that's not optional.

03:41:00
<transcript>: Seems conceptually correct.

03:41:03
<transcript>: Okay.

03:41:03
<transcript>: so

03:41:05
<transcript>: So here.

03:41:07
<transcript>: We would say.

03:41:12
<transcript>: We get a response from the answer. Mutation.

03:41:12
<transcript>: and

03:41:14
<transcript>: And we return.

03:41:14
<transcript>: or we resolve

03:41:15
<transcript>: Or we resolve.

03:41:20
<transcript>: Right.

03:41:20
<transcript>: not handling

03:41:22
<transcript>: Not handling errors right now.

03:41:27
<transcript>: What I just do.

03:41:44
<transcript>: So.

03:41:44
<transcript>: what

03:41:45
<transcript>: What.

03:41:45
<transcript>: why

03:41:47
<transcript>: Why did it do that.

03:41:56
<transcript>: Well, I put an underscore on it. Isn't that like, doesn't that tell my Linter that I'm not using it? And I know it.

03:41:56
<transcript>: guess i could just

03:41:58
<transcript>: Guess I could just.

03:41:59
<transcript>: Do like that.

03:42:05
<transcript>: Okay.

03:42:08
<transcript>: Resolve the response.

03:42:14
<transcript>: That's our answer. And then expires, this is gonna be.

03:42:14
<transcript>: the

03:42:16
<transcript>: The context thing.

03:42:16
<transcript>: so expires

03:42:20
<transcript>: So expires needs to be the time remaining until.

03:42:23
<transcript>: We hit.

03:42:23
<transcript>: the expires

03:42:25
<transcript>: The expires, which is on.

03:42:25
<transcript>: context

03:42:26
<transcript>: Context.

03:42:39
<transcript>: Game expires. So that is a date.

03:42:43
<transcript>: You should get the time.

03:42:49
<transcript>: I guess this is in milliseconds. Right. I'm returning in milliseconds. So if I do.

03:42:49
<transcript>: now

03:42:50
<transcript>: Now.

03:42:53
<transcript>: If I do now.

03:42:55
<transcript>: Minus.

03:42:55
<transcript>: date

03:42:56
<transcript>: Date now.

03:42:56
<transcript>: minus

03:42:58
<transcript>: Minus.

03:43:03
<transcript>: That right. Think about it. Current time minus when it expires.

03:43:09
<transcript>: No. When it expires minus the current time. I need to flip those right.

03:43:12
<transcript>: Right.

03:43:20
<transcript>: So minus.

03:43:20
<transcript>: date

03:43:22
<transcript>: Date now.

03:43:22
<transcript>: is that right

03:43:23
<transcript>: Is that right.

03:43:27
<transcript>: It expires in the future, assuming it expires in the future.

03:43:29
<transcript>: The delay.

03:43:29
<transcript>: would

03:43:31
<transcript>: Would be.

03:43:33
<transcript>: Not Future time.

03:43:33
<transcript>: minus

03:43:37
<transcript>: Minus the current time? Yeah in Milliseconds, Yeah.

03:43:37
<transcript>: yeah

03:43:39
<transcript>: Yeah.

03:43:39
<transcript>: okay

03:43:40
<transcript>: Okay.

03:43:44
is_matt: That is such a clean LSP setup

03:43:51
<transcript>: So those are our I think that's all of our xDate stuff, right.

03:43:51
<transcript>: something

03:43:54
<transcript>: Something is assigned to value.

03:43:57
<transcript>: What is something? It's our state, right.

03:43:59
<transcript>: We have so many so many issues.

03:44:06
<transcript>: Let's get back up to.

03:44:09
<transcript>: This bad.

03:44:09
<transcript>: this bad

03:44:15
<transcript>: This bad. So this one we're gonna do like this. We're gonna say.

03:44:15
<transcript>: state

03:44:16
<transcript>: State.

03:44:20
<transcript>: What are the properties? Is just the context, I guess.

03:44:28
<transcript>: Use machine return.

03:44:31
<transcript>: So has a value in a context.

03:44:31
<transcript>: what

03:44:33
<transcript>: What is the value.

03:44:41
<transcript>: Context.

03:44:43
<transcript>: What are you.

03:44:50
<transcript>: I have to do the thing. I have to do this.

03:44:50
teej_dv: LUL any LUL

03:44:52
<transcript>: Context.

03:44:52
teej_dv: "typed" language

03:44:56
<transcript>: And then game event. Let's do it again.

03:44:59
<transcript>: Clearly not.

03:45:05
<transcript>: Let's see X state tight language.

03:45:14
<transcript>: Welcome to Chat. Is Matt such a clean LSP setup. Hey, thanks so much.

03:45:19
<transcript>: Yeah, I don't know. We had people help me? I had help.

03:45:19
<transcript>: dax is here

03:45:23
<transcript>: Dax is here. He was one of the people that helped me. Things were to follow serotonin.

03:45:27
<transcript>: Sometimes it I got to get off here pretty quick.

03:45:32
<transcript>: Use machine.

03:45:32
<transcript>: typescript

03:45:34
<transcript>: Typescript. That's what I want.

03:45:37
teej_dv: gotta run though :) have fun w/ the rest of stream.

03:45:41
<transcript>: Just see some people using it, right.

03:45:44
<transcript>: Use machine.

03:45:52
<transcript>: Use machine tea contacts schema in an event. Okay, so what's the schema.

03:45:58
<transcript>: States off and on feel like I should have looked at that when I was over here.

03:45:58
<transcript>: schema here we

03:46:00
<transcript>: Schema. Here we go.

03:46:21
<transcript>: Create machine. What? I use machine. I guess it's the same. So what has this different.

03:46:23
<transcript>: Well then.

03:46:28
<transcript>: Houses different.

03:46:34
<transcript>: Services. So I'm just. I'm defining.

03:46:42
<transcript>: The shape of everything in and out of the machine. I guess so. There I'm defining the service.

03:46:45
<transcript>: So now it's gonna have some type stuff.

03:46:50
<transcript>: The Vs code extension oh CT.

03:46:50
<transcript>: thanks

03:46:52
<transcript>: Thanks for coming.

03:47:06
<transcript>: Should I define this? I should define this up high on my create machine. I guess.

03:47:10
<transcript>: Okay.

03:47:15
<transcript>: Machine.

03:47:23
<transcript>: And we have initial. We're not defining a context like an initial context in here. Right.

03:47:26
<transcript>: But we can say schema.

03:47:33
<transcript>: I think this is the next thing I need to do for TypeScript.

03:47:38
<transcript>: I contact.

03:47:38
<transcript>: is

03:47:40
<transcript>: Is as.

03:47:40
<transcript>: context

03:47:42
<transcript>: Context.

03:47:44
<transcript>: Feels kind of weird.

03:47:46
<transcript>: But I don't know.

03:47:46
<transcript>: context

03:47:49
<transcript>: Context. And then we have like, service.

03:47:52
<transcript>: We have delays as well.

03:47:54
<transcript>: Maybe not.

03:47:57
<transcript>: Okay.

03:48:02
<transcript>: Do something like this. Context, events.

03:48:07
<transcript>: I don't understand the difference in doing this versus the generics.

03:48:07
<transcript>: why

03:48:09
<transcript>: Why choose generic.

03:48:14
<transcript>: And as XA is written in touch with strongly typing your state charts is useful and encouraged.

03:48:30
<transcript>: So X state.

03:48:32
<transcript>: Schema versus.

03:48:34
<transcript>: Versus.

03:48:36
<transcript>: Generic.

03:48:50
stroopwafel26: gotta run as well, gonna pick up my daughter from daycare \o/

03:48:59
<transcript>: Oh, Inversion Five, getting rid of state schema.

03:48:59
<transcript>: and instead

03:49:04
<transcript>: And instead infer the schema from the actual configuration object path passed in.

03:49:12
<transcript>: As well, very shortly.

03:49:18
<transcript>: I've reached my stream limit.

03:49:18
<transcript>: maybe we'll go

03:49:22
<transcript>: Maybe we'll go for 4 hours ten more minutes here.

03:49:31
<transcript>: It's a little unclear to me the best way to leverage type script TypeScript.

03:49:39
<transcript>: Excuse me.

03:49:57
<transcript>: To find like a good example of people doing.

03:49:57
<transcript>: xstate stuff

03:49:59
<transcript>: Xstate stuff with TypeScript.

03:50:03
<transcript>: Generic types and type. Gen.

03:50:06
<transcript>: gent

03:50:13
<transcript>: Gentle for that use instantiation expressions. However this is the upcoming future of TS and you can't quite use them today.

03:50:27
<transcript>: Xdate with type script.

03:50:29
<transcript>: And react.

03:50:32
<transcript>: Here we go.

03:50:42
<transcript>: Okay. So they're doing create machine.

03:50:42
<transcript>: they have the traffic

03:50:44
<transcript>: They have the traffic light, state.

03:50:47
<transcript>: Here.

03:50:58
<transcript>: So I don't see any TypeScript stuff.

03:51:05
<transcript>: What was I wanting to. I don't even remember what I was wanting to type at this point.

03:51:10
<transcript>: I think it was.

03:51:12
<transcript>: Here.

03:51:14
<transcript>: Like value.

03:51:14
<transcript>: is just

03:51:18
<transcript>: Is just an any context as an any.

03:51:18
<transcript>: use machine

03:51:20
<transcript>: Use machine I feel like.

03:51:20
<transcript>: should

03:51:22
<transcript>: Should know.

03:51:24
<transcript>: From that right.

03:51:24
<transcript>: why

03:51:27
<transcript>: Why is it not picking up the types? I guess.

03:51:37
<transcript>: 2021.

03:51:37
<transcript>: do i need to make

03:51:40
<transcript>: Do I need to make a video? Don't need to learn this stuff and then.

03:51:43
<transcript>: Make a video about it.

03:52:01
<transcript>: There's just so many different ways to create these. And I don't know which ones are the old ways. Which way is it? The new ways.

03:52:06
<transcript>: Machines, config.

03:52:12
<transcript>: configure

03:52:12
<transcript>: configure services

03:52:14
<transcript>: Configure Services Plus action.

03:52:20
<transcript>: Context, Schema, transitions.

03:52:20
<transcript>: schema

03:52:22
<transcript>: Schema, has States.

03:52:25
<transcript>: Transitions.

03:52:38
<transcript>: Okay. So.

03:52:38
<transcript>: there they define

03:52:41
<transcript>: There, they define their services. Fetch emails.

03:52:46
<transcript>: Assign.

03:52:51
<transcript>: So that's an action that changes the context. Right.

03:53:00
<transcript>: And then they have the X state options pass in there.

03:53:00
<transcript>: machine

03:53:08
<transcript>: Machine options, context, any. Okay, I'm getting hints at what I should do here with TypeScript, but still a little fuzzy for me.

03:53:14
<transcript>: Interface Schemas States.

03:53:22
<transcript>: Transitions, which are like Events, right? Yeah.

03:53:33
<transcript>: It's unclear to me if I should be using this machine config or the Create machine is one of them. Newer.

03:53:38
<transcript>: X state create machine versus.

03:53:40
<transcript>: Machine.

03:53:40
<transcript>: fig

03:53:42
<transcript>: Fig. Is that what it was.

03:53:44
<transcript>: Yeah.

03:53:56
<transcript>: So I see Create Machine Muse in the docs.

03:54:03
<transcript>: Okay.

03:54:09
<transcript>: So I'm going to assume that's the latest way to do things right.

03:54:19
<transcript>: No schema. Define and create machine.

03:54:19
<transcript>: is that accurate

03:54:20
<transcript>: Is that accurate.

03:54:28
<transcript>: Let's see.

03:54:36
<transcript>: Here's using TypeScript.

03:54:45
<transcript>: So this is the top example they have here create machine. They define a schema.

03:54:49
<transcript>: Which has our contacts and our events.

03:54:53
<transcript>: Okay.

03:54:57
<transcript>: But then there's type Gen.

03:55:00
<transcript>: Experimental feature.

03:55:01
<transcript>: features

03:55:02
<transcript>: Features.

03:55:07
<transcript>: So type Gen.

03:55:07
<transcript>: how does that

03:55:09
<transcript>: How does that get invoked.

03:55:09
<transcript>: oh vs code

03:55:11
<transcript>: Oh vs code extension.

03:55:15
<transcript>: So I need to do that anyone know.

03:55:15
<transcript>: do i need

03:55:17
<transcript>: Do I need to do that.

03:55:30
<transcript>: Second parameter. I mean, I'm not using this code. I could use the CLI, I guess.

03:55:42
<transcript>: Ultimately, I need to be doing this schema definition here.

03:55:45
<transcript>: As opposed to the generics I guess.

03:55:55
<transcript>: Yeah, I guess that's the trick.

03:55:55
<transcript>: and we

03:55:58
<transcript>: And we can also define services.

03:56:03
<transcript>: Which tells you the shape of the response from those services. Okay.

03:56:17
<transcript>: The generic types for Machine config are the same as those for Great machine.

03:56:17
<transcript>: useful when

03:56:21
<transcript>: Useful when you're defining machine config object outside of the Create machine function.

03:56:28
<transcript>: Okay.

03:56:28
<transcript>: and then

03:56:34
<transcript>: And then type States or concept that narrow down the shape of the overall state context based on the state value.

03:56:41
<transcript>: So that's.

03:56:41
<transcript>: where

03:56:43
<transcript>: Where user type state.

03:56:52
<transcript>: So when were at a state of idol the context should look like this.

03:56:52
<transcript>: and then

03:56:54
<transcript>: And then that's actually helpful.

03:56:54
<transcript>: yeah

03:56:56
<transcript>: Yeah, that's helpful.

03:57:04
<transcript>: User context and user is undefined. Error is undefined.

03:57:07
<transcript>: Okay.

03:57:17
<transcript>: There's more, oh, there's more.

03:57:20
<transcript>: Events as event.

03:57:20
<transcript>: contact

03:57:22
<transcript>: Contacts as context.

03:57:26
<transcript>: So let's do that. Let's do.

03:57:32
<transcript>: Service. Let's do events.

03:57:35
<transcript>: As game event.

03:57:40
<transcript>: Services.

03:57:51
<transcript>: So now I'm just going to remove these generics, I guess.

03:57:54
<transcript>: Right.

03:57:56
<transcript>: Pink.

03:58:00
<transcript>: Start game has around in a game.

03:58:04
<transcript>: But I guess these are optional.

03:58:18
<transcript>: Start game. I guess we could do the invoke inside our state machine as well.

03:58:18
<transcript>: we could have

03:58:24
<transcript>: We could have start game to the invoke to get the game ID and all that right.

03:58:34
dannyfritz: What is Awguess?

03:58:34
<transcript>: Yeah, I like that. Let's do it. That's gonna be an invoke. Let's go back to well, I said I was almost done. Deny that should probably be done.

03:58:36
<transcript>: And.

03:58:39
<transcript>: You want to see.

03:58:43
cowfacedude99: !awguess

03:58:43
fossabot: awguess is a guessing game where you're given an AWS service icon and you have to choose the correct service! https://github.com/adamelmore/awguess

03:58:43
theruggedbear: !awguess

03:58:47
<transcript>: When you go into active.

03:58:54
<transcript>: We could do an invoice.

03:58:58
dannyfritz: heh, sounds fun

03:58:58
<transcript>: Which is start.

03:59:00
<transcript>: Okay.

03:59:03
<transcript>: And start.

03:59:07
<transcript>: On end.

03:59:12
<transcript>: Type normal.

03:59:14
<transcript>: Like I want the.

03:59:18
<transcript>: Initial state.

03:59:24
<transcript>: I want to start after the invocation is done, you know, I'm saying.

03:59:28
<transcript>: So can I do like.

03:59:34
<transcript>: And do like this.

03:59:39
<transcript>: No, this is dumb.

03:59:42
<transcript>: Right? Is this dumb.

03:59:44
<transcript>: Invoke start.

03:59:49
<transcript>: Now I create a new state. Yeah. Do that. Okay.

03:59:49
<transcript>: i thought

03:59:54
<transcript>: I thought there'd be a way maybe to say, like, don't go into this state until.

03:59:58
<transcript>: This invocation is done.

04:00:03
<transcript>: Then I could move that logic into the state machine as well.

04:00:05
<transcript>: That would feel good.

04:00:10
<transcript>: How would I do that.

04:00:10
<transcript>: what i do

04:00:12
<transcript>: What I do like this.

04:00:19
<transcript>: Yeah, done, start. And then there's no initial state. Is that what we're saying here.

04:00:23
<transcript>: Or there's like an idle state or something.

04:00:27
<transcript>: Right.

04:00:27
<transcript>: maybe there

04:00:28
<transcript>: Maybe there's like.

04:00:35
<transcript>: There's a little delay when you first started a game, there's that little delay.

04:00:35
<transcript>: where

04:00:40
<transcript>: Where we haven't actually created a game for you yet you know.

04:00:43
<transcript>: What I'm saying. Thank you so much.

04:00:43
<transcript>: for joining

04:00:46
<transcript>: For joining Chat. Danny Fritz.

04:00:51
<transcript>: Sorry I started to thank you for other things. And then I saw.

04:00:51
<transcript>: you're welcome you're

04:00:56
<transcript>: You're welcome. You're welcome. I'm welcoming you to chat. Okay. I think I've reached the point.

04:00:56
<transcript>: where

04:00:57
<transcript>: Where.

04:00:57
<transcript>: what you call it

04:00:59
<transcript>: What you call it for the day.

04:01:04
<transcript>: And I make it 4 hours, exactly 4 hours and 1 minute.

04:01:04
<transcript>: feels good

04:01:05
<transcript>: Feels good.

04:01:09
<transcript>: Well, it would have been better for this exactly 4 hours, but.

04:01:09
<transcript>: that extra

04:01:11
<transcript>: That extra minutes.

04:01:11
<transcript>: not

04:01:13
<transcript>: Not hurting anybody.

04:01:13
<transcript>: thank you everybody

04:01:15
<transcript>: Thank You, Everybody so much.

04:01:15
<transcript>: i appreciate

04:01:17
<transcript>: I appreciate all of you coming along.

04:01:22
<transcript>: It was a good day. We had David on. That was fun.

04:01:22
<transcript>: we

04:01:30
<transcript>: We we learned a whole lot about X state. I'm nerding out of this stuff. I'm pretty excited about X state for basically every project moving forward.

04:01:37
<transcript>: That's how I go. I get into something. And then everything is a nail. When I have a hammer.

04:01:40
<transcript>: Thank you, everybody again. It's been a lot of fun. I'll be back on Thursday.

04:01:43
<transcript>: Yeah, it's been good.

04:01:43
<transcript>: maybe we can do again some time

04:01:44
<transcript>: Maybe we can do again some time.

04:01:49
delvoid: Later buddy

04:01:51
jenswoeste: thanks for strimmin