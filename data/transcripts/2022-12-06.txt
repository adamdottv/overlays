

13:07:01
<transcript>: You.

13:07:02
adamdotdev: !topic embracing you all, i've missed you so

00:09:38
akuji93: I'm here to say I have all the opinions from twitter and I'm here to preach them /s

00:11:10
<transcript>: Mayor chassis. Mayor chose Merit Mare chassis. Thank you so much for the follow. I needed that I needed to follow. This morning. I'm back. It's been two weeks.

00:11:16
<transcript>: Two weeks since. Right. Two weeks today. Since I stream last. This is the longest I've gone.

00:11:16
<transcript>: without

00:11:19
<transcript>: Without interacting with you people and.

00:11:19
<transcript>: i

00:11:23
<transcript>: I need it, I need it, I need this.

00:11:27
cowfacedude99: three questions. 1. how was reinvent? 2. how was the post reinvent hangover? 3. can we expect a video on reinvent?

00:11:28
<transcript>: Aku I'm here to say I have a penins from Twitter. I'm here to appreciate.

00:11:32
<transcript>: Cafes, catch.

00:11:32
<transcript>: three

00:11:38
<transcript>: Three questions. How was Reinvent, too? How was the post reinvent hangover? Three? Can we expect a video on reinvent.

00:11:38
<transcript>: one

00:11:41
<transcript>: One. It was great.

00:11:41
<transcript>: i get the appearance

00:11:43
<transcript>: I get the appearance, I get the appeal of tech conferences.

00:11:47
akuji93: Parasocial relationship with a streamer, but this time, the streamer needs ME

00:11:49
<transcript>: It was my first tech conference, as has been well documented on the internet.

00:11:56
<transcript>: I see the it's the same reason I think I love Twitch. Interacting with other people. Turns out.

00:11:56
<transcript>: pretty great

00:11:57
<transcript>: Pretty great.

00:12:00
<transcript>: In person even better.

00:12:12
<transcript>: Yeah. There's just something about, like a bunch of adults that had similar interest to you in the same space. 600 of them in the case of reinvent.

00:12:12
<transcript>: getting the

00:12:15
xkarvel: gm

00:12:16
<transcript>: Getting the interact with a bunch of people you've met on the internet, but you haven't met in person.

00:12:16
<transcript>: do the great

00:12:18
<transcript>: Do the Great. I did a podcast.

00:12:18
<transcript>: me and dax

00:12:22
<transcript>: Me and DAX while we were in reinvent in our hotel in Vegas.

00:12:33
<transcript>: And talked more about that at length. Just publishing yesterday, tomorrow. Fm. I don't say that enough, but I have a podcast. I do have a podcast. I'm a white guy. Of course I have a bypass.

00:12:35
<transcript>: Two.

00:12:35
<transcript>: how was the post

00:12:37
<transcript>: How was the post reinvent hangover.

00:12:37
<transcript>: so physically

00:12:43
<transcript>: So physically that was on the hardest part of reinvent was it is so physically taxing.

00:12:43
<transcript>: to be in a hot

00:12:49
<transcript>: To be in a hotel room. It's a weird long. Like, I don't think other tech conferences are that long. It's a week.

00:12:49
<transcript>: in vegas

00:12:50
<transcript>: In Vegas.

00:12:53
tastefulelk: heyoo

00:12:56
<transcript>: Like I didn't sleep enough. I didn't eat at the right times or the right foods.

00:12:56
<transcript>: hey seb

00:13:05
<transcript>: Hey, Sebastians here I'd love to hear about your hangover Sebastian given you headed travel from far away and I just flew like 3 hours.

00:13:11
<transcript>: Yeah, but it was just very physically demanding. I'm normally at home. Where my wife.

00:13:11
<transcript>: reminds

00:13:21
<transcript>: Reminds me I should need that I should eat that or I should go to sleep now like didn't have any of that. Just stayed up till whenever had some drinks a couple nights.

00:13:24
<transcript>: And done that in three years. So.

00:13:24
<transcript>: the post

00:13:28
<transcript>: The Post Reinvent Hangover. It was a couple days of feeling pretty terrible.

00:13:28
<transcript>: and now

00:13:38
<transcript>: And now I'm finally feeling like I'm back to normal. I've been in my home for I followed 72 hours, something like that. And I feel much better.

00:13:44
<transcript>: So good to hang out with you. Sebastian tastes well. Elka. Sebastian.

00:13:44
<transcript>: it was so good to see

00:13:46
<transcript>: It was so good to see him at reinvent.

00:13:46
<transcript>: three

00:13:49
<transcript>: Three calfhase. Can we expect a video and reinvent.

00:13:55
assertionbit: hi

00:13:57
<transcript>: I think the podcast is probably as far as I'll go on Reema. I will say today moving my play with some stuff that was announced at reinvent.

00:13:57
<transcript>: i didn't even

00:13:59
<transcript>: I didn't even take that many pictures.

00:13:59
<transcript>: i

00:14:02
<transcript>: I realized. Like.

00:14:02
<transcript>: the public

00:14:07
<transcript>: The public trace of me being in Vegas for a week is pretty slim. There's not a whole lot.

00:14:16
<transcript>: I don't know why I'm kind of like that. I don't really get my phone at stake pictures. Very often. My wife would like me to more.

00:14:29
<transcript>: Yeah. So there's not, like, I don't have a bunch of Broll, so I need to watch, like, you run into Corey Quinn there, and he's got, like, a guy following him with a camera, and they're just shooting Broll, like, everywhere he goes, every single thing he does.

00:14:29
<transcript>: it's not

00:14:35
cowfacedude99: and 4. are you joining the aoc train hype?LUL

00:14:36
<transcript>: It's not me. I learned something in Vegas. I learned I'm not a content person, nor do I really want to be.

00:14:36
<transcript>: i

00:14:45
<transcript>: I will continue streaming. I will probably still do YouTube videos. I just. I'm not a content person. I'm not someone who's gonna ever have a guy.

00:14:45
<transcript>: following me around

00:14:52
<transcript>: Following me around. Just not me and four. Are you joining the AOC train? Height.

00:14:52
<transcript>: oh advid of

00:14:59
<transcript>: Oh, Advid of code. Oh, yes. So last week, watching it happen in Vegas, watching people do Advent of code.

00:14:59
<transcript>: i was very

00:15:14
tastefulelk: I rammed two gin tonics and a beer and managed to sleep for like 6 hours on the flight home so I actually timed the time zone change pretty well ðŸ˜…  Had so much fun at re:Invent meeting all of you but I was fed up with Vegas on like the second day..

00:15:14
<transcript>: I was very like, oh, I want to do this so bad. This looks like so much fun. I will say after a few days that Hype is worn off a little bit, but I'm happy to do one today. That'd be pretty fun. I probably couldn't do one without Twitch chat, so that'd be great.

00:15:17
<transcript>: To have you all help me solve one.

00:15:19
akuji93: It is a lot of fun. Day 4 I couldn't finish... Always got the wrong number

00:15:20
<transcript>: Searching bit. Hey there, how are you.

00:15:24
<transcript>: I Carvel Good morning.

00:15:24
<transcript>: good

00:15:26
<transcript>: Good morning.

00:15:30
<transcript>: My voice is just now, kind of sort of normal.

00:15:30
<transcript>: just

00:15:41
<transcript>: Just from like screaming the entire rim. You're just like always in a loud bar or somewhere where there's a bazillion people. And so you have to speak loudly just to get your voice where it can be heard.

00:15:41
<transcript>: so yeah

00:15:44
<transcript>: So, yeah, my throat was pretty sore.

00:15:44
<transcript>: i feel like

00:15:47
cowfacedude99: I managed till day 6 year

00:15:52
<transcript>: I feel like it's back. It's mostly back. I rammed two Gen tonics and a beer and managed to sleep for like 6 hours on a flight home.

00:15:54
xkarvel: back to code

00:16:04
<transcript>: Actually time. The time zone changed pretty well. And so shuttery. I've been meeting all of you, but is set up with Vegas on my second day. Yeah. Vegas. I can do without Vegas. I guess they do it. I guess they do it at Vegas.

00:16:04
<transcript>: because

00:16:08
<transcript>: Because that's the only place for that many people can go to a conference. I don't know.

00:16:12
<transcript>: I'm not sure Cathies, you did AOC till day six.

00:16:12
<transcript>: last year

00:16:13
<transcript>: Last year.

00:16:25
<transcript>: It's a lot of fun day before I couldn't finish. Always got the wrong number. Yeah, this does sense on we'll do it. There's a few things that went on J Stream today's. Like a variety stream.

00:16:27
<transcript>: Things I would like to know.

00:16:27
<transcript>: is

00:16:28
cowfacedude99: this year

00:16:29
<transcript>: Is rant about.

00:16:32
<transcript>: Conferences and.

00:16:32
<transcript>: situations

00:16:35
aatishsai: @akuji93 isnt 4 super easy just some less than and greater than check

00:16:41
<transcript>: Situations that are present in my life. I would not like to talk about those just because I'm tired of talking about it. But I will if I need to.

00:16:41
<transcript>: things i would like

00:16:44
delvoid: No you drive me crazy

00:16:44
shenril: what new service are you targeting to have fun with ?

00:16:46
<transcript>: Things I would like to do. I would like to listen to some good music. Kind of listen to music in, like, a week, two weeks.

00:16:54
<transcript>: I'd like to maybe do AOC will do today's. Aoc? Or should I start the beginning? I don't know. Those are questions I have.

00:16:54
<transcript>: i'd

00:16:56
<transcript>: I'd like to.

00:16:56
<transcript>: thought of something else

00:17:09
<transcript>: Thought of something else. I'd like to look at some of the stuff that was in Azure, reinvent maybe play with some of it. I still haven't even really played with anything of the new stuff that's been announced. I haven't played with JS Resolvers in AppSync and that's like right up my alley. And that was before reinvent.

00:17:12
aj_stuyvenberg: oooh we should play with js resolvers

00:17:22
<transcript>: There was something else I'm gonna show you all. Aw, guess I did launch AW, guests at Reinvent. You guys got to watch me build that quite a bit on stream. What new service are you targeting to have fun with? I think if I started pulling.

00:17:24
<transcript>: Deer.

00:17:27
<transcript>: I drive you crazy. I'm sorry.

00:17:27
<transcript>: i know joking

00:17:28
<transcript>: I know joking.

00:17:34
<transcript>: We should play with the JIT. Hey, J's. Here. I loved meeting AJ. It reinvent.

00:17:40
aj_stuyvenberg: HEYY it was great meeting you too

00:17:52
shenril: App Composer

00:17:52
<transcript>: What new song? Oh, yeah. What new service. So I'd probably want to play with. I don't know. The visual thing just does not appeal to me. Well, I forget what it's called. The one where you can like drag and drop and make serverless architectures. That doesn't sound all that fun, but I'll play with it. If anyone on the stream is aware of it and wants to see it.

00:17:53
aj_stuyvenberg: composer!

00:18:07
xkarvel: what you think about kanban

00:18:08
<transcript>: The other thing I thought about playing with oh, the like, CI CD Pipeline stuff. Composer. Thank you. App composer. Yeah, we compose that. Then there's the CI CD Pipeline stuff. I'd love to see if that's like, I don't know, good. And like, I'd rather not use GitHub actions anymore.

00:18:08
<transcript>: like i'm sure if you're

00:18:11
<transcript>: Like I'm sure if you're coming from code pipeline and like the whole.

00:18:11
<transcript>: previous

00:18:19
cowfacedude99: I started playing with sst stuff. I like it so far but the docs seem out of date a bit.

00:18:23
<transcript>: Previous generation of code tools. I'm sure it's a huge upgrade. Isn't an upgrade over just like get up actions are super easy and there's a ton of plugins. Is it better than that? I don't know. Thanks so much for the follow Huck city.

00:18:27
shenril: Code Catalyst , just played with it but actually still painful

00:18:29
<transcript>: What do you think about can ban? What is canvas? You mean like the kind of boards that you like, drag stuff around.

00:18:35
<transcript>: That. Is that what you mean? Code catalyst. Thank you. Still painful. Okay.

00:18:39
stiefbroerikzitvast: is it really worth investing so much time in AWS still, now that it's clear (even the Gartner quadrant agrees) that Oracle is taking over cloud computing

00:18:55
<transcript>: I honestly, I don't like there's things I know. Aws is like, the best in the world at and then there's things that I'm like, I don't know. I don't know if you're gonna nail this. I know a lot of people worked really hard. I'm sure it's it's great for some use cases. I just don't know, coming from, like a front end web and mobile kind of space where I come from. I don't expect them to nail, like.

00:18:55
<transcript>: my cic

00:18:58
<transcript>: My CICD workflows.

00:19:01
<transcript>: Better than GitHub actions. Step rows here.

00:19:01
<transcript>: is it really

00:19:08
<transcript>: Is it really worth investing so much time in it? But still now that it's clear even the Gartner quantity is that Oracle is taking over cloud computing point.

00:19:12
<transcript>: Does Gartner really agree that Oracle is taking over Cloud computing.

00:19:19
<transcript>: I would never question Step, bro. You're.

00:19:24
shenril: problem is that it relies on bad ground services for dev .... codepipelines is painful :D

00:19:27
<transcript>: Your accuracy and reporting, but that just seems crazy to me. Thank you for the follow. Adele, Adeles.

00:19:29
jamdotexe: Good ol' Gartner Hype Lifecycle

00:19:37
<transcript>: Started playing with SST stuff. I like it so far, but the Doc seem out of date a bit. Yes. Calfbased. Sst version two is coming out.

00:19:37
<transcript>: imminently

00:19:45
<transcript>: Imminently like very soon. And a lot of my like wanting to dive into SSD has been waiting for Ssdv, two.

00:19:45
<transcript>: so i think

00:19:46
jamdotexe: "Yes, we should invest in nanotechnology, do we need it? No"

00:19:47
<transcript>: So I think things are gonna change quite a bit.

00:19:51
cowfacedude99: @StiefbroerIkZitVast i'd say that get a little bit of everything.

00:19:54
akuji93: SST I'm also reaaaaallyyy interested. Will then prob wait for v2 as well

00:19:56
<transcript>: Problem is that it relies on bad ground services for Dev code pipelines is painful. Yeah. I've never really enjoyed using code pipelines. If I'm being honest.

00:19:56
<transcript>: go to

00:20:00
<transcript>: Go to a Gartner highlight cycle. Should invest in nanotechnology.

00:20:06
<transcript>: Okay, let's actually get let's get over onto my screen here. Ssd.

00:20:06
<transcript>: i'm also really

00:20:09
<transcript>: I'm also really interested. We'll then probably wait for V two as well.

00:20:11
<transcript>: Let's see.

00:20:11
<transcript>: let's see oh

00:20:13
caasidev: heup Adam!

00:20:18
<transcript>: Let's see. Oh, Chatby. Oh, yeah, that's another thing we'll do today. We'll play with Chat. Gtp, GPT, Chat, GPT.

00:20:18
<transcript>: because

00:20:29
<transcript>: Because it's so fun. Why not? Oh, my. It's incredible. Has everyone here played? Has everyone played with chat? Gpt. Cassie's. Here. Hey, Cassie.

00:20:29
<transcript>: let's play some

00:20:30
<transcript>: Let's play some music.

00:20:34
<transcript>: Like this.

00:20:42
<transcript>: Meal for me and about you all.

00:20:52
<transcript>: Okay, let's let's start. I'm gonna show you all. I just want to kind of put a bow in this because I'm done with it. Aw. Guess.com.

00:20:54
akuji93: Seen the example where ChatGPT found an attack vector in a smart contract? Crypto is gonna become even more unsafe

00:20:59
<transcript>: Okay. So here is AW. Guess you say play. Now you get some like stupid quotes.

00:21:04
<transcript>: I'll show you what the gameplay looks like after a little bit of Polish.

00:21:04
<transcript>: that's

00:21:06
<transcript>: That's IQ.

00:21:06
<transcript>: oh

00:21:08
cowfacedude99: is your screen frozen again?

00:21:15
<transcript>: Oh, it's not. I missed the first one. Okay, well, that's street glacier. So things that I changed? I made it where? As you get on a Street.

00:21:15
<transcript>: i made

00:21:24
<transcript>: I made it harder to get rid of high scores. So I cap the streaks at ten. So once you have a streak of eleven, you're still only getting ten points.

00:21:24
<transcript>: once you

00:21:26
asterodiaqyo: Hi. I want to offer promotion of your channel, viewers, followers, views, chat bots. The price is lower than any competitor, the quality is guaranteed to be the best. Auto-on. Incredibly flexible and convenient order management panel, everything is in your hands, turn it on/off/customize. Go to dogehype dot com

00:21:31
<transcript>: Once you have a streak of 50, you're still getting ten points per answer. So we cap that so that it can't just balloon, right.

00:21:31
<transcript>: other things

00:21:34
<transcript>: Other things I did terrible at this game.

00:21:34
<transcript>: we started

00:21:51
cowfacedude99: @asterodiaqyo warning

00:21:54
<transcript>: We started. I did a 32nd timer. I think you lose five when you miss. Oh, man, I got a hurry. You gained three when you get it. Just some like tuning to get the scores kind of reasonable. The other thing as I did when you get a big if you've got a big street going, which I will not because I'm talking, but we have like a big street going. The bigger your street gets.

00:21:54
<transcript>: the harder the

00:22:01
<transcript>: The harder the questions get. And I did that by making some, like more finegrained categories for services.

00:22:01
<transcript>: so

00:22:08
<transcript>: So if I could actually get somewhere here. So now I have a streak of five. We should start seeing it get a little harder. It's just health. Like.

00:22:21
<transcript>: So like this one event bridge, step function. See, it's like it's a bunch of services that are in the same family. Now it's getting harder. More of the questions will be more ambiguous and like harder to.

00:22:28
<transcript>: Okay, so then game over. You can do a recap of your games. I built this while in my hotel.

00:22:28
aj_stuyvenberg: ah yeah screen froze ya?

00:22:32
<transcript>: So like, here's the recap of that round shows everyone that I.

00:22:32
<transcript>: answered

00:22:39
<transcript>: Answered right, everyone that answered wrong. And then, like, what the name of the search is, what it does, right? Okay.

00:22:45
<transcript>: My screen Bros. Are you kidding me.

00:22:45
<transcript>: are you kidding me

00:22:46
<transcript>: Are you kidding me.

00:22:46
<transcript>: no

00:22:48
<transcript>: No.

00:22:48
<transcript>: ah

00:22:49
<transcript>: Ah.

00:22:52
<transcript>: Obs has drive me crazy people.

00:22:52
<transcript>: i stop driving

00:22:56
<transcript>: I stop driving me crazy right now. I'm fixing it.

00:22:56
<transcript>: so i just

00:23:00
yeltrah_: How was Vegas?

00:23:00
<transcript>: So I just did that whole demo of AW, guess. Awesome. You guys couldn't see it.

00:23:04
<transcript>: Oh, man.

00:23:15
<transcript>: It seemed the example where GPG found an attack vector in a smart contract. Whoa, Krypto's gonna become me more unsafe? That's awesome.

00:23:15
<transcript>: message

00:23:20
<transcript>: Message was deleted by moderator. What happened? What happened.

00:23:27
<transcript>: What happened? That needed to be deleted. I'm big. I can handle it. What was it? Cafe.

00:23:35
<transcript>: Heart Jeans here. Vegas was great. I did a whole podcast episode about the experience in Vegas.

00:23:42
<transcript>: So go to tomorrow FM. You can listen to me and DAX, talk about vague stuff.

00:23:44
<transcript>: That is there.

00:23:45
cowfacedude99: Hi, I want to offer promotions of your channe........

00:23:49
<transcript>: What did I do? Oh, yeah? I was trying to show you all? Aws, I cannot believe.

00:23:49
<transcript>: can i believe

00:23:51
<transcript>: Can I believe.

00:23:53
<transcript>: The entire time you couldn't see my screen.

00:23:53
stream_kyle: You have something poking into camera view

00:24:01
<transcript>: Okay. Promotions. Yeah. Yeah. Thank you. Cafe. That's the kind of stuff you want deleted if somebody comes into stream. Kyles. Here. Kyle's. Here.

00:24:01
<transcript>: i have something

00:24:04
<transcript>: I have something poking his camera view. Uhoh.

00:24:08
<transcript>: Amateur Hour. Here. What is that? That is probably.

00:24:10
<transcript>: This.

00:24:13
cowfacedude99: your greenscreen

00:24:15
<transcript>: How about that.

00:24:15
<transcript>: how

00:24:17
<transcript>: How about that.

00:24:17
<transcript>: is that better

00:24:18
<transcript>: Is that better.

00:24:26
stream_kyle: I've been missing all the streams

00:24:27
<transcript>: So calfly's the reason I was a little jumpy on the deleted message. If people come in and they have they want to be critical of me.

00:24:27
<transcript>: for being

00:24:34
<transcript>: For being involved in this conference today. Then I don't delete it. Let me talk to them. I want to talk to those people. I feel like it'd be therapeutic.

00:24:34
<transcript>: probably good for

00:24:37
cowfacedude99: spam only

00:24:41
<transcript>: Probably good for both sides. We'd learn something. So if you see something like that, you don't need to just delete it. I don't know. It might come in very aggressive. Who knows.

00:24:44
<transcript>: You've been missing all the streams, Kyle. I know.

00:24:44
<transcript>: but i

00:24:51
<transcript>: But I appreciate you being here today. Okay? So I'm gonna show you this again. I can't believe my screen was the entire time.

00:24:58
<transcript>: That I was trying to show you that it was not here. Okay, so here you start the game.

00:24:58
<transcript>: everything looks

00:25:00
<transcript>: Everything looks pretty similar here.

00:25:04
<transcript>: I changed the styling to be a little easier to read.

00:25:06
<transcript>: Let's see if I can get a streak going here.

00:25:11
<transcript>: Neuron.

00:25:21
<transcript>: And you should see I'm sorry get the start to get harder like they should all be part of the same family at some point.

00:25:25
<transcript>: Like once you have a streak of like 15.

00:25:25
<transcript>: then

00:25:30
<transcript>: Then you're getting questions that are Did I get it? Yeah.

00:25:30
<transcript>: they're like all

00:25:40
<transcript>: They're like all belonging to the same subcategory as specific as possible. And some services don't have a lot of services similar to them. So what is this.

00:25:50
<transcript>: I'm gonna show you the leaderboard. After this, it's bananas. Some of the people that have just, like, done really good scores.

00:25:50
yeltrah_: I don't want to use Twittter or LinkedIn to login..will you setup other Auth services? Like Github...

00:25:52
<transcript>: Okay.

00:25:52
<transcript>: but

00:26:13
<transcript>: But I'm now just like being too good at this. And I don't want this to drag on. I don't want to use Twitter or LinkedIn to login. We set up other off services like GitHub. Oh, yeah, I should hard. Jean. The reason I launched with Twitter and GitHub or Twitter and LinkedIn was that like I feel like if you're part of a database community and you're not on Twitter, you're probably on LinkedIn. They kind of fall into those two camps. There's a lot of very.

00:26:13
<transcript>: serious people

00:26:19
<transcript>: Serious people. So see, these are all like game ones. Like, see how that got harder? Do you see that.

00:26:39
<transcript>: Yeah. So I did Twitter and LinkedIn LinkedIn, because, like, a lot of database communities on LinkedIn. And then the crowd I hang out with is on Twitter. But GitHub would make sense. So now there's this recap you can see, like, which ones you got, right? Which ones you got rot down that get a single one wrong. I just didn't answer them very long. It shows you, like, how long it took you to guess each one. So, like, five and a half seconds between.

00:26:39
<transcript>: this one

00:26:40
<transcript>: This one.

00:26:48
<transcript>: I spent 11 seconds trying to figure out what device Farm was and then like links app to the services you can like learn something if you want while you're playing.

00:26:58
<transcript>: And then the leaderboard. Check this out. 110 points. I should put a comment that's a lot of points like that's hard.

00:26:59
<transcript>: Francois.

00:26:59
<transcript>: very good at

00:27:10
<transcript>: Very good at AW, guess. And then there's like a ton of people that just never claim their school. They're like logging with Twitter. That's that. And here we are. We got a bunch of anonymous.

00:27:14
<transcript>: I'm not even in the top ten anymore, and I feel sad about it.

00:27:24
<transcript>: Okay, that's. Aws, I just want to kind of run through it, show you all how it landed, since you all were along for a lot of journey. Okay. Chat, GPT.

00:27:30
<transcript>: I think Charge EPT is going to be.

00:27:34
privann: awsguess don't work :(

00:27:41
<transcript>: A huge deal in programming because I think like, Copilot's already awesome. This thing has the potential, I think, to do way more crazy things than copilot.

00:27:41
<transcript>: aws

00:27:42
privann: Can't do anything :(

00:27:46
<transcript>: Aws doesn't work. What Rivana? What can't do anything.

00:27:46
<transcript>: it's actually

00:27:52
<transcript>: It's actually AW guess, but I should have a redirect from AW get there a Tobs guess.

00:27:56
<transcript>: It can't do anything. What do you mean? Like you click the button and nothing happens.

00:27:58
privann: wait now

00:28:01
<transcript>: That's sad to hear maybe it only works for me.

00:28:03
privann: took some time haha

00:28:04
<transcript>: Wait now.

00:28:04
<transcript>: waiting

00:28:05
<transcript>: Waiting.

00:28:05
<transcript>: wait

00:28:07
<transcript>: Waiting.

00:28:11
privann: I didn't get any login page

00:28:13
<transcript>: And saw the latest OBS. I thought it would fix these issues with freezing. It did not.

00:28:17
privann: but some seconds later it showed up

00:28:20
aatishsai: its taking a long to load the actual game

00:28:33
<transcript>: So the thing I was so impressed with chat GPT and I know it's just like spitting out statistical nonsense. Like I get it. I would never use it to write articles. I think that is where it's gonna be really sad is when more of the internet becomes SEO garbage. What I think is useful for is like, well.

00:28:33
<transcript>: let's just

00:28:35
cowfacedude99: living on the edge is not fun LUL

00:28:36
<transcript>: Let's just take a let's just go to some code here.

00:28:36
<transcript>: github

00:28:39
<transcript>: Github overlays sure.

00:28:44
<transcript>: I played with this a little bit, but I was always on my phone and it was hard.

00:28:44
<transcript>: let's

00:28:46
<transcript>: Let's look at.

00:28:46
<transcript>: some

00:28:49
<transcript>: Some actual code.

00:28:51
<transcript>: I don't know.

00:28:54
<transcript>: What's this do.

00:28:54
<transcript>: okay

00:28:55
<transcript>: Okay.

00:28:55
<transcript>: someone just like

00:28:57
<transcript>: Someone just like, copy this.

00:28:59
<transcript>: I'm gonna copy all this.

00:29:02
<transcript>: And I'm gonna say.

00:29:07
<transcript>: Write a unit test for this function.

00:29:10
cowfacedude99: roxstar76 is writing a novel with it on stream.

00:29:20
<transcript>: My brief experience of this is this stuff kind of works. Let's see describe get access token. It should test the access token from the Spotify API.

00:29:28
<transcript>: So this one didn't actually go that far into it, I guess. Let's see.

00:29:28
<transcript>: so

00:29:31
<transcript>: So they didn't that's not really a unit test.

00:29:31
<transcript>: it's like more

00:29:34
<transcript>: It's like more of a integration test, I guess.

00:29:34
<transcript>: it's actually

00:29:34
jamdotexe: @cowfacedude99 RoxCodes, you mean :)

00:29:39
<transcript>: It's actually like not mocking. I've seen it do really complicated mocks and stubs and stuff.

00:29:39
<transcript>: which blows my

00:29:41
xkarvel: waht app is that>????

00:29:41
<transcript>: Which blows my mind.

00:29:44
akuji93: The generated tests work well for insular util functions and stuff

00:29:45
<transcript>: Singing along time to load the actual game. I don't know.

00:29:50
<transcript>: You didn't get any login page but something later it showed up.

00:29:55
akuji93: where input and output are clearly defined

00:29:57
<transcript>: Maybe that's why nobody claimed their game. Maybe I'm just not testing it on slow enough internet connections or something.

00:30:00
<transcript>: Taking along to load the actual game. Okay.

00:30:00
<transcript>: living on the edges not

00:30:01
privann: man

00:30:02
<transcript>: Living on the edges. Not fun.

00:30:04
cowfacedude99: @jamdotexe he is roxcar74 for me LUL

00:30:07
privann: i have 1 tb up and down @adamdotdev  :D

00:30:07
<transcript>: Rocks are running a novel with it on stream. Dance Money, that's awesome.

00:30:09
cowfacedude99: Inside joke

00:30:13
hideoo: Same for me, very long load time to start the game even tho i have very fast internet

00:30:13
<transcript>: What app is that the car you talk about? Gp Chat Gvt Carvel.

00:30:20
<transcript>: Generated tests work well for Insular, util functions and stuff where input and output are clearly fine. Yeah, Yeah.

00:30:20
<transcript>: exactly

00:30:25
<transcript>: Exactly. And I guess like that's gonna be more so in certain.

00:30:25
<transcript>: repos

00:30:27
<transcript>: Repos. As opposed to others.

00:30:27
<transcript>: i have one terab

00:30:28
privann: Kinda fun that ChatAPI introducing and recommending functionality in programming languages that don't exst

00:30:30
privann: exist

00:30:31
<transcript>: I have 1 TB up and down. Oh, that's not the issue.

00:30:39
<transcript>: Same for me very long load time to start the game even though I have very fast internet interesting.

00:30:39
<transcript>: what's

00:30:43
<transcript>: What's? Where are you guys located? Could you all tell me where you live.

00:30:43
<transcript>: just like roughly

00:30:45
<transcript>: Just like roughly what part of the world.

00:30:47
privann: Sweden

00:30:49
hideoo: EU

00:30:50
xkarvel: Portugal

00:30:51
privann: GÃ¶teborg, Sweden

00:30:54
<transcript>: Sweden kind of fun that chat G, chat API.

00:30:54
<transcript>: introducing

00:30:54
developmentrobot: I used it a lot and it's quite good, however sometimes it just makes stuff up. It uses non existing function of a dependency, etc..

00:30:54
emixmaxime: FR

00:30:56
tastefulelk: Heey GÃ¶teborg!

00:30:58
aatishsai: Nepal, South East Asia

00:30:58
<transcript>: Introducing and recommending functionality and programming language that don't exist. Oh, really.

00:31:06
caasidev: UK

00:31:09
<transcript>: Portugal. Okay. So I bet it's just, like, not very fast outside the US. This is why I build on the stack that I build with. I built this one with the T three stack. And I didn't.

00:31:09
<transcript>: i didn't

00:31:10
privann: GÃ¶teborg ftw

00:31:20
privann: @TastefulElk are u a gÃ¶teborgare?'

00:31:29
<transcript>: I didn't have a global database. I normally build apps that nobody uses with a global database like DynamoDB Global Tables. And I make sure it's fast from every region in the world because I just care about that stuff. But I built this one with T three stacksack and it wasn't immediately obvious. I know I could do like planets called Read replicas, but using this stack there's not like a really quick path towards global.

00:31:31
<transcript>: Latency.

00:31:31
<transcript>: so

00:31:34
<transcript>: So I'm sorry about that. They probably is just because.

00:31:34
<transcript>: you're far away

00:31:35
tastefulelk: Yes!

00:31:37
<transcript>: You're far away from us east one or whatever.

00:31:43
privann: we're the cool people

00:31:44
<transcript>: Bummer. Maybe that's why people aren't even logging in. They never even see the login. I don't know.

00:31:57
privann: @adamdotdev are u running it on 1 server?

00:31:59
<transcript>: I've used it a lot. It's quite good, however, sometimes it just makes stuff up. It uses nonexisting function of a dependency, etc. Yeah. Yeah. I imagine it's still not like you can't. That's the thing about these tools, I think. I think like in the hands of someone who does know.

00:32:11
<transcript>: What they should be writing. It could just save a lot of time. I think I want it integrated in my editor to just play with it more and say, like, hey, do this because I feel like it's a longer form.

00:32:17
<transcript>: Copilot. Maybe not. Maybe Copaly can do as much as it can do. I don't know. I should reinstall copilot. Let's do it.

00:32:18
actuallydoc: hello

00:32:18
tastefulelk: Adam is known for his closet IIS server

00:32:22
privann: @adamdotdev the thing is that it's harder aswell to do the game as response from server takes longer time and the timer runs out :D

00:32:22
<transcript>: Let's reinstall copilot.

00:32:27
<transcript>: Copilot.

00:32:30
<transcript>: Right here.

00:32:36
cowfacedude99: there was a chatgpt telescope extension LUL

00:32:36
<transcript>: Let's do it.

00:32:39
<transcript>: Oh, I didn't do it.

00:32:43
privann: @adamdotdev are u doin AOC ?

00:32:48
<transcript>: Here we go. We're adding copilot. I can't remember why I removed it.

00:32:51
<transcript>: But I know I removed it for a reason.

00:32:54
<transcript>: Central Raking change.

00:32:59
<transcript>: Okay.

00:32:59
<transcript>: we've re added

00:33:06
<transcript>: We've re added copilot. I want to use copilot. I know, I'm I want to give it in their shot.

00:33:18
<transcript>: Okay.

00:33:18
<transcript>: where else

00:33:20
<transcript>: Where else.

00:33:25
<transcript>: Yeah, all this.

00:33:30
cowfacedude99: you need to remove the commit hashes for copilot

00:33:34
<transcript>: Thank you so much for the follow. I hate finding the games. I can. I can recognize. I can resonate with that message.

00:33:38
<transcript>: Adam is known for his closet. I is server. That's right.

00:33:42
<transcript>: One server. No, it's. I mean, it's like.

00:33:42
<transcript>: it's the t three

00:33:45
<transcript>: It's the T three SEC. It's split on Versaille.

00:33:45
<transcript>: but the

00:33:46
hideoo: Even if it's slow, some feedback or even a small loader could help. The first time I was on a quote screen with no button, no indicator, though that was the entire website and later on I randomly join a game ^^

00:33:52
<transcript>: But the database is planet scale and it lives in one region because there's no way to do rewrite like there's no way to do.

00:33:52
<transcript>: global

00:33:54
<transcript>: Global.

00:33:54
<transcript>: writ

00:34:00
<transcript>: Writable instances of planet scale. Maybe they'll do that. That'd be cool. I don't know how many people.

00:34:00
<transcript>: are trying

00:34:02
privann: @adamdotdev Seen Cloudflare d1?

00:34:06
<transcript>: Are trying to do that. I know. Like Clap Flare has an offering for like a global database in Edge database.

00:34:06
<transcript>: but

00:34:09
<transcript>: But I just typically use DynamoDB Global tables.

00:34:30
<transcript>: Man, my kids are allowed today. They are. They are running around with their heels. They just run on their heels. That's how I run. So I get it. The thing is that it's harder as well to do the game as response from server takes longer time and the time runs out. Oh, man. So us people have an advantage. The closer you are to us east one.

00:34:30
<transcript>: and the more you know about

00:34:34
<transcript>: And the more you know about, AWS, the better your score will be. And I'm sorry about that.

00:34:34
<transcript>: i should

00:34:45
<transcript>: I should try and fix that. I don't know how it fix it, though. I just have to move to DynamoDB. Is he literally just standing above me and just stopping? I think he is. I think he's just stopping.

00:34:52
<transcript>: He's stopped. Maybe they're watching the stream. And I think it's funny. I don't know.

00:34:53
<transcript>: There was a chat.

00:34:53
<transcript>: te

00:34:56
<transcript>: Telescope extension. Are you serious? Already.

00:34:56
<transcript>: yeah provon we're gonna

00:35:03
<transcript>: Yeah, PROVON. We're gonna do admin of code here shortly. You need to remove the commit hashes for copilot EA. We're gonna do that.

00:35:03
urobeat: pause the timer while it's validating the request?

00:35:07
cowfacedude99: let me find it.

00:35:09
stream_kyle: Apparently Stack Overflow has already been having problems with people generating answers with ChatGPT.

00:35:11
<transcript>: Even if it's slow, some feedback or even a small loader could help. The first time I was on a quote screen with no button, no indicator.

00:35:13
privann: @adamdotdev you can create read-only dbs in another countries in planetscale

00:35:20
<transcript>: Thought that was the entire website. And later on I randomly join a game. Yeah, yeah, we show that quotes. I show that quote screen for a fixed amount of time to give it time to load.

00:35:20
actuallydoc: trying to make a hole in the ground...

00:35:24
privann: @adamdotdev https://planetscale.com/docs/concepts/read-only-regions

00:35:35
cowfacedude99: https://github.com/terror/chatgpt.nvim

00:35:40
<transcript>: So actually, it's like the API request is made to fetch the first round, and that Loading screen. That quote screen kind of serves as like, give everybody the same amount of time to start. Apparently, it's not long enough or it doesn't work or it's not clear enough that that's what that means. I don't know. Yeah. Yeah. Do you want? Yeah. Provon. I don't know. We might play the cloud foot at some point, too. They've got a global DB.

00:35:40
<transcript>: pause the time

00:35:42
<transcript>: Pause the timer when it's validating the request.

00:35:49
<transcript>: I kind of do I add time? Yeah. Yeah. Okay. We need to work on the global picture of AWS.

00:35:50
kociqq: ayezeeHey how was Vegas?

00:36:04
<transcript>: Apparently Stack Overflow has already been having problems with people generating answers with chat. Dvt. Yeah, I heard they had to ban that you can create Readonly, DB's and other countries. Yeah, read only, but that wouldn't help. Would it prove? I mean, that wouldn't help for this.

00:36:05
<transcript>: Particular.

00:36:05
<transcript>: situation

00:36:07
<transcript>: Situation.

00:36:07
<transcript>: they need

00:36:09
<transcript>: They need to be able to write.

00:36:16
<transcript>: And less. We did like the writing to the database asynchronously.

00:36:16
<transcript>: like out of band

00:36:16
privann: Perhaps

00:36:21
<transcript>: Like out of band. It's hard to do that on Versaille, but we could maybe do that.

00:36:21
<transcript>: create

00:36:28
<transcript>: Create read only DB's trying to make a hole in the ground what? Trying to make a hole in the ground? Why.

00:36:34
<transcript>: Was Vegas. It was so good. Cosy.

00:36:39
<transcript>: I've said it earlier, but it's tomorrow FM, tomorrow.

00:36:46
adamdotdev: https://tomorrow.fm/7

00:36:46
<transcript>: Fm. You can go to tomorrow. That's an episode seven. Me and DAX talk about. I'm just gonna paste right here.

00:36:46
<transcript>: if you want to

00:36:51
kociqq: will do

00:36:58
<transcript>: If you want to listen to me and then talk at Links about our experience at Reinvent it's right there. But TLDR it was fun. We had a lot of fun. I realized. I think I do like tech conferences. I think I enjoy them.

00:37:01
<transcript>: No if I would.

00:37:01
<transcript>: okay

00:37:03
<transcript>: Okay, we got to remove the commit hash.

00:37:09
<transcript>: Got to do this manually. Which is a bummer. It is delete these things like a chump.

00:37:17
jaystation3x: Come to Strange Loop in St. Louis â€” October '23

00:37:19
<transcript>: Go back to plugin.

00:37:23
<transcript>: And remove the commit hashes.

00:37:28
<transcript>: Too far.

00:37:29
alexkates: Dax and sst catching some heat on twitter ðŸ˜”

00:37:30
jaystation3x: I've already booked.

00:37:30
<transcript>: Little overs out. Oh, come on.

00:37:30
<transcript>: delete

00:37:36
<transcript>: Delete two, there. Let me turn on my key spaces for you all. Delete two, there.

00:37:36
<transcript>: alright

00:37:40
<transcript>: Alright. I could have just like period. Redo.

00:37:43
cowfacedude99: ready to be a harpoon man?

00:37:54
<transcript>: J stations here come to Strangeloop in St. Louis October 23? Is it really already October 23? That's soon DAX and SSD Caching some heat on Twitter? Yeah, yeah Alex, Yeah.

00:37:57
<transcript>: You've already booked J.

00:37:57
<transcript>: ready ready to be a har

00:38:03
<transcript>: Ready? Ready to be a Harpoon man? Maybe. Just not just a second calf face. Actually. Hang on. I've got a text. J.

00:38:04
jaystation3x: LOLâ€¦ October 23 is not soon. And that means 2023

00:38:06
<transcript>: I I was in reinvent.

00:38:09
<transcript>: And.

00:38:09
<transcript>: i was like

00:38:20
<transcript>: I was like, oh, I need to take Shay back, and I just didn't have the mental capacity in that moment to do it. And then I forgot. And I'm gonna do it right now.

00:38:24
<transcript>: Everyone just hang on while they text day back.

00:38:27
jaystation3x: Yeah, sorry â€” forgot you were at Re:Invent

00:38:30
<transcript>: We're gonna at least listen to something else while I text you back because I don't think this is it.

00:38:30
<transcript>: about

00:38:33
<transcript>: About how about this tried and true.

00:38:38
<transcript>: Where is your text? J. There it is.

00:38:41
jaystation3x: You can text me later. Don't do it now.

00:39:40
<transcript>: Okay. I texted jback.

00:39:45
<transcript>: Let's see. October 2030 is not soon. Oh, wait, wait.

00:39:54
<transcript>: For a moment I really thought that was in the future of this year. I thought October 23 hadn't hadn't happened yet. What is today? November? Something.

00:39:58
<transcript>: It's December it's December 6.

00:40:00
<transcript>: That's funny. Okay.

00:40:00
<transcript>: forgot

00:40:02
jaystation3x: Geez

00:40:05
jamdotexe: LUL its christmas in a few weeks!

00:40:07
<transcript>: Forgot your rear, but no worries, no, no, I did it now, Jay. I did it now because I don't want to forget. And if I don't do it right in this moment.

00:40:07
<transcript>: then i'll for

00:40:10
privann: Geez

00:40:11
<transcript>: Then I'll forget again. And it's an important conversation I want to have.

00:40:11
<transcript>: and okay

00:40:12
jamdotexe: crazy fast year

00:40:12
<transcript>: And okay.

00:40:19
<transcript>: Everyone can just just hang out. You know, I'm done, though. I'm done. And now I can't exit. That. Okay. There we go.

00:40:19
<transcript>: okay

00:40:24
<transcript>: Okay, so we updated my dot files. Let's go back. Oh, Geez. All right.

00:40:24
<transcript>: let's

00:40:26
<transcript>: Let's go back to.

00:40:26
<transcript>: what was it

00:40:28
<transcript>: What was it in? Yeah.

00:40:28
<transcript>: i'm

00:40:33
tastefulelk: October of Code 2022

00:40:34
<transcript>: I'm doing that thing, but wait, wait. What's? This one. Okay. No.

00:40:37
<transcript>: Don't need that one.

00:40:42
cowfacedude99: looks like you lost touch with nvim LUL

00:40:51
<transcript>: There we go. Okay. Yeah. This is the thing that I might get to. Oh, no, actually, we're gonna do AOC. We're gonna do event of code. Whoops it.

00:41:02
<transcript>: Advent of code. I haven't done it this year at all. In fact, I don't know if I did any of it last year, but I know there's been years where I've done it. I've never done it all the way through.

00:41:02
<transcript>: i've always

00:41:05
<transcript>: I've always like bailed out at some point.

00:41:09
<transcript>: It's Christmas in a few weeks. Wow. Snuck up on me. You know.

00:41:13
<transcript>: October. Of Code 2022.

00:41:14
jamdotexe: I have started using neovim, I feel like I can't type again..

00:41:17
glamshatterskull: neovim conf this weekend... morning all!

00:41:19
<transcript>: I lost touch with envym oh, no, did I.

00:41:24
urobeat: you can check https://adventofcode.com/2022/events

00:41:32
<transcript>: Did I do I look slower? Cow face. It's been two weeks. I mean, it's in two weeks. Since I've been at my desk. Let's see. New. I want to make a new. Oh, no, I don't remember. Tmux. How do I make a new.

00:41:32
<transcript>: thing

00:41:34
<transcript>: Thing.

00:41:34
<transcript>: new

00:41:36
<transcript>: New pain let's see.

00:41:47
<transcript>: Like that. I know how I knew how you see that just did it. We're gonna go into code. We're gonna make their AOC.

00:41:47
<transcript>: twenty twenty

00:41:53
<transcript>: 2022. That is the year presently. Right? It's currently 2022. Is that right? Cool.

00:42:00
<transcript>: Okay, let's do this. Let's team Ups. It.

00:42:00
<transcript>: oh i

00:42:02
<transcript>: Oh, I'm already in T Max.

00:42:06
<transcript>: You can Nest Timuck Sessions Today I learned.

00:42:06
<transcript>: that i learned

00:42:09
<transcript>: That I learned that you can nest.

00:42:12
<transcript>: Okay.

00:42:15
<transcript>: Let's do this. Let's say.

00:42:17
cowfacedude99: you can but not recommended

00:42:23
<transcript>: I guess what I want to do here. Do I want to start like a I'm gonna do them in T in TypeScript because I'm not about to try and learn another language.

00:42:23
<transcript>: i've

00:42:26
cowfacedude99: and your screen in frozen again

00:42:28
aj_stuyvenberg: oh no screen frozen again ya?

00:42:33
<transcript>: I've seen the Ocamel and the whatever just now, not me. Neovem conference this week. Oh, it is. Glam. Welcome. Good morning.

00:42:33
<transcript>: new

00:42:36
<transcript>: New Incomp. Who's excited? I'm excited.

00:42:38
<transcript>: You can check.

00:42:38
<transcript>: avenip code twenty

00:42:43
<transcript>: Avenip. Code 2022 Events you can but not recommended my screen foes again.

00:42:47
<transcript>: Come on now, come on? Obs.

00:42:49
<transcript>: Pull it together.

00:42:55
<transcript>: Alright. Are you good? Now can you see me typing.

00:42:58
<transcript>: Yeah, right.

00:43:06
<transcript>: Okay? Just keep yelling at me when that happens. I wish I had a way to, like, really for you to get my attention, you know.

00:43:06
<transcript>: oh there

00:43:08
<transcript>: Oh, there is a way.

00:43:08
<transcript>: just remembered

00:43:10
<transcript>: Just remembered.

00:43:16
<transcript>: Just cost you some points, you know? Okay.

00:43:22
<transcript>: I'm gonna do it in Thai script. So how would I even want to start a new TypeScript project? I'll do like NPM in it.

00:43:27
<transcript>: Yeah. Package. Json file sounds good. Version one.

00:43:32
<transcript>: And I'm trying to do AOC stuff.

00:43:34
<transcript>: Sure.

00:43:39
<transcript>: Set command, okay? Don't care about any of this stuff.

00:43:39
<transcript>: mit

00:43:40
<transcript>: Mit.

00:43:47
<transcript>: We have a package, JSON.

00:43:49
kociqq: use tsx ayezeePray

00:43:53
<transcript>: I guess I need a TS config. Oh, is there like a TSC in it.

00:43:53
<transcript>: is that a thing

00:43:55
<transcript>: Is that a thing.

00:44:09
<transcript>: Psc in it. Go ahead, have TSC install globally MPX TSC in it. I'm betting this is the thing.

00:44:09
<transcript>: this is

00:44:12
<transcript>: This is not the TSC command you're looking for.

00:44:15
<transcript>: Use impumence I'll TypeScript.

00:44:18
<transcript>: Let's do.

00:44:18
<transcript>: np

00:44:22
<transcript>: Npm. Install type script.

00:44:24
<transcript>: Global.

00:44:29
<transcript>: Use TSX OTS X.

00:44:29
<transcript>: what is the

00:44:30
<transcript>: What is the SX.

00:44:30
<transcript>: like

00:44:32
tastefulelk: tsc --init

00:44:33
<transcript>: Like MPX TSX.

00:44:33
<transcript>: or what

00:44:34
<transcript>: Or what.

00:44:36
kociqq: https://github.com/esbuild-kit/tsx

00:44:41
<transcript>: Mpx Tse will just now we'll just do TSC. And it.

00:44:44
<transcript>: Created create a new tsp.

00:44:45
<transcript>: Sure.

00:44:48
<transcript>: Okay.

00:44:54
jaystation3x: TSX is an Acura model.

00:44:56
jamdotexe: Why tsx when you can ts

00:44:58
<transcript>: What is there? One I can just derive from that's, like, good. Like a modern one. I want to use like, no date teen. I don't know.

00:45:04
<transcript>: Why TSX when you can TS.

00:45:11
<transcript>: Tsecks is an Acura model. That's funny. Oh Es, build kit. Oh yes, build good at stuff.

00:45:18
<transcript>: Does it create like a better project starter? Actually a nice TypeScript node starter, you know.

00:45:21
<transcript>: Type scripting, ESM compilation, whereas both.

00:45:26
<transcript>: I can run just a screen ad hoc.

00:45:26
<transcript>: what if i

00:45:28
<transcript>: What if I want to.

00:45:32
<transcript>: Phone Initialize a project.

00:45:36
<transcript>: Know I'm saying anybody.

00:45:37
<transcript>: Anybody.

00:45:41
<transcript>: I guess this means you don't even have to compile.

00:45:41
<transcript>: and

00:45:45
kociqq: you don't need to do anything just run the files with it

00:45:45
<transcript>: And I cannot admit I could use node TS. But this sounds better. Let's use that.

00:45:49
<transcript>: This sounds better because Es builds good, right.

00:45:57
<transcript>: You don't need to do anything. Just run the files with it. Yeah, yeah. I don't need to have any of this nonsense. I don't even need to have a TSConfig file, do I.

00:46:00
<transcript>: Okay, let's make a folder.

00:46:02
kociqq: yeah not even tsconfig is required

00:46:05
<transcript>: This folder is going to be called Day. What day are we on.

00:46:07
<transcript>: A seven.

00:46:07
<transcript>: or that no

00:46:09
<transcript>: Or that no Day Six is currently.

00:46:11
jamdotexe: Oh, that's cool - didn't know that!

00:46:12
<transcript>: I don't know. What is. Six. Yeah.

00:46:12
<transcript>: we'll just call it six

00:46:14
<transcript>: We'll just call it six.

00:46:19
<transcript>: And then I'm gonna just make a file index TS X.

00:46:21
<transcript>: This TS.

00:46:31
<transcript>: Use TSX to run it, but the file is just gonna be called TS. Okay, so if I just said, like, console log, whatever.

00:46:35
<transcript>: And then I said.

00:46:37
<transcript>: What was it? Npx.

00:46:37
<transcript>: tfx

00:46:41
<transcript>: Tfx MP X TSX.

00:46:47
<transcript>: Index? Yes. Is that a work.

00:46:56
<transcript>: It does work. Okay.

00:47:02
<transcript>: Out of a mouthful. So what we're gonna do is we're gonna do.

00:47:06
<transcript>: We're gonna say we're gonna make a script.

00:47:09
<transcript>: Run.

00:47:10
cowfacedude99: may I suggest something?

00:47:14
<transcript>: Yeah, run. I don't start.

00:47:14
<transcript>: no run

00:47:17
<transcript>: No run shorter no, I can't do run.

00:47:21
<transcript>: Sorry, TSX? Mpx, TSX.

00:47:26
<transcript>: And then.

00:47:26
<transcript>: it'll

00:47:28
<transcript>: It'll just be.

00:47:34
<transcript>: The day number. You want to do this is a Param. No. What am I saying.

00:47:42
<transcript>: Oh, that's not helping me. I thought I would have, like, an ISO shortwig. I just be like, yarn.

00:47:47
<transcript>: Run six, but whatever. I can just all so do this.

00:47:51
<transcript>: Up arrow. You know I'm saying, okay, cool.

00:47:53
cowfacedude99: open a small pane down and use nodemon to run the file. that way everytime the file changes, nodemon will rerun the file

00:47:55
<transcript>: So I didn't need this. I'm just gonna delete it.

00:47:59
<transcript>: Right. I didn't need that. Okay. Here we go. We're gonna solve the Riddle.

00:47:59
<transcript>: let's

00:48:01
<transcript>: Let's let's solve it.

00:48:05
<transcript>: Number Six. Here we go.

00:48:07
kociqq: ^ u can actually run tsx watch ./6/index.ts

00:48:08
<transcript>: Let me know if my screen freezes.

00:48:08
<transcript>: also please

00:48:09
<transcript>: Also Please help me solve it.

00:48:12
kociqq: which is handy

00:48:19
<transcript>: Well, let's see. That's cool to know that. May I suggest something? Yes. Open a small pane down and use Nodemont to run the file that way, every time the file change is no longer. Yes.

00:48:19
<transcript>: just use watch

00:48:20
<transcript>: Just use watch.

00:48:20
<transcript>: yes

00:48:23
<transcript>: Yes, that is handy. Let's do it.

00:48:23
<transcript>: so i'll just

00:48:27
<transcript>: So I'll just have a small pain. I'll just make this smaller, so it's always running. And we'll just do this.

00:48:33
<transcript>: We'll say MPX, PSX, watch.

00:48:36
<transcript>: Six.

00:48:36
<transcript>: index

00:48:37
<transcript>: Index.

00:48:37
<transcript>: ts

00:48:42
<transcript>: Ts cool. Now every time I do something in here and save it, it's gonna change it.

00:48:42
<transcript>: oh

00:48:46
<transcript>: Oh, console log test.

00:48:49
<transcript>: Okay.

00:49:04
<transcript>: Basics tuning Trouble The preparations are finally complete. You and the Elves leave camp on foot and begin to make your way toward the Star Fruit Grove. Should I start from day one? Do we feel like I'm loot? I'm missing out. Frag is here.

00:49:04
<transcript>: five

00:49:07
<transcript>: Five months. I can't believe this in five months. On Twitch.

00:49:10
<transcript>: Such a good five months.

00:49:14
<transcript>: What are we working on? We're gonna do AOC frag.

00:49:14
<transcript>: in typescript

00:49:15
cowfacedude99: there's a really nice story

00:49:16
glamshatterskull: yeah the starfruit narative

00:49:16
fragaverage: also no notifications?!

00:49:17
<transcript>: In TypeScript because I'm lazy and I'm not gonna try and learn something new.

00:49:19
glamshatterskull: no spoilers

00:49:23
<transcript>: Should we do no notifications? What? You didn't get a notification.

00:49:23
glamshatterskull: LUL

00:49:25
<transcript>: No spoilers.

00:49:27
<transcript>: What.

00:49:27
<transcript>: you're saying

00:49:30
<transcript>: You're saying I'm spoiling by doing day Six or.

00:49:38
<transcript>: There's a really nice story. We should start at day One. I feel like we started day one is gonna take me forever to do all of them. I don't know. It's worth it. Let's do it.

00:49:40
glamshatterskull: hah yeah for yourself

00:49:47
<transcript>: Sansa's reindeer typically eat regular ring dear food, but they need this is day One, by the way. Oh, I gotta.

00:49:56
<transcript>: Make a single file for each one. Yeah. Let's just do that. Let's see. Like one PS. Right.

00:49:58
<transcript>: That sounds better.

00:50:00
<transcript>: Than this nonsense.

00:50:00
<transcript>: here

00:50:03
<transcript>: Here, I'm gonna say.

00:50:03
<transcript>: i

00:50:06
<transcript>: I won TS.

00:50:15
blakegreendev: if you were really lazy, you'd use ChatGPT to solve them haha

00:50:16
<transcript>: Cool. Now I'm gonna do day one. We're gonna work our way up to day six. We're gonna get caught up. So every day I can do this, maybe we'll see.

00:50:22
<transcript>: If you were really lazy, you just chat GBD to solve them. Hey, Blake.

00:50:22
<transcript>: that would be

00:50:24
<transcript>: That would be really lazy.

00:50:24
<transcript>: and really funny

00:50:28
<transcript>: And really funny. I guess that's funny. If it can do it, can I actually do it? That's hilarious.

00:50:44
akuji93: I looked at ChatGPT's solution after doing mine, it had some great ideas. Good to do after doing the exercise yourself

00:50:47
<transcript>: Okay, Sanders, Reign, do you're typically eat regular Ranger food? They need a lot of magical energy to deliver presence on Christmas. For that, their favorite snack is a special type of star fruit that only grows deep in the jungle. The Elves have brought you on their annual expedition to the Grove, where the fruit grows.

00:50:51
cowfacedude99: @blakegreendev the leaderboard is filled with chatGPT solutions

00:51:02
<transcript>: Up magical energy. The expedition needs to retrieve a minimum of 50 stars by December 25. Okay, although the elves assure you the Grove has plenty of fruit, you decide to grab any fruit you see along the way. Just in case, click start by solving puzzles.

00:51:02
<transcript>: two puzzles

00:51:08
jamdotexe: Do you have any videos on how you configured your neovim? Asking for.. me :D

00:51:18
<transcript>: Two puzzles will be made available on each day in the Advent Calendar. Others to each day. The second puzzle will unlock when you complete the first, each puzzle grants one star. Good luck. The jungle must be too overgrown and difficult to navigate in views or access from the air. The El's Expedition traditionally goes on foot.

00:51:30
<transcript>: As your boat approaches land, the Elves begin taking inventory of their supplies. One important consideration is food, in particular, the number of calories each elf is carrying. Your puzzle input. Okay.

00:51:30
<transcript>: the elves

00:51:42
<transcript>: The Elves take turns riding down the number of calories contained by the various meals, snacks, rations, etc. That they've brought with them. One item per line. Each L separates their own inventory from the previous Self's inventory, if any, by blank line.

00:51:42
<transcript>: for example

00:51:48
<transcript>: For example, suppose the L's finished riding their items calories and end up with the following list.

00:51:48
<transcript>: okay

00:51:49
<transcript>: Okay.

00:51:52
<transcript>: Seems important. So this means.

00:51:52
<transcript>: that was the first

00:51:57
<transcript>: That was the first delve. The second elve, the third elf, fourth, eleph. Etc. Okay.

00:51:57
<transcript>: this list

00:52:04
cowfacedude99: @jamdotexe if you want, prime and teej have a few ones that I consider.

00:52:05
<transcript>: This list represents the calories of the food carried by five L. So first self is carrying food with Yep, Yep. Got it. Okay, got it.

00:52:05
<transcript>: in case the

00:52:17
<transcript>: In case the elves get hungry and need extra snacks, they need to know which elf to ask. They'd like to know how many calories are being carried by the elf carried the most calories. Wait, I feel like I should have read that and actually pay attention to what it meant.

00:52:36
<transcript>: In case you'll get hungry and need extra snacks, they need to know which elf to ask. They'd like to know how many calories are being carried by the elf carrying the most calories. In the example above, this is 240 care by the fourth of find the health carrying the most calories. How many total galleries is that elf carrying? Didn't they just answer it.

00:52:36
jamdotexe: @cowfacedude99 I will check them, thanks

00:52:40
<transcript>: Wait, wait, didn't they? What.

00:52:46
<transcript>: Find the elf peering the most calories an example above this is 240.

00:52:46
<transcript>: so

00:52:49
<transcript>: So that's the answer. What.

00:52:52
<transcript>: Did I miss something.

00:52:57
cowfacedude99: you need to sign in to get your own unique input

00:52:58
<transcript>: Is there a different input that's coming in, we're gonna get a different input than this one.

00:52:58
<transcript>: is that what they're saying

00:52:59
<transcript>: Is that what they're saying.

00:52:59
<transcript>: need to

00:53:01
shiftlessatol: that's an example

00:53:03
<transcript>: Need to sign in to get your own unique input. Got it. Okay. Okay.

00:53:06
shiftlessatol: keep reading

00:53:10
<transcript>: Do you have any videos on how you can figure your kneel? Them calf face has got you covered.

00:53:14
<transcript>: The leaderboard is filled with chat GVD solutions. That's awesome.

00:53:23
<transcript>: There's an example. Keep reading. Okay. So let's just let's code it based on this example.

00:53:25
<transcript>: We'll code it based on this.

00:53:32
<transcript>: And then we'll run our thing through it so comps callories or else.

00:53:35
<transcript>: Like that.

00:53:38
<transcript>: Let's see, but I want to do it like.

00:53:38
glamshatterskull: add up their stuff... find the most bigly

00:53:42
<transcript>: Let's see. Those will be numbers.

00:53:49
<transcript>: But they'll be in their own array, I guess. Or we'll.

00:53:49
<transcript>: i just want to

00:53:51
<transcript>: I just want to pass this in.

00:53:51
<transcript>: as raw

00:53:53
<transcript>: As raw as possible.

00:53:55
<transcript>: Now what I want to do.

00:53:55
nexxeln: HEYYY

00:53:58
<transcript>: Or is that what I need to do.

00:53:58
<transcript>: like

00:53:59
cowfacedude99: that's a string.

00:54:06
<transcript>: Like, can these be three separate array? Like different arrays? Like this is an array. Or do I just say like the limited by a blank.

00:54:10
glamshatterskull: i read from file

00:54:12
<transcript>: Like if there's a blank, that means something. I don't know. What are the rules here.

00:54:15
<transcript>: And I just.

00:54:15
<transcript>: i just need

00:54:19
cowfacedude99: your input will be a file

00:54:19
<transcript>: I just need to leave it as much like this as possible. Is that the idea.

00:54:20
huckcity: you'll need to read from file, the input is large

00:54:22
<transcript>: I read from file.

00:54:22
<transcript>: oh the input

00:54:27
<transcript>: Oh, the input is a file. Thank you so much. The input is large. Got it. Okay.

00:54:28
blakegreendev: @cowfacedude99 yeah I saw someone finished in 13 seconds... I can't read the question in 13 seconds let alone solve it haha

00:54:29
sarjahukkuja: these should be read from other txt file directly.

00:54:30
<transcript>: After stuff find the most bigly got it.

00:54:30
<transcript>: next we'll see

00:54:31
<transcript>: Next we'll see.

00:54:37
<transcript>: Next it's been so long I haven't streamed for two weeks.

00:54:37
<transcript>: hux city

00:54:39
shiftlessatol: this is the pattern

00:54:40
<transcript>: Hux City welcome to My Chat, welcome, welcome.

00:54:40
<transcript>: so it'll be a file

00:54:42
nexxeln: oh doing aoc coool, im doing them in ts, elixir and maybe ocaml too

00:54:45
<transcript>: So it'll be a file with contents. Look, just like this, right? Okay. Yeah. Okay. I got you.

00:54:49
<transcript>: I got you. Let's just let's just start over.

00:54:55
pheralb: ooh nexxeln :D <3

00:54:56
<transcript>: Like that. Okay, let's say we're gonna have a file. Cons.

00:54:59
<transcript>: consist

00:55:01
<transcript>: Consistent.

00:55:01
nexxeln: hi pheralb

00:55:05
<transcript>: Equals. And I'll paste this in.

00:55:06
nexxeln: you're everywhere

00:55:08
<transcript>: Right.

00:55:10
<transcript>: And then.

00:55:10
<transcript>: i will

00:55:13
<transcript>: I will. I guess that needs to be.

00:55:16
<transcript>: One of these things.

00:55:17
pheralb: naah

00:55:18
nexxeln: @adamdotdev use deno to make your life easy

00:55:22
pheralb: jajajaja

00:55:23
<transcript>: This one too. Okay, so that'll be the contents up here when we have our file.

00:55:25
glamshatterskull: i think you have to log in to get your file

00:55:25
<transcript>: We'll say like.

00:55:25
<transcript>: file

00:55:27
<transcript>: File equals.

00:55:31
<transcript>: Something like that, right? It's gonna be node stuff.

00:55:31
<transcript>: okay

00:55:33
<transcript>: Okay.

00:55:43
<transcript>: But that's the contents then we need to solve based on that, right. Okay, cool. Use D no to make your life easy? Ooh, I could play with Dino. I guess that'd be kind of cool.

00:55:43
<transcript>: i'd still be

00:55:45
<transcript>: I'd still be writing TypeScript.

00:55:45
<transcript>: right

00:55:46
<transcript>: Right.

00:56:00
<transcript>: There should be read from these should be read from the other text file directly. Yeah, I think I got it now. I saw someone finished in 13 seconds. I can't read the question. 30 seconds. Me neither. That's insane.

00:56:08
<transcript>: Oh, I don't know. Could we use Dennis.

00:56:12
<transcript>: Could we use it and TypeScript I guess.

00:56:12
<transcript>: oh yeah

00:56:15
<transcript>: Oh, yeah. Has builtin TypeScript, doesn't it.

00:56:21
privann: yes but people finishing in 13 seconds is using ChatGPT

00:56:23
nexxeln: with deno is just deno run file.ts

00:56:23
<transcript>: Yeah, glam. I'm not gonna log in until I've written the solution. I just feel like I want to write the solution first.

00:56:30
<transcript>: Design not what people do. Do people just take their file and then and go from there. Maybe that's the best. Okay, we'll do that.

00:56:30
<transcript>: github

00:56:32
<transcript>: Github. We'll login with GitHub.

00:56:36
<transcript>: All right, Where's my file.

00:56:38
nexxeln: and getting the input is much easier than in node

00:56:39
<transcript>: Get your puzzle input. There it is.

00:56:44
<transcript>: Okay. So we will put it in the file just to be cool.

00:56:44
<transcript>: one

00:56:47
<transcript>: One TXT.

00:56:51
<transcript>: All that stuff in there.

00:56:59
<transcript>: Did I get it? Okay. And then we're gonna go back here and we're gonna say we can just do let's just go straight to it, right.

00:57:02
<transcript>: Cops are import.

00:57:05
cowfacedude99: I did this year in go.

00:57:06
<transcript>: From.

00:57:11
<transcript>: This thing. It's node or something like with a shebang.

00:57:11
<transcript>: oh man

00:57:18
<transcript>: Oh, man, I'm gonna get stuck on the dumb stuff node. I mean, I'll get stuck on all of it, but Averse is raiding.

00:57:18
<transcript>: it's a rain

00:57:20
<transcript>: It's a rain.

00:57:20
<transcript>: favor

00:57:22
<transcript>: Favors? Welcome.

00:57:22
<transcript>: it's been

00:57:23
cowfacedude99: raid!!!!!

00:57:30
<transcript>: It's been? It's been so long since I've seen you? What's been so unset? There are literal cobwebs on my light.

00:57:30
<transcript>: like i haven't

00:57:31
nexxeln: welcome raiders

00:57:33
<transcript>: Like I haven't been in my office in two weeks and.

00:57:33
<transcript>: there are cobwebs

00:57:42
<transcript>: There are cobwebs like between the little like things on my light dumb. That's how long it's been? Have you been? I'm not gonna show you restreamulant because I always complain when people.

00:57:42
<transcript>: ask

00:57:44
<transcript>: Ask me how am I Streamlit.

00:57:46
aivarsmeijers: Hey! I was in vacation for a week, then bussy

00:57:48
<transcript>: With Dino is just running.

00:57:48
<transcript>: run the

00:57:49
teej_dv: day 1 OMEGALUL

00:57:49
amberdev: Decorartions

00:57:50
amberdev: :D

00:57:52
<transcript>: Run the file, Dino, run file TS. That's that's awesome.

00:57:52
<transcript>: do the input is much

00:57:55
cowfacedude99: !so @AivarsMeijers

00:57:55
fossabot: Shout out to AivarsMeijers! Go follow them at twitch.tv/aivarsmeijers - they were last seen playing Software and Game Development!

00:57:56
amberdev: TJ?

00:57:57
<transcript>: Do the input is much easier than a node. I'd have to learn that, but I guess I do want to learn denot. So maybe this is worth doing.

00:57:57
<transcript>: tea just here

00:58:03
<transcript>: Tea just here. Day one. We're doing day one of AOC. I have not been around, you know.

00:58:03
<transcript>: welcome

00:58:08
<transcript>: Welcome. Tiege. It's good to see you. I watched you do some okayamel stuff yesterday.

00:58:08
<transcript>: let's do

00:58:11
<transcript>: Let's do this in Dino. Why not.

00:58:16
grasp5533: How was reinvent?

00:58:16
<transcript>: Dino get started I wanted to play with you know for I don't know forever.

00:58:18
<transcript>: Getting started.

00:58:20
teej_dv: why not? cause ocaml is better LUL

00:58:21
<transcript>: This is a perfect reason to use Dino.

00:58:28
<transcript>: Macos Homebrew. There we go. Now we're talking.

00:58:30
<transcript>: I am that kind of Div.

00:58:30
<transcript>: dival bino

00:58:32
amberdev: I saw that tweet

00:58:32
<transcript>: Dival Bino.

00:58:33
amberdev: :D

00:58:36
<transcript>: Could use Bun. We could do it in bun.

00:58:36
<transcript>: reinvent was

00:58:38
<transcript>: Reinvent was fantastic.

00:58:38
<transcript>: because ocame

00:58:40
<transcript>: Because Ocamel is better.

00:58:40
<transcript>: i don't know

00:58:40
ako_freshman: hi

00:58:43
<transcript>: I don't know anything about ocdamel sounds hard though.

00:58:43
<transcript>: average you

00:58:48
nexxeln: bun is great too for this stuff

00:58:49
<transcript>: Average you had a vacation for a week and then busy. Yeah. I was gone all last week too. Well, I don't know if you're saying last week, but I was.

00:58:49
<transcript>: at in vegas

00:58:51
teej_dv: me neither... one week ago LUL

00:58:54
<transcript>: At in Vegas. I went to Reinvent in Vegas.

00:58:58
<transcript>: You did it this year in Go Calface. That sounds fun.

00:58:59
ako_freshman: will you do aoc?

00:59:00
glamshatterskull: i prefer ucamels

00:59:01
<transcript>: Okay. I'm excited about this. We're gonna learn some DNA.

00:59:01
<transcript>: no

00:59:10
<transcript>: No, you just learned. Okay, I'm teach. That makes sense is just what everybody does. You just choose to, like, learn something new while you're doing AOC. That sounds like a good idea.

00:59:19
<transcript>: You camels. Okay, we installed it. No, it's still installing. Wow, Bruce is so slow.

00:59:19
<transcript>: so

00:59:20
teej_dv: if you're not a tryhard for winning, then yes, pick something to learn

00:59:24
nexxeln: with deno its const input = await Deno.readTextFile("./input.txt")

00:59:25
<transcript>: So once we install D, now we can just write TypeScript. You telling me set up your environment.

00:59:33
<transcript>: I got install.

00:59:34
<transcript>: Something in the.

00:59:36
aivarsmeijers: I was in Gran Canary for endless summer weather than last week just busy in Latvian winter

00:59:38
nexxeln: im also learning elixir and ocaml with aoc haha

00:59:38
<transcript>: Do you know language server.

00:59:38
<transcript>: to use the dna

00:59:42
<transcript>: To use the DNA language server install in the mail so you can follow. I bet Mason has it right.

00:59:58
<transcript>: If you're not a try hard for winning, then yes. Pick something to learn. Yeah, yeah, definitely not try hard. I'm starting six days late. Does that sound like I'm trying very hard with Dino? It's constant input await. Deno, read text file input. That sounds nice.

00:59:58
<transcript>: i

01:00:03
<transcript>: I was in Grand Canary for endless summer weather last week. Ooh, that sounds nice.

01:00:08
<transcript>: I could use like some beach vacation right now. That sounds amazing.

01:00:12
<transcript>: Also learning Elixir No Camel with AOC.

01:00:12
<transcript>: i've done

01:00:14
<transcript>: I've done some elixir in my day.

01:00:14
<transcript>: definitely

01:00:18
<transcript>: Definitely done some elixir. I would not want to try to do elixir.

01:00:18
<transcript>: on

01:00:19
cowfacedude99: I am learning go

01:00:22
<transcript>: On stream doing advent of code because I would it would be a train wreck.

01:00:30
nexxeln: elixir is kinda op for aoc

01:00:30
<transcript>: Veranda, we're just waiting on Dino. We're waiting to install Dino, because brew is the slowest thing invented by humans.

01:00:35
sarjahukkuja: learning rust and yesterday was tough, but managed to complete it anyway

01:00:35
teej_dv: brew OMEGALUL

01:00:43
nexxeln: node OMEGALUL

01:00:45
teej_dv: i had to install mac update and it is taking over an hour

01:00:47
<transcript>: Name me something slower. I'll wait. I've got time. It's got all the time because it's still it's still doing a Brew update, whatever that is. Kind of turn update off every time I do a Brew thing, it like installs every single thing I've ever installed in Brew. Is that a default feature? Sounds awful.

01:00:52
<transcript>: Had to install Mac update and is taking over an hour.

01:00:52
<transcript>: use

01:00:53
cowfacedude99: that's why I use nix LUL

01:00:53
aivarsmeijers: how to go now, SU ðŸ‘‹

01:00:54
<transcript>: Use a Mac teach.

01:00:56
<transcript>: You kidding me.

01:00:58
glamshatterskull: mac OMEGALUL

01:01:00
teej_dv: i have one for work that

01:01:01
<transcript>: I would have guessed you did not use a Mac.

01:01:05
<transcript>: I mean, I use a Mac, but I'm like, of course, I use a man.

01:01:05
teej_dv: i never use

01:01:07
<transcript>: Like super smart.

01:01:07
<transcript>: you have

01:01:09
<transcript>: You have one for work.

01:01:09
<transcript>: i gotcha

01:01:10
teej_dv: but I'm traveling this week, so i have to

01:01:14
<transcript>: I gotcha that you never use? Yeah, everyone gives out Max like candy. If you get a job.

01:01:18
<transcript>: Where you going? Teach your traveling. Oh, for wait.

01:01:22
<transcript>: For new of him Conf? Are you traveling? It's virtual. Right.

01:01:22
<transcript>: should

01:01:23
teej_dv: to prime's house Kreygasm

01:01:24
<transcript>: Should I have FOMO right now.

01:01:24
<transcript>: are you traveling

01:01:24
glamshatterskull: they're disposable so that makes sense

01:01:26
<transcript>: Are you traveling for fun.

01:01:26
<transcript>: surprise

01:01:29
<transcript>: Surprise house. You're gonna be at Prime's house.

01:01:29
<transcript>: for

01:01:30
teej_dv: you should have FOMO

01:01:32
<transcript>: For Neil. Them. Comps. That's awesome.

01:01:32
<transcript>: i love it

01:01:34
teej_dv: everyone should have FOMO

01:01:37
<transcript>: I love it. I should have fellow. I do have FOMO they're disposable. So that makes sense.

01:01:40
teej_dv: but only me & prime <3 <3 <3

01:01:42
nexxeln: woww cooool

01:01:42
<transcript>: We all have FOMO. Okay, we've installed Dino, everyone, Dino.

01:01:43
glamshatterskull: stoked for neovim conf

01:01:46
<transcript>: Cool exit using that. Okay.

01:01:46
<transcript>: let's add

01:01:46
teej_dv: how do you think we got these emotes

01:01:51
<transcript>: Let's add the LSP server doing advent of code which naturally means.

01:01:53
<transcript>: Set up my neovim.

01:01:53
<transcript>: for something new

01:01:54
<transcript>: For something new.

01:01:55
teej_dv: primeagenClap1 primeagenClap2

01:01:58
<transcript>: Let's see. I want to.

01:01:58
<transcript>: actually

01:02:01
<transcript>: Actually is Mason. Is there a.

01:02:07
<transcript>: Dino, there it is. So Mason and Saul, Dino.

01:02:12
<transcript>: Curious teach do the hardcore.

01:02:12
<transcript>: like

01:02:17
<transcript>: Like people like Teege. Do they frown on Mason.

01:02:22
cowfacedude99: @teej_dv I remember this

01:02:23
<transcript>: Am I like, is this showing my real colors that I use Mason to install my LSPs and stuff.

01:02:31
<transcript>: Only teasing Prime.

01:02:31
<transcript>: at prime

01:02:32
teej_dv: mason seems good, it's not necessarily my style but it's good

01:02:33
<transcript>: At Prime South.

01:02:33
<transcript>: wait

01:02:35
<transcript>: Wait a minute.

01:02:35
<transcript>: those two

01:02:36
<transcript>: Those two emotes.

01:02:39
<transcript>: Are you guys in person.

01:02:39
<transcript>: doing that

01:02:42
<transcript>: Doing that. That is too funny.

01:02:47
<transcript>: Not your style I get it you're trying to be kind I get it.

01:02:47
<transcript>: i

01:02:49
teej_dv: altho i use it on my mac cause i don't want to learn anything about mac

01:02:49
cowfacedude99: last year's conf

01:02:49
<transcript>: I heard you.

01:02:49
<transcript>: now

01:02:54
<transcript>: Now I just want to update all those because they all have new versions available. But I'm not going to rest.

01:02:54
<transcript>: so we

01:02:55
cowfacedude99: you should check it out

01:02:58
<transcript>: So we added the LSP. Now we need to let's see.

01:03:02
<transcript>: Let's do NVM LSP.

01:03:02
<transcript>: let's find somewhere

01:03:04
<transcript>: Let's find somewhere where I'm already doing this.

01:03:09
<transcript>: In here, I guess. Yeah. Okay. So we're gonna invim LSP.

01:03:18
<transcript>: Is what I'm doing.

01:03:33
<transcript>: On attach root.

01:03:37
<transcript>: Okay, there's a Dino JSON file.

01:03:37
<transcript>: and then

01:03:40
<transcript>: And then Kia Server setup. What's this.

01:03:42
<transcript>: Already have that.

01:03:42
<transcript>: this thing

01:03:48
cowfacedude99: you have tsserver already

01:03:51
nexxeln: you already have tsserver setup so you don't need it

01:03:51
<transcript>: This thing I should do it if you also have TS server as an s view, you may run into issues or build tips or do you know just all this? Make sure to get some unique root der for both Tsrverendino us.

01:03:51
<transcript>: what

01:03:52
tayloreddev: teej uses a mac, whaaaa

01:03:53
<transcript>: What.

01:04:05
<transcript>: Do I do.

01:04:14
<transcript>: Well, I don't know if that's gonna work or not. I guess I need to add.

01:04:14
<transcript>: the

01:04:15
<transcript>: The.

01:04:15
<transcript>: root

01:04:17
<transcript>: Root Dur thing.

01:04:19
cowfacedude99: I remember the one coffee shop stream from the mac.

01:04:20
<transcript>: Maybe if I just add this it'll work.

01:04:24
cowfacedude99: @teej_dv

01:04:24
<transcript>: My brake. Other stuff. I do, but.

01:04:24
<transcript>: we'll

01:04:26
<transcript>: We'll try that. Okay.

01:04:26
<transcript>: anything else

01:04:36
<transcript>: Anything else I need to do to get this working? I don't use COC or any of this stuff. I think it's good. I configured the language server. I think we're good.

01:04:40
<transcript>: All right, back here.

01:04:44
<transcript>: Let's quit.

01:04:46
nexxeln: add the root dir to tssevrer, so then tsserver will run on node, and deno will run on deno stuff where there is no package.json

01:04:47
<transcript>: No.

01:04:49
<transcript>: Let's restart.

01:04:57
<transcript>: Hey, Tige, I was in the top 5% of all J listeners.

01:04:57
<transcript>: last year

01:05:00
<transcript>: Last year. Where are you? At? Where you at.

01:05:00
<transcript>: how many

01:05:02
<transcript>: How many minutes.

01:05:02
<transcript>: let's talk minute

01:05:08
<transcript>: Let's talk minute. I know you're an LJ fan, but maybe you're not like a real real L. J. Fan just like kind of an OJ fan.

01:05:16
<transcript>: Do I learn you use it on your Mac because you don't want to learn anything about Mac. That's awesome.

01:05:25
<transcript>: Thank you for correcting. Everyone saw that I already had DS server. Thank you. I did end up reading what I pasted. Just not at first.

01:05:25
<transcript>: i remember

01:05:39
<transcript>: I remember the one coffee shop stream from the Mac you did a coffee shop stream from a Mac teach sounds very entertaining as a root dirt at TS server. So then Tsar rule around node and you know, yeah, I think we're good. I think that's what I did.

01:05:39
<transcript>: okay

01:05:41
<transcript>: Okay, Let's.

01:05:47
<transcript>: Restarted in the event. Let's delete this. No, that's my actual that's my input.

01:05:56
<transcript>: And then this one, we're gonna just delete all this, because this is done. Okay. So that's a D, no file, but it's just.

01:05:58
<transcript>: Ps, right.

01:05:59
cowfacedude99: that means you need package.json

01:06:00
<transcript>: So just a type script file.

01:06:03
<transcript>: But it's you know? Oh, but I need to put.

01:06:03
<transcript>: instead of pack

01:06:07
<transcript>: Instead of package JSON. Do I need to put a D no JSON or just like, ignore it.

01:06:07
<transcript>: just delete it

01:06:09
<transcript>: Just delete it so it doesn't get confused.

01:06:09
<transcript>: okay

01:06:12
cowfacedude99: need to delete

01:06:14
<transcript>: Okay. Let's write some stuff. Let's learn how we do. Dino.

01:06:14
<transcript>: do you

01:06:16
<transcript>: Do you know do you know.

01:06:16
<transcript>: i want to

01:06:17
nexxeln: yep deno.json

01:06:18
<transcript>: I want to read a file.

01:06:23
<transcript>: Basics you can you can run NPM modules.

01:06:23
<transcript>: what

01:06:24
<transcript>: What.

01:06:29
<transcript>: I didn't know that it was is it backward compatible with node.

01:06:31
imaginevroom: what terminal is that

01:06:32
<transcript>: Is that a thing.

01:06:34
kociqq: it is now

01:06:35
<transcript>: Let's see file.

01:06:36
nexxeln: yeah that's new

01:06:36
kociqq: new feature

01:06:39
<transcript>: Somebody already paste it? Should I just read what they said.

01:06:43
<transcript>: Fetch data built in API's.

01:06:43
<transcript>: yeah

01:06:45
<transcript>: Yeah. Here we go.

01:06:47
<transcript>: Okay.

01:06:50
<transcript>: Cops await. Be no.

01:06:50
<transcript>: doesn't like it

01:06:52
<transcript>: Doesn't like it.

01:06:52
<transcript>: touch

01:07:01
<transcript>: Touch Script the weight expressions are only allowed at the top level of a file, but it's Deno. Did you know it was Deano? Yeah, it's Deno. So this should be.

01:07:05
<transcript>: Mason or LSP info or something.

01:07:05
<transcript>: it's using

01:07:10
<transcript>: It's using the TS server. I don't want it to. I want it to use.

01:07:10
<transcript>: the d no

01:07:12
<transcript>: The D, no thing.

01:07:14
<transcript>: Or is it.

01:07:17
nexxeln: just do export {} at the top to use top level await

01:07:22
<transcript>: Food directory not sound. Oh, so I have to actually put Adino. Yeah, I gotta actually do the thing. We'll do it.

01:07:22
<transcript>: you know

01:07:27
<transcript>: You know JSON, can you just be empty? Well, that fixed my any of them.

01:07:35
jenswoeste: good afternoon adam & chat!

01:07:36
<transcript>: What terminal? Is that? Terminal. Terminal. Terminal. I always forget the words.

01:07:48
<transcript>: That means you need package. Json needs delete. Yeah, yeah, I got it. Json now. So the emulator. I think that's the word is alacrity.

01:07:48
<transcript>: the terminal

01:07:49
<transcript>: The terminal.

01:07:51
<transcript>: Is Zsa.

01:07:59
<transcript>: I think is that the right words for the right things? And then it's neoveim in terms of my text editor. And I'm using tmux because it's cool.

01:07:59
<transcript>: how's that

01:08:04
<transcript>: How's that did I did I do? Okay. Welcome to my chat. Imagine room.

01:08:04
amberdev: Zsh = shell

01:08:06
nexxeln: zsh is a shell

01:08:08
glamshatterskull: shell is zsh... terminal is alacritty

01:08:11
hasanhaja: Hi Adam!

01:08:13
<transcript>: New feature just do exploit at the top to use toplevel await okay good afternoon after Yens is here.

01:08:13
<transcript>: oh zsh

01:08:20
amberdev: Terminal emulator

01:08:21
<transcript>: Oh, Zsh is my shell? Thank you, thank you, thank you, thank you Terminal is my is alacrity you all are my MVPs.

01:08:21
<transcript>: welcome to chat who's

01:08:23
hasanhaja: How do you use tmux and nvim together?

01:08:24
<transcript>: Welcome to Chat. Who's on Hi.

01:08:24
<transcript>: okay my

01:08:28
<transcript>: Okay, my terminal emulator. Okay, let's do this. Let's do.

01:08:40
<transcript>: Export like this. Oh, did you start working, though? Before I do that, I think it's working now. It does. Top level away. Dino is just smart, you know, just nodes things. Okay, let's say.

01:08:40
<transcript>: let's

01:08:43
<transcript>: Let's put one TX T.

01:08:43
<transcript>: okay

01:08:44
<transcript>: Okay.

01:08:44
<transcript>: so i'm not

01:08:54
nexxeln: no it can't do top level await afaik LUL

01:08:55
<transcript>: So I'm not gonna need that. So that's my file. What happens if I just cancel that log file? Can I do the Watch thing with Dina? You know, watch.

01:08:56
amberdev: So... Deno starts to get off?

01:08:57
<transcript>: Or something.

01:09:04
amberdev: *take off

01:09:06
<transcript>: Anybody is there like a this is where I should do the thing and where I read like the help, but then like someone in chat's just gonna do it before I do.

01:09:10
<transcript>: Dino starts to get off take off.

01:09:14
<transcript>: It can't do topoval weight Oh.

01:09:14
<transcript>: that's

01:09:15
<transcript>: That's.

01:09:19
<transcript>: How do you use Team X and Inv together.

01:09:21
amberdev: See it more and more in the wild

01:09:27
teej_dv: sry, i was afk -- don't know if you asked me anything

01:09:27
hasanhaja: Been using tmux for a while now, and been learning vim motions over the past couple weeks in vscode, and would like to start switching over to nvim properly

01:09:29
<transcript>: Well alacrity doesn't have tabs, so just use Tmax is like tabs in my alacrity. So I want to create a new tab. I just do like that.

01:09:35
<transcript>: Does that answer your questions? I'm not smart enough to answer your question. I think it's a real answer.

01:09:35
<transcript>: you ready

01:09:43
nexxeln: deno run --watch file.ts

01:09:48
<transcript>: You ready? Fk don't know if you ask anything. I probably did teach, but it's okay. I've been using Team Extra awhile now and been learning the motions over the past couple weeks in Vs. Code. Why start watching? Switching over to the inventory. It's been a ton of fun. Hassan.

01:09:48
<transcript>: dino run

01:09:57
<transcript>: Dino, Run, watch. Thank you. Next, I was waiting for someone to give me the answer. Do you know Run, watch. File. Ps. Oh, well, it's one. Yes.

01:09:59
<transcript>: Yes.

01:10:02
<transcript>: That's interesting.

01:10:02
<transcript>: no just like

01:10:05
kociqq: also add -A flag

01:10:06
<transcript>: No. Just like does it right. That doesn't even ask.

01:10:11
<transcript>: So. Okay, so read file. What do we got here? What we got.

01:10:12
kociqq: to allow everything

01:10:15
<transcript>: What is this.

01:10:19
nexxeln: deno is more secure thats the point

01:10:21
<transcript>: Oh, can't tell me anything about it. Is the D no language server terrible? Or am I terrible.

01:10:22
amberdev: You must give permissions explicitly

01:10:31
<transcript>: Like I know the TypeScript language server is known for being really good. Is the Dino one not so good.

01:10:33
teej_dv: why_not_both.jpg ?

01:10:34
amberdev: know nothing about Deno

01:10:38
<transcript>: Why not both.

01:10:40
nexxeln: const input = await Deno.readTextFIle("input.txt")

01:10:41
hasanhaja: Yeah you need to explicitly allow different permissions. You can pass it as a flag

01:10:44
<transcript>: Okay. Well, I can't seem to, like, get any information about this particular thing.

01:10:47
<transcript>: It's ignore me.

01:10:47
<transcript>: what about this

01:10:47
nexxeln: deno lsp is great now

01:10:51
nexxeln: used to be trash

01:10:52
glamshatterskull: deno makes me wanna listen to devo so that's cool

01:10:53
<transcript>: What about this thing or this thing? Okay, so the language server not the best.

01:10:54
cowfacedude99: check the lsp attached

01:10:56
<transcript>: This makes me think I've broken. I've done something wrong.

01:11:01
<transcript>: Is it attached? A good call LSP it might not be attached.

01:11:05
kociqq: yeah deno lsp is very good

01:11:06
<transcript>: That would be funny if I was blaming it for not even being here.

01:11:06
<transcript>: config do you know l

01:11:11
<transcript>: Config? Do you know LS it is attached. I believe this means.

01:11:14
<transcript>: Right.

01:11:16
<transcript>: Config.

01:11:18
<transcript>: Client.

01:11:19
amberdev: it is not

01:11:21
itssupermatix: You should try VSCode's LSP Kappa

01:11:22
<transcript>: Reclines. Attached. Okay, so it's not attached.

01:11:25
<transcript>: Okay. How do I do? How do I.

01:11:25
<transcript>: attach

01:11:25
cowfacedude99: it is not LUL

01:11:31
<transcript>: Attach it. Do you know? Makes me want to listen to Devo. So that's cool.

01:11:34
<transcript>: How do I? How do I? How do I.

01:11:37
<transcript>: Should try this codes? Lsp.

01:11:37
<transcript>: so

01:11:38
teej_dv: you probably don't have package.json at root

01:11:41
<transcript>: So it's not attached. I need to attach it.

01:11:43
teej_dv: so it's not knowing it should attach

01:11:50
<transcript>: Probably don't have package race, Jason, I do have I have a D, not JSON. I just a Dimpy. I didn't put anything in it. Do I need to like Dino and it. Let's do this.

01:11:50
<transcript>: let's do

01:11:50
cowfacedude99: @teej_dv that's for node

01:11:52
<transcript>: Let's do Dina.

01:11:52
<transcript>: dinat

01:11:54
glamshatterskull: :Mason ?

01:11:54
<transcript>: Dinat. I'm just guessing.

01:11:54
<transcript>: it

01:11:55
<transcript>: It.

01:11:59
teej_dv: what's your config for deno?

01:12:03
<transcript>: The okay.

01:12:07
<transcript>: Now I want to keep that up.

01:12:09
<transcript>: You know JSON.

01:12:09
<transcript>: it created

01:12:10
aarondfrancis: sup nerds, what'd I miss

01:12:11
<transcript>: It created a main.

01:12:15
<transcript>: In here. So that attached.

01:12:15
<transcript>: the lc

01:12:17
<transcript>: The LC. Info.

01:12:20
<transcript>: For clients attached? I bet it's attached.

01:12:23
teej_dv: can't see anything?

01:12:23
<transcript>: It's attached. So what did I do wrong.

01:12:23
amberdev: null-ls or lsp-config

01:12:26
<transcript>: In my one TS.

01:12:27
glamshatterskull: screen freeze again

01:12:33
<transcript>: Right now.

01:12:33
<transcript>: there's something

01:12:35
cowfacedude99: and we need reward points for triggering a buzzer for screen freeze LUL

01:12:36
<transcript>: There's something about file names with numbers. I don't know.

01:12:36
<transcript>: screen free

01:12:38
<transcript>: Screen freeze? Oh.

01:12:41
<transcript>: Aaron's. Here.

01:12:46
<transcript>: You missed. We're doing admin of code. I haven't even gotten started because I'm still configuring my editor.

01:12:47
glamshatterskull: @cowfacedude99 LUL

01:12:49
<transcript>: That's awesome.

01:12:52
teej_dv: oh dang @aarondfrancis in the house

01:12:58
<transcript>: I was gone, Aaron. I was gone for a week. I wish you would have come to reinvent, Erin. We thought we went to the plant scale. Booth. Had a good time.

01:13:02
<transcript>: What's your config for? Dino.

01:13:02
<transcript>: i can't

01:13:07
<transcript>: I can't see anything. Null. Lsp or not. Ls or LSP? Config.

01:13:10
<transcript>: Triggering a button for screen freeze.

01:13:10
<transcript>: we're points

01:13:12
<transcript>: We're points for talking about it. Yes, you do.

01:13:15
<transcript>: Well, I guess. Okay. Question.

01:13:19
<transcript>: So I made a one TS file.

01:13:19
<transcript>: it does not

01:13:21
<transcript>: It does not have the LSP attached.

01:13:21
<transcript>: or maybe i need

01:13:23
aarondfrancis: @teej_dv you're everywhere man!

01:13:26
teej_dv: <3

01:13:28
<transcript>: Or maybe I need to close the buffer. Let's just close it and let's reopen. I wonder if it's because.

01:13:31
<transcript>: I had the buffer open before.

01:13:34
<transcript>: Right. You know, I'm saying.

01:13:37
<transcript>: Phil.

01:13:39
<transcript>: So much attach.

01:13:41
<transcript>: Four class out. We.

01:13:43
amberdev: :LspRestart?

01:13:48
<transcript>: Attached now. So. Okay, Dina Willis is attached. So why can't I see what this thing is.

01:13:52
<transcript>: Oh, I can't. It says D no FS file.

01:13:55
<transcript>: But.

01:13:55
<transcript>: why

01:13:59
<transcript>: Why, why can't oh, look, it's working, it's working, it's working. Never mind.

01:13:59
<transcript>: okay

01:14:01
<transcript>: Okay, read, sync.

01:14:10
<transcript>: Well, wait a minute. I already waited it. So what is this.

01:14:10
<transcript>: an fs

01:14:12
<transcript>: An FS file.

01:14:16
<transcript>: Reading files in several different ways.

01:14:19
teej_dv: gotta run, might be back in a bit

01:14:19
tastefulelk: I denot know

01:14:21
<transcript>: It's fun to learn how to read a file again.

01:14:21
<transcript>: read text

01:14:27
<transcript>: Read text file. There you go. Odino. Open. Yeah. This is. This is not what I want. I want, really.

01:14:27
<transcript>: text

01:14:32
<transcript>: Text file. I'm pretty sure that is what somebody said at the very beginning.

01:14:33
<transcript>: And.

01:14:33
<transcript>: ignored them

01:14:35
<transcript>: Ignored them.

01:14:35
<transcript>: sorry

01:14:36
<transcript>: Sorry.

01:14:36
<transcript>: i'm bad

01:14:43
<transcript>: I'm bad. Okay, so it's still just file. And then let's see what else. Once I read a text file, what do I do with it.

01:14:46
<transcript>: Read, file, sync.

01:14:46
<transcript>: file

01:14:49
<transcript>: File seek.

01:14:51
<transcript>: File read.

01:15:00
<transcript>: So if I want to read it and I have to read it into a buffer. What's the whole point of read textile. I feel like that should be like, handy. Yeah, it just turns a string.

01:15:04
<transcript>: So it looks like this is not actually.

01:15:06
nexxeln: @adamdotdev export {} at the top

01:15:16
<transcript>: Here we go. Okay, now it's actually okay. I don't know what happens. For some reason, the file watcher thing wasn't watching.

01:15:19
<transcript>: Okay gotta run see a teach.

01:15:20
nexxeln: top level await works in modules

01:15:22
<transcript>: teacher

01:15:23
hasanhaja: Fun fact: Deno Deploy only supports the async API for file IO

01:15:39
<transcript>: Teacher. Lf restart. I think we're good. Now, if we finally were an hour and 15 minutes in and I've got an editor that works. We're writing some Dino because I've never played the Dino. And what are we gonna do? We're gonna solve this advent of code problem? Let's go back here. Okay? So I need to. I've got, like, a list.

01:15:54
<transcript>: Of these things. Every time there's a space that denotes, like the end of the thing. Okay, so let's just do this. I want the lines. Can I split cost lines? Oh, I should have Copilot enabled now. I guess it's not working.

01:15:58
<transcript>: File dot split.

01:15:58
<transcript>: oh it still has

01:16:08
<transcript>: Oh, it still has a split. Okay, good. I want to split on new line. There's probably like a Heller for this. Like lines. I don't know. Maybe. Maybe not.

01:16:12
<transcript>: Top level of weight Works in modules.

01:16:15
<transcript>: It's working, it's working next. It's working.

01:16:19
<transcript>: Dino deploy only supports the Async API for file IO.

01:16:23
<transcript>: I won't be deploying this so that's good news.

01:16:23
<transcript>: i do have

01:16:33
<transcript>: I do have to pee, though, and that's unfortunate because somebody just puts these glasses on me. They spent Hasan just spent 500 or something points. And now I have to pee.

01:16:35
glamshatterskull: lspeepee

01:16:38
<transcript>: Sometimes it works out that way. You know, sometimes I'll bear back.

01:16:50
jenswoeste: lets monitor his twitter feed LUL

01:19:05
bronifty: ðŸ’©

01:20:56
stiefbroerikzitvast: thats a long wee

01:21:14
stiefbroerikzitvast: i bet its a poo even

01:24:03
jenswoeste: peetweet: https://twitter.com/adamdotdev/status/1600135598613970948

01:25:33
hasanhaja: He's definitely not gonna have the raybans when he gets back

01:27:29
<transcript>: I will put the race back on. Look at this.

01:27:29
<transcript>: on my on the

01:27:30
stiefbroerikzitvast: @JensWoeste what happened to our goblin overlord Nick Ansible? Do you know?

01:27:31
<transcript>: On my on the dime.

01:27:34
<transcript>: My kids, listen, my kid, you people.

01:27:36
<transcript>: My kids are awake.

01:27:36
<transcript>: and

01:27:39
nexxeln: welcome back

01:27:40
<transcript>: And I saw my kids for a bit. Lsp.

01:27:49
<transcript>: You all just trying to figure out what I'm doing in the bathroom.

01:27:57
<transcript>: What happened to our Goblin Overlord Nick Ansible Isina is his uh.

01:28:04
<transcript>: Star. I'm forgetting his. What is his handle? I know. Nick. Sorry. Ansible. Thank you.

01:28:04
<transcript>: welcome back

01:28:06
stiefbroerikzitvast: star_ansible

01:28:11
<transcript>: Welcome back. I'm back. Let's do some AOC. I realize I spent a lot of time not doing AOC.

01:28:13
jenswoeste: @StiefbroerIkZitVast startup closed - new job

01:28:16
<transcript>: But we're set up now we know how to split a file.

01:28:19
<transcript>: We got a Lar bars.

01:28:19
stiefbroerikzitvast: @JensWoeste really?

01:28:24
<transcript>: Think we're just most moments away from solving day one moment.

01:28:32
glamshatterskull: grats @JensWoeste !!

01:28:36
<transcript>: I didn't know this.

01:28:37
glamshatterskull: or not? :D

01:28:41
<transcript>: I didn't know this about Star ensable started up.

01:28:41
glamshatterskull: dunno

01:28:48
<transcript>: I don't like it.

01:28:51
<transcript>: Okay.

01:28:52
stiefbroerikzitvast: https://hireproof.io/ its still live

01:28:53
<transcript>: This isn't gonna work.

01:28:56
<transcript>: Gonna have to.

01:29:00
<transcript>: Do the a flag or whatever.

01:29:05
<transcript>: No.

01:29:09
<transcript>: That I could do a to like.

01:29:15
<transcript>: Thank you so much.

01:29:15
<transcript>: for something

01:29:17
<transcript>: For something what just happened.

01:29:19
nexxeln: what it closed??

01:29:21
nexxeln: noooooo

01:29:23
<transcript>: I just had a noise in my ears. What was that.

01:29:23
kociqq: capital A

01:29:28
jenswoeste: the CEO sent out an email the other day - star has a new job at deepnote

01:29:30
<transcript>: Capitalist that's the problem.

01:29:34
<transcript>: Cool. Okay.

01:29:35
<transcript>: Should we split it.

01:29:41
<transcript>: We're gonna go like four Const line of lines.

01:29:46
<transcript>: I mean it's just JavaScript. I can just do JavaScript stuff.

01:29:50
<transcript>: Okay. So.

01:29:50
<transcript>: let's

01:29:50
jenswoeste: @StiefbroerIkZitVast switching off servers at new years

01:29:54
<transcript>: Let's see. Let's do this. Let's have like a.

01:30:02
<transcript>: Line.

01:30:05
<transcript>: Equals empty string.

01:30:08
<transcript>: I don't know if it's actually gonna be empty strings.

01:30:08
<transcript>: what

01:30:09
<transcript>: What will those be.

01:30:13
<transcript>: Well, that'd be an empty string.

01:30:13
<transcript>: yeah

01:30:13
stiefbroerikzitvast: and no more streams?

01:30:15
<transcript>: Yeah, no. Is this space.

01:30:20
<transcript>: I think it's empty. String. Okay.

01:30:28
<transcript>: Switching our servers at New Year's. Wow. See how email the other day. Star has a new job at Deep. Now.

01:30:31
<transcript>: I hope he ends up back on Twitter.

01:30:36
<transcript>: See if Star Ensable on Twitch.

01:30:36
<transcript>: okay so

01:30:38
<transcript>: Okay. So if it's a.

01:30:38
<transcript>: empty

01:30:42
<transcript>: Empty line. Then we want to.

01:30:43
jenswoeste: @StiefbroerIkZitVast we should spam him about getting back on twitch

01:30:45
<transcript>: Do something we want to say.

01:30:48
<transcript>: L's push.

01:30:50
<transcript>: Elf.

01:30:53
<transcript>: We're gonna also have let else.

01:30:57
<transcript>: Know no what.

01:30:59
jenswoeste: maybe he can do live demos of deepnote LUL

01:31:03
<transcript>: Else would be an array. I guess. I don't know. I'm probably doing this the worst possible way, but I don't care.

01:31:07
<transcript>: So elves, this is TypeScript. So I guess I should type stuff.

01:31:13
<transcript>: This is an array of numbers.

01:31:16
<transcript>: And this is going to be.

01:31:21
<transcript>: An array of array of numbers, I guess. Right.

01:31:24
<transcript>: So push elf.

01:31:24
<transcript>: and

01:31:24
aj_stuyvenberg: underrated alt-j album

01:31:28
<transcript>: And then else equals like that.

01:31:28
<transcript>: and in

01:31:30
<transcript>: And in here we say.

01:31:32
<transcript>: Elf, push.

01:31:32
<transcript>: oh wait wait

01:31:35
<transcript>: Oh, wait, wait? If there's no else.

01:31:49
<transcript>: Self equals app and then elf push line. I guess I should do.

01:31:51
<transcript>: I should do number.

01:31:56
<transcript>: Parse Int is that is that a node thing.

01:31:56
<transcript>: well

01:31:58
<transcript>: Well for one thing.

01:32:11
<transcript>: Number like that right number? Is that a double script thing or that's gonna be my constant question is, is the thing I'm writing a JavaScript thing or a node thing? I guess it's not a note thing. Unless it's like a library. That's node library like FX.

01:32:15
<transcript>: So parse Int line.

01:32:15
<transcript>: okay

01:32:16
<transcript>: Okay.

01:32:23
<transcript>: We push some numbers into the Elf. When we hit an empty line, we push the elf into the elves.

01:32:23
<transcript>: this should

01:32:25
<transcript>: This should give us.

01:32:31
<transcript>: This should give us the elves.

01:32:31
<transcript>: but

01:32:33
<transcript>: But also need to.

01:32:35
<transcript>: Push.

01:32:35
<transcript>: else

01:32:36
<transcript>: Else.

01:32:37
jenswoeste: !lurk (gotta walk the dog)

01:32:41
<transcript>: At the end because I don't think we'll get there.

01:32:43
<transcript>: Nan.

01:32:43
<transcript>: the

01:32:45
<transcript>: The name's about.

01:32:48
<transcript>: So let's see here.

01:32:51
<transcript>: Let's just print the first one.

01:32:51
<transcript>: else

01:32:52
<transcript>: Else.

01:33:00
<transcript>: 9686 pins. Yep, that looks good. Yep, Yep, Yep.

01:33:04
<transcript>: Okay. So the first one's good.

01:33:06
<transcript>: What if we said the second one.

01:33:13
<transcript>: Nan. Okay. So the NAN we're getting the. Oh, here, here. I got to continue. Right.

01:33:17
<transcript>: There we go.

01:33:17
<transcript>: okay

01:33:18
<transcript>: Okay.

01:33:18
<transcript>: so we got

01:33:21
<transcript>: So we got our elves made.

01:33:26
<transcript>: Like this array is now good. So now we're gonna get the.

01:33:30
<transcript>: Cops, Max.

01:33:33
<transcript>: Equals L's.

01:33:33
<transcript>: map

01:33:35
<transcript>: Map.

01:33:36
<transcript>: Edu.

01:33:42
<transcript>: Simona, some.

01:33:46
<transcript>: E is a what is he.

01:33:46
<transcript>: number

01:33:48
<transcript>: Number array, I'm gonna say.

01:33:48
<transcript>: kinds of

01:33:55
<transcript>: Kinds of like math. Sum. What? I don't know. This is Dino. I can't do that. That's probably or no, that's JavaScript.

01:33:58
<transcript>: How do you sum the number.

01:34:00
<transcript>: Javascript.

01:34:00
<transcript>: some numbers

01:34:02
<transcript>: Some numbers in array.

01:34:12
<transcript>: Oh, reduce. I should reduce, yeah, yeah? This is always haha. It's a MapReduce problem.

01:34:12
<transcript>: wow

01:34:13
<transcript>: Wow.

01:34:17
<transcript>: No worries? Ians Lurk. Away.

01:34:20
<transcript>: This is a MapReduce problem. People.

01:34:28
<transcript>: We should spam him about getting back on Twitch. Yes. Maybe do live demos a day. That sounds good.

01:34:28
<transcript>: underrated all jl

01:34:34
<transcript>: Underrated all Jlbum that's right, AJ Every album by LJ is an underrated alt J album.

01:34:36
cowfacedude99: map and reduce are my most used functions LUL

01:34:38
<transcript>: Max Elves map.

01:34:38
<transcript>: and we're gonna

01:34:40
<transcript>: And we're gonna do.

01:34:42
<transcript>: E reduce.

01:34:49
<transcript>: It could be like the Accumulator. Right. First and then the thing. And then we're gonna say.

01:34:52
<transcript>: That plus a.

01:34:52
<transcript>: and we're gonna

01:34:55
<transcript>: And we're gonna say zero.

01:35:03
<transcript>: Right. So if I map each of them to their number, their their sum.

01:35:09
<transcript>: So now this is an array of numbers, and we're gonna do, like.

01:35:12
<transcript>: Math Max.

01:35:15
<transcript>: No, that's not a thing.

01:35:20
<transcript>: Larger of a setup supplied numeric expressions. Or maybe it is.

01:35:22
<transcript>: Maybe this.

01:35:25
<transcript>: What did I do wrong here, though.

01:35:31
<transcript>: Argument type. Nope. Numbers are simply parameter parameter type number. Oh, I got spread it.

01:35:33
<transcript>: You know.

01:35:37
<transcript>: Just got spread it.

01:35:37
<transcript>: sixty nine

01:35:41
<transcript>: 69,206. I don't know if that's right.

01:35:45
<transcript>: Let's say this. Let's say Const.

01:35:48
<transcript>: construction

01:35:51
<transcript>: Construction equals. And then we'll do like.

01:35:52
cowfacedude99: nice LUL

01:35:54
<transcript>: This.

01:35:57
<transcript>: What did I do wrong here.

01:36:00
<transcript>: Oh.

01:36:03
<transcript>: I can't do.

01:36:08
<transcript>: That so totals. And then we'll do like spread totals.

01:36:13
<transcript>: Totals.

01:36:14
<transcript>: We did it.

01:36:14
<transcript>: so we're

01:36:17
<transcript>: So we're gonna log.

01:36:20
<transcript>: Totals.

01:36:27
<transcript>: I guess let's just do totals. Zero.

01:36:27
rambo247: Whatâ€™s the runtime xd

01:36:34
<transcript>: So the first one is saying, has 56,873. Does that look right.

01:36:36
<transcript>: What are these.

01:36:38
<transcript>: Yeah.

01:36:38
<transcript>: i think this

01:36:42
<transcript>: I think this is right. So, 69, two, six is our answer.

01:36:46
<transcript>: Am I copying it? I don't know.

01:36:46
<transcript>: let's go in

01:36:50
impostorengineer: can it be?

01:36:51
<transcript>: Let's go in here and paste it and see if we did it right. Do you get like shamed if you get the wrong answer.

01:36:54
impostorengineer: if the first elf is 56k

01:36:55
<transcript>: 69206.

01:36:57
<transcript>: They're gonna say you failed.

01:37:03
<transcript>: Right answer. Goal one. Gold star. Closer to clicking. Enough starfruit. Alright.

01:37:03
<transcript>: we did

01:37:07
<transcript>: We did it. The first elf is 56K.

01:37:10
<transcript>: I think we did it.

01:37:10
<transcript>: what's the runtime

01:37:12
<transcript>: What's the runtime? We're using Dino.

01:37:12
<transcript>: di

01:37:14
<transcript>: Dino.

01:37:20
<transcript>: Okay.

01:37:20
<transcript>: i'm gonna eat more

01:37:22
<transcript>: I'm gonna eat more. Lar bar.

01:37:27
<transcript>: bars

01:37:27
<transcript>: bars to day two

01:37:28
<transcript>: Bars to day two.

01:37:30
rollie042: You can turn the Star fruit back into 1-3 seeds, thus growing your investment each iteration

01:37:33
rambo247: I meant Big o

01:37:50
cowfacedude99: part 2

01:37:52
impostorengineer: oh! wait. is everyone getting different inputs?

01:37:53
<transcript>: Oh, wait, this is still day one, but part two. Right.

01:37:56
<transcript>: Part two.

01:37:59
<transcript>: Yeah.

01:37:59
<transcript>: i'm gonna start

01:38:01
cowfacedude99: @ImpostorEngineer yes

01:38:01
<transcript>: I'm gonna start back into one to three seeds.

01:38:06
impostorengineer: ah!

01:38:08
<transcript>: Everyone is getting different inputs. That's right.

01:38:11
<transcript>: Okay.

01:38:11
<transcript>: part two

01:38:14
<transcript>: Part Two Timing Calculate the answer to Elle's question.

01:38:28
<transcript>: The Elves would instead.

01:38:28
<transcript>: like to know

01:38:32
<transcript>: Like to know the total calories carried by the top three elves carrying the most calories.

01:38:32
<transcript>: now even if one

01:38:36
<transcript>: Now, even if one of those elves are under the snacks, they still have two backups.

01:38:46
<transcript>: The sum of the calories carried by these three elves. Okay, so some the top three.

01:38:48
<transcript>: Okay.

01:38:48
<transcript>: that sounds

01:38:51
<transcript>: That sounds pretty reasonable.

01:38:51
<transcript>: so

01:38:52
<transcript>: So.

01:38:52
<transcript>: here's

01:38:55
<transcript>: Here's. Our Max. We don't need that anymore.

01:38:59
<transcript>: That we have the totals. Let's do like sorted.

01:38:59
<transcript>: total

01:39:01
<transcript>: Total sort.

01:39:21
<transcript>: Of sending that's ascending, so we want.

01:39:24
<transcript>: E Minus a.

01:39:24
<transcript>: here

01:39:30
<transcript>: Here we go. Okay. So that's in order, and then we'll just take the top three.

01:39:30
<transcript>: sorted

01:39:31
<transcript>: Sorted.

01:39:31
<transcript>: sl

01:39:33
<transcript>: Slice.

01:39:39
<transcript>: Zero to three. No, zero to two.

01:39:39
<transcript>: o to be

01:39:40
<transcript>: O to be.

01:39:44
<transcript>: Yeah. Here we go.

01:39:44
<transcript>: then

01:39:45
<transcript>: Then summum.

01:39:51
<transcript>: Math. No.

01:39:51
<transcript>: what do we do

01:39:53
<transcript>: What do we do? Reduce.

01:39:57
<transcript>: Yeah. Top three. Reduce.

01:40:03
<transcript>: Okay.

01:40:08
<transcript>: There is our Total 197400.

01:40:13
<transcript>: Feels good.

01:40:20
<transcript>: Two gold stars. Let's see you have completed a one. You can share this victory or return to your Admin calendar.

01:40:25
<transcript>: What's this mean? What is a little squigglies? How long it took me or something.

01:40:29
<transcript>: Or is he gonna make a picture? It's gonna make a picture, isn't it.

01:40:34
<transcript>: It's gonna make a picture. I'm pretty excited.

01:40:36
<transcript>: All right, they too. Let's do it.

01:40:42
<transcript>: I guess I'll uncommon those.

01:40:46
<transcript>: This is down here.

01:40:57
<transcript>: I'm never gonna look at this again.

01:41:00
<transcript>: Ever in the history of ever.

01:41:02
<transcript>: That was okay, okay.

01:41:02
<transcript>: we're gonna

01:41:03
impostorengineer: it makes a christmas scene at the end?

01:41:05
<transcript>: We're gonna do two.

01:41:12
<transcript>: Watching file number two. Let's do stuff else. Beginning to set up camp on the Beach.

01:41:12
cowfacedude99: @ImpostorEngineer yes

01:41:17
<transcript>: So decides whose tint gets to be closest to the snack storage.

01:41:25
<transcript>: Rocket, Scissors Tournament Zardium progress. Mmhmm. I know what Rock Paper Scissors is.

01:41:39
<transcript>: Appreciative of your help yesterday. One else gives you an encrypted strategy guide, your puzzle input. They say we'll be sure to help you win. The first column is what you're opponent is going to play A for Rock B for paper and seeperson scissors. Okay, second column.

01:41:39
<transcript>: suddenly

01:41:49
<transcript>: Suddenly the elf is Callaway to help with someone's tent. Uhoh, the sound column. You reason must be what you should play in response to X or in response. X for rock, Y for paper, in Z for scissors.

01:41:55
<transcript>: Winning every time would be suspicious, so the responses must have been carefully chosen.

01:42:04
<transcript>: The winner of the whole tournament is the player with the highest score. Your total score is the sum of your scores for each round. The score for a single round is a score for the shape you selected.

01:42:23
<transcript>: One for rock, two for paper, three for scissors, plus the score for the outcome of the round zero. If you lost three, ith around with the draw and six if you won woo since you can't be sure if the elf is trying to help you or trick you, you should calculate the score you would get if you were to follow the strategy guide. For example, suppose you were given the following tragedy guide.

01:42:23
<transcript>: a why

01:42:39
<transcript>: A. Why BX. Cz. This strategy guy predicts and recommends the following. In the first round, your opponent will choose Rock A, and you should choose paper. This ends in a win for you with a score of eight. Two because you just pay for six because you won the second round, your opponent will choose paper.

01:42:39
<transcript>: and you should

01:42:50
<transcript>: And you should choose Rock. This ends in a loss view with the score of one. Okay, the third round is a draw, with both players choosing scissors, giving you a score of three plus three equals six.

01:42:53
<transcript>: Drift Follow Strategy Guide you would get a total score 15.

01:42:53
<transcript>: what

01:42:56
<transcript>: What would your total score be if everything goes.

01:42:56
<transcript>: exactly according

01:43:01
<transcript>: Exactly according to your strategy guide. Okay, cool, let's download our input.

01:43:05
<transcript>: We'll just do that.

01:43:05
<transcript>: and

01:43:07
<transcript>: And we'll say, two Dot, TXT.

01:43:18
<transcript>: Okay, there's our strategy guide. We're gonna go in here, and we're gonna say, Actually, I'm gonna go in here, and I'm gonna go to the top, and I'm gonna copy.

01:43:20
<transcript>: Just like that.

01:43:26
<transcript>: Now I'm in two TS. Okay, so we're reading the file.

01:43:28
<transcript>: It's file two.

01:43:28
<transcript>: we're splitting

01:43:32
<transcript>: We're splitting the lines console log.

01:43:32
<transcript>: lines

01:43:36
<transcript>: Lines to the working. Oh, no. Something's wrong. Okay.

01:43:36
<transcript>: thank you so much

01:43:43
<transcript>: Thank you so much, Nick Statio for the follow. It makes a Christmas scene at the end. Ooh, nice.

01:43:48
<transcript>: Okay.

01:43:52
<transcript>: Did I not save this buffer.

01:43:52
<transcript>: maybe not

01:43:53
<transcript>: Maybe not.

01:43:58
rambo247: Screen froze?

01:43:59
<transcript>: There we go. Okay. So there's our lines.

01:44:02
<transcript>: So we're gonna say.

01:44:05
<transcript>: Four Const lines.

01:44:06
<transcript>: Lines.

01:44:06
<transcript>: i don't know why

01:44:11
<transcript>: I don't know why those are cats. Okay, so for each line, we're gonna have.

01:44:17
<transcript>: Them, us.

01:44:19
cowfacedude99: @Rambo247 not again!!!!

01:44:20
<transcript>: Equals.

01:44:22
<transcript>: Mine.

01:44:28
<transcript>: So we have their move, our move.

01:44:28
<transcript>: and then

01:44:31
<transcript>: And then we'll have score.

01:44:33
<transcript>: I gotta go back here and read this.

01:44:33
<transcript>: so

01:44:34
<transcript>: So.

01:44:36
<transcript>: Cops.

01:44:36
<transcript>: let's

01:44:38
<transcript>: Let's see.

01:44:39
<transcript>: Const.

01:44:41
cowfacedude99: @adamdotdev we need the buzzer asap

01:44:43
<transcript>: construction

01:44:45
<transcript>: Construction.

01:44:45
<transcript>: score

01:44:46
<transcript>: Score.

01:44:48
<transcript>: Equals s.

01:44:50
<transcript>: Equals.

01:44:56
<transcript>: X. Yxz. So Y is what? Now.

01:45:02
<transcript>: X is for rock, Wys for paper, and Z is for scissors.

01:45:02
<transcript>: so if

01:45:04
<transcript>: So if it's X.

01:45:08
mattmancodes: screen freeze

01:45:10
<transcript>: Just doing a nested terrainery and you all can deal with it.

01:45:10
<transcript>: need the

01:45:17
<transcript>: Need the buzzer? Oh, no. Is it frozen? Oh, it's frozen. Oh, oh, it's frozen. Hang on, hang on.

01:45:20
<transcript>: I wish OBS didn't do this.

01:45:20
<transcript>: all the time

01:45:27
<transcript>: All the time. Okay, you guys can watch now. You can watch me write my Nest Attorney. So if US is an X.

01:45:27
<transcript>: then

01:45:33
<transcript>: Then this is going to be a score of what was next. Again, Rock, which is one I believe, Yeah.

01:45:35
<transcript>: Else.

01:45:35
<transcript>: us is

01:45:38
<transcript>: US is why.

01:45:41
<transcript>: Else.

01:45:41
<transcript>: three

01:45:42
<transcript>: Three.

01:45:45
<transcript>: Oh, I did something wrong. What did I do.

01:45:48
<transcript>: Because Nest attorneys are hard, it turns out.

01:45:48
<transcript>: no

01:45:50
<transcript>: No else.

01:45:50
<transcript>: two

01:45:52
<transcript>: Two. Oh, wait.

01:45:54
<transcript>: This should be a question Mark.

01:45:57
<transcript>: Okay.

01:45:57
<transcript>: so that's

01:46:02
<transcript>: So that's our selection score, right? That's how many points we get just for what we chose.

01:46:02
<transcript>: and

01:46:03
<transcript>: And then.

01:46:03
<transcript>: result

01:46:05
<transcript>: Result.

01:46:05
<transcript>: score

01:46:07
<transcript>: Score equals.

01:46:11
rollie042: Did you know you can have a ternary on multiple lines?

01:46:12
<transcript>: So how do I know if I won? I know if I won.

01:46:12
<transcript>: okay

01:46:14
<transcript>: Okay. Let's say about this.

01:46:16
<transcript>: Result.

01:46:16
<transcript>: equals

01:46:18
<transcript>: Equals.

01:46:20
<transcript>: One.

01:46:20
<transcript>: one

01:46:22
<transcript>: One equals.

01:46:32
<transcript>: I'm gonna do a really ugly turn area, and I know you all are gonna be like, you shouldn't do that.

01:46:36
<transcript>: Did you know you can have a Ternary on multiple lines? I didn't.

01:46:36
<transcript>: i guess

01:46:40
<transcript>: I guess I just rely on prettier to format everything.

01:46:46
<transcript>: So whatever term, whatever prettier decides to do, that's what I do. So if them.

01:46:50
<transcript>: I guess I could do like a switch on them.

01:46:55
<transcript>: I could do a switch on them. We want to do that.

01:46:57
<transcript>: Switch.

01:46:57
<transcript>: them

01:46:58
cowfacedude99: Lookup tables were my choice.

01:46:59
<transcript>: Them.

01:47:01
<transcript>: Ace.

01:47:06
<transcript>: Right.

01:47:10
<transcript>: So.

01:47:19
<transcript>: Am I just gonna have, like a let's just do this. Let total.

01:47:22
<transcript>: I guess I don't need to do that.

01:47:27
<transcript>: Total zero. We're just gonna be adding the total. So I can just, like.

01:47:34
<transcript>: In all these cases I'm just gonna do the adding right here. So if them is a.

01:47:36
<transcript>: Then.

01:47:42
<transcript>: Total plus. Well, first of all, we can say.

01:47:43
<transcript>: Total.

01:47:48
<transcript>: Plus equals selection score. We do that no matter what.

01:47:51
<transcript>: And then here we're going to say total.

01:47:51
<transcript>: plus

01:47:52
<transcript>: Plus.

01:47:56
<transcript>: US equals.

01:48:04
<transcript>: Are they rock? Then if we're.

01:48:04
<transcript>: paper

01:48:05
<transcript>: Paper.

01:48:08
<transcript>: So if we're.

01:48:08
<transcript>: y

01:48:08
<transcript>: Y.

01:48:16
<transcript>: Then they would get or we would get three points for winning.

01:48:29
<transcript>: It's hard to find information in this Blob of text. Six if you won. Okay, so we won here, right? They are a which is rock. We are y which is paper. Paper covers. Rock. We won. We get.

01:48:29
<transcript>: six points

01:48:30
<transcript>: Six points.

01:48:30
<transcript>: okay

01:48:31
<transcript>: Okay.

01:48:33
<transcript>: Else.

01:48:35
<transcript>: Equals.

01:48:40
<transcript>: The.

01:48:47
<transcript>: Then we get three points. No one, no zero. Because we lost. Right? If we're Z.

01:48:52
<transcript>: Z is scissors. They are rock.

01:48:52
<transcript>: no

01:48:53
<transcript>: No.

01:48:53
<transcript>: they smack

01:48:56
<transcript>: They smack us, we get zero points.

01:48:56
<transcript>: yeah

01:48:57
<transcript>: Yeah.

01:49:02
<transcript>: Zero. Else. Three. We had a draw. Okay.

01:49:05
<transcript>: This is awful. But you know what.

01:49:08
<transcript>: Nobody said I had to do it in a way that looked nice.

01:49:13
<transcript>: If case.

01:49:13
<transcript>: we'll

01:49:16
<transcript>: We'll say it's default.

01:49:19
<transcript>: Bro.

01:49:24
<transcript>: broke

01:49:25
<transcript>: Broke.

01:49:27
<transcript>: Right.

01:49:29
<transcript>: Yank.

01:49:37
<transcript>: Something like this. So a B. And then total here is going to be if.

01:49:45
<transcript>: They are B, B is paper, they are paper. If I am X rock.

01:49:47
<transcript>: I lose.

01:49:47
<transcript>: so

01:49:54
<transcript>: So. Oh, I guess I should find the winning one and just keep these numbers the same. So if they are.

01:49:54
<transcript>: this is

01:49:58
<transcript>: This is so hard if their paper sorry to keep it all straight.

01:50:02
<transcript>: And then what would I win with.

01:50:02
<transcript>: something

01:50:04
<transcript>: Something broke.

01:50:04
<transcript>: what would

01:50:07
<transcript>: What would I win with? I would win with.

01:50:07
<transcript>: scissors

01:50:08
<transcript>: Scissors.

01:50:08
<transcript>: and

01:50:11
<transcript>: And Zers scissors. So.

01:50:16
<transcript>: Nope. I tried to hit Z. I really did. Okay.

01:50:16
<transcript>: and then

01:50:18
<transcript>: And then Z.

01:50:18
<transcript>: we

01:50:25
<transcript>: We would we would lose it's their paper. We would lose it for a rock. Rock is X.

01:50:28
<transcript>: Why is it so hard for me.

01:50:28
<transcript>: look

01:50:34
<transcript>: Lookup. Tables. Sounds nice. That sounds nice. It's not what I did.

01:50:36
<transcript>: Also, what are lookup, tables.

01:50:40
<transcript>: Total okay so C.

01:50:40
<transcript>: i'm gonna

01:50:42
<transcript>: I'm gonna be X.

01:50:42
<transcript>: and

01:50:44
<transcript>: And this is gonna be.

01:50:51
<transcript>: Why I'm just doing that? Because it's the different ones, right. Okay. So there you go.

01:50:53
cowfacedude99: maps

01:50:54
<transcript>: There you go. Right.

01:50:56
<transcript>: Console, log.

01:50:59
<transcript>: Total.

01:51:02
<transcript>: We actually throwing? Are we hitting? What? Yeah, we are.

01:51:04
<transcript>: Why.

01:51:07
<transcript>: Uncle Dot, log.

01:51:11
<transcript>: We're gonna log in.

01:51:19
<transcript>: Breaking in all these cases. Right.

01:51:21
cowfacedude99: newline I gesss

01:51:23
<transcript>: What am I doing wrong.

01:51:30
<transcript>: Not logging. Oh, cuz then is undefined the deal.

01:51:33
<transcript>: If.

01:51:36
<transcript>: Not limb or not.

01:51:38
<transcript>: US.

01:51:38
<transcript>: continue

01:51:39
<transcript>: Continue.

01:51:43
<transcript>: Right.

01:51:46
<transcript>: Here we go, we did it.

01:51:46
<transcript>: we did it

01:51:48
<transcript>: We did it.

01:51:51
<transcript>: 4808.

01:51:51
<transcript>: is the

01:51:53
<transcript>: Is the score I believe.

01:51:55
<transcript>: I might have messed this up.

01:51:55
<transcript>: what was

01:51:57
<transcript>: What was the One, four.

01:52:03
<transcript>: Oh, if you yeah, if you choose rock? Yeah, I think it's right four, eight.

01:52:07
<transcript>: Let's get out of here. We're the ternaries take over.

01:52:19
<transcript>: My takeover. That's not the right answer. Too low. If you're stuck, make sure you're using the full input data. Also, some general tips onto the back page where you can ask for hints. Oh no, we messed up new line.

01:52:23
<transcript>: What did we mess up here.

01:52:27
<transcript>: What did we mess up.

01:52:27
<transcript>: nigalar barbara

01:52:28
<transcript>: Nigalar Barbara will help.

01:52:39
<transcript>: You.

01:52:39
teej_dv: OMEGALUL pattern matching in typescript  OMEGALUL not using a true functional lang OMEGALUL

01:52:49
<transcript>: I got cocky. I was trying to just get through day too quickly, you know.

01:52:54
<transcript>: Got cocky.

01:52:56
<transcript>: Let's do this.

01:53:08
<transcript>: Result score.

01:53:22
cowfacedude99: WE KNOW YOU ARE USING OCAML  @teej_dv LUL

01:53:32
<transcript>: I didn't do plus equals people.

01:53:35
<transcript>: 14 to 64.

01:53:35
<transcript>: think that's gonna be right

01:53:37
<transcript>: Think that's gonna be right answer.

01:53:46
<transcript>: There we go. One gold star closer to Green star fruit. Continue. Bar do.

01:53:50
<transcript>: Yelp finish is helping with the tint.

01:54:04
<transcript>: The Elf answers, helping.

01:54:04
<transcript>: i gotta close

01:54:07
<transcript>: I gotta close this file before T looks at it.

01:54:07
<transcript>: tease don't worry

01:54:08
teej_dv: LUL MUTABLE VARIABLES LUL MUTABLE STATE LUL RECIPE FOR BUGS LUL

01:54:08
<transcript>: Tease. Don't worry, don't look at this.

01:54:13
<transcript>: Didn't look at this. Just don't.

01:54:33
<transcript>: The elf finish is helping with the tent and sneaks back over to you anyway. The second column says how the round needs to end. X means you need to lose. Y means you need to end the round and a draw. Oh, I see. Z means you need to win. Good luck.

01:54:39
<transcript>: Toast scores. Okay, I go the same way. But now you need to figure out what shape to choose.

01:54:47
<transcript>: So they're. Yeah. What shape? Like paperox is. Yeah. So the round ends as indicated. Okay.

01:54:52
<transcript>: Now, Let's.

01:54:55
<transcript>: Retop Secret Strategy guide.

01:55:04
<transcript>: Total score of twelve. Following the else instructions for a second column, what would your total score be if everything goes exactly according to your strategy guide? Okay.

01:55:04
<transcript>: so now

01:55:05
<transcript>: So now.

01:55:12
<transcript>: If they say X, I need to lose.

01:55:14
<transcript>: So now I have to choose.

01:55:17
<transcript>: A certain thing. A certain selection. Okay.

01:55:27
<transcript>: Sequels X.

01:55:31
<transcript>: Away that's going to be based on them too.

01:55:38
<transcript>: I can't do selection score yet.

01:55:45
<transcript>: I mean after I do this for something I don't know. Let's think about this. So in the case where.

01:55:48
<transcript>: I feel like my switch should now be.

01:55:48
<transcript>: based on

01:55:50
<transcript>: Based on what I say.

01:55:54
<transcript>: This should now be.

01:55:57
<transcript>: US.

01:55:59
<transcript>: Case.

01:55:59
<transcript>: x

01:56:00
<transcript>: X.

01:56:02
<transcript>: Y.

01:56:03
cowfacedude99: btw loved your `arrray functions` thread @teej_dv .you finally looked like a true twitter influencer LUL

01:56:05
<transcript>: Z, right.

01:56:05
<transcript>: i think it's gonna make

01:56:07
<transcript>: I think it's gonna make more sense to do that.

01:56:12
<transcript>: Okay. So X means.

01:56:15
<transcript>: We need to lose.

01:56:16
teej_dv: ... you know it was AI generated, right cowface?

01:56:19
<transcript>: In case y equals.

01:56:22
<transcript>: Draw.

01:56:25
<transcript>: This is wind.

01:56:29
teej_dv: can't remember if you were there for that part of stream or not

01:56:29
<transcript>: So if Luz.

01:56:33
<transcript>: In my selection.

01:56:45
<transcript>: I guess I can do this. We could say, let selection mutable. Mutable state. Let selection is a string.

01:56:52
<transcript>: So then this is going to be selection equals so X.

01:56:55
<transcript>: Means I need to lose.

01:56:55
<transcript>: if

01:56:56
<transcript>: If.

01:56:56
<transcript>: then equals

01:56:58
<transcript>: Then equals.

01:57:00
<transcript>: A.

01:57:06
cowfacedude99: i read the thread.

01:57:07
<transcript>: Then I'm going to be one of these things. What am I gonna be? So if a is rock, I want to lose to them. So I want to be scissors.

01:57:07
<transcript>: which

01:57:09
<transcript>: Which is.

01:57:12
<transcript>: Scissors.

01:57:15
<transcript>: Anyone remember? Oh, it's up here.

01:57:18
<transcript>: Scissors.

01:57:21
<transcript>: Is it Z or no C.

01:57:21
<transcript>: where's the

01:57:28
<transcript>: Where's the say A for rock, beef paper, superstars? Yeah, yeah. Okay. So this would be I need to be C.

01:57:30
<transcript>: Like that.

01:57:32
<transcript>: Else.

01:57:38
<transcript>: There A. I need to be cels if them equals B.

01:57:38
<transcript>: that means

01:57:40
<transcript>: That means.

01:57:40
<transcript>: their

01:57:43
<transcript>: Their paper, rock? Paper, scissors? Yeah? Paper.

01:57:43
<transcript>: i need to

01:57:46
<transcript>: I need to lose to them, which means I need to be.

01:57:46
<transcript>: rock

01:57:47
<transcript>: Rock.

01:57:47
<transcript>: right

01:57:51
cowfacedude99: I had a coworking stream on while I was working on my stuff.

01:57:52
<transcript>: Right then I'm gonna be a Elf.

01:57:54
<transcript>: Okay.

01:57:54
<transcript>: hear me

01:57:56
<transcript>: Hear me out.

01:58:04
<transcript>: I loved your Array function thread. You finally looked like a true Twitter influencer.

01:58:08
<transcript>: I knew T. I knew that was Jet GPT.

01:58:16
<transcript>: Yeah, that was clearly GPT grift.

01:58:18
<transcript>: Okay.

01:58:24
<transcript>: Selection equals them. That all. Looks good. I think so. Then we can say, down here.

01:58:24
<transcript>: select

01:58:26
<transcript>: Selection score.

01:58:35
<transcript>: Equals instead of us.

01:58:35
<transcript>: gonna

01:58:38
<transcript>: Gonna be selection.

01:58:38
<transcript>: right

01:58:39
<transcript>: Right.

01:58:43
<transcript>: Saying Sometimes it doesn't have an answer.

01:58:47
<transcript>: Before being assigned? Yeah, Yeah.

01:58:47
<transcript>: okay

01:58:48
<transcript>: Okay.

01:59:00
<transcript>: Oh, I know. People like Teach are just rolling over. Well, you're still alive. So you're not rolling over in your grave. You're just. You're. You're having a hard time, not.

01:59:00
<transcript>: losing

01:59:03
<transcript>: Losing your cool when you see stuff like this.

01:59:05
<transcript>: Where? Where could there be bugs? I don't get it.

01:59:05
<transcript>: okay

01:59:12
<transcript>: Okay, then total is gonna be selection. So now I need to figure out the results. Well, we know the result is lose.

01:59:16
<transcript>: So this is now easy. It's like total.

01:59:16
<transcript>: equals

01:59:17
<transcript>: Equals.

01:59:17
impostorengineer: throwing a fist at the screen?

01:59:21
teej_dv: LUL i actually don't care -- i'm just cosplaying as a functional programmer

01:59:24
<transcript>: Or plus equals three. If you loot. No, you lose it. Zero. So you do nothing. Okay.

01:59:24
<transcript>: cool

01:59:30
<transcript>: Cool here is going to be total plus equals three.

01:59:30
<transcript>: and down here

01:59:34
<transcript>: And down here it's going to be total plus equals six because we win.

01:59:36
<transcript>: Okay.

01:59:36
<transcript>: and then we're gonna

01:59:46
<transcript>: And then we're gonna do like this. So if they're y they are saying I should draw. So if I want to draw this.

01:59:46
<transcript>: selection

01:59:50
<transcript>: Selection equals this them. Right.

01:59:52
<transcript>: Right.

01:59:56
<transcript>: If we want to draw.

01:59:56
<transcript>: selection

01:59:58
<transcript>: Selection is just whatever they are.

02:00:08
<transcript>: In totals plus equilibrium three? Yeah, yeah? If we want to win then we have to do this song and it again is there a we want to be So if they're rock.

02:00:08
<transcript>: we want

02:00:11
<transcript>: We want to be I guess that's B. Paper.

02:00:15
<transcript>: Yeah if their paper we want to be.

02:00:17
<transcript>: Scissors.

02:00:19
<transcript>: Elf.

02:00:19
<transcript>: we

02:00:23
<transcript>: We want to be rock. Okay. I think this is it.

02:00:23
<transcript>: what's wrong with this

02:00:26
<transcript>: What's wrong with this? Inferable types are not allowed.

02:00:30
<transcript>: Remove the type. Oh Yeah.

02:00:30
<transcript>: this doesn't

02:00:33
<transcript>: This doesn't need it. Yeah, just like that. Okay.

02:00:36
<transcript>: I think we're good now. Oh, is it? Did it do it.

02:00:41
<transcript>: 14, 424, is that I don't think that's right.

02:00:41
<transcript>: election

02:00:43
<transcript>: Election score.

02:00:47
<transcript>: Flexion equals X? Oh? Well? Selection is never gonna be X.

02:00:53
<transcript>: Selection is going to be A, B or C, right.

02:00:57
<transcript>: A, and then B.

02:01:01
<transcript>: A twelve. 382. Do we think that's the right answer.

02:01:07
<transcript>: Do everything right here. Total plus equals.

02:01:07
<transcript>: three

02:01:09
<transcript>: Three, and six.

02:01:09
<transcript>: we get

02:01:12
<transcript>: We get our selection right. Presumably.

02:01:17
<transcript>: We add the selection score. Yeah, sure. Twelve 382. Let's see.

02:01:20
<transcript>: Another penalties for missing.

02:01:30
<transcript>: Penalty for missing a whole lot. Because you just guessed that's the right answer. One gold star closer to creating enough charcoal, completed a two.

02:01:34
<transcript>: Down four to go.

02:01:37
<transcript>: That's a lot.

02:01:37
<transcript>: actually

02:01:41
<transcript>: Actually don't care, I'm just cosplaying as a functional programmer.

02:01:45
<transcript>: So stat muse.

02:02:05
<transcript>: Stammy's is written in Elixir. It's a Phoenix app. Like the Web part is Elixir and the NLP and Gene is F sharp. So I do know some functional stuff. I know it makes the brain feel nice. I do love all matching and feeling really good about like every possible case. I do love that feeling. I don't do it much anymore. In practice.

02:02:09
<transcript>: But I do know the feeling.

02:02:16
<transcript>: Okay, well, what are we doing here? I've got how much I'm got. Less than an hour.

02:02:16
<transcript>: did i stop

02:02:20
<transcript>: Did I stop really late today? I started really late, didn't I.

02:02:31
papaowl_75: so warm and fuzzy, like a warm marshmellow

02:02:32
<transcript>: Remember I asked you a question to you when you were gone.

02:02:35
<transcript>: I was in the.

02:02:37
<transcript>: I was in the top.

02:02:42
<transcript>: 5% of all J listeners on Spotify.

02:02:42
<transcript>: and i needed

02:02:44
<transcript>: And I needed to know where you're at.

02:02:48
<transcript>: You like I'll do right.

02:02:50
teej_dv: i don't use spotify

02:02:52
teej_dv: LUL

02:02:52
<transcript>: But do you like all J like I mean, how many minutes we talking.

02:03:00
<transcript>: Rucksack reorganization. It'd be really funny if he wasn't on again. Okay, he's still here. You don't use Spotify. Oh.

02:03:05
<transcript>: There you go. Extra RPC. Thank you so much for the follow.

02:03:07
<transcript>: following

02:03:08
<transcript>: Following.

02:03:08
<transcript>: okay

02:03:12
<transcript>: Okay one health is important job Loading all the RECs Act.

02:03:12
<transcript>: do you like

02:03:15
<transcript>: Do you like listening music with something on Linux or something.

02:03:23
<transcript>: I don't understand.

02:03:26
teej_dv: no, i use youtube music cause it's included with yt premium

02:03:33
sockthedev: he's back!

02:03:34
cowfacedude99: @teej_dv me too

02:03:36
teej_dv: (formerly google play music, which i liked cause you could upload your own tunes)

02:03:48
<transcript>: Youtube music because it's included with YouTube premium. Interesting.

02:03:58
<transcript>: Formerly Google Play Music, which I like because you could upload your own tunes so formally Google Play music.

02:04:00
<transcript>: Futurally.

02:04:00
<transcript>: dead

02:04:03
<transcript>: Dead because Google is kill it.

02:04:04
stream_kyle: Google Play Music was nice.

02:04:09
<transcript>: Let's make three TS.

02:04:13
<transcript>: So you can add your own music what I just do.

02:04:15
<transcript>: What, what.

02:04:17
teej_dv: yes, google just was like "what if we put the music service on the video service and have it be confusing"

02:04:19
<transcript>: Let's do this.

02:04:23
cowfacedude99: I like it because I can get concert and special clips and stuff on yt.

02:04:23
<transcript>: How I mess that up.

02:04:27
<transcript>: Wait a minute. What.

02:04:27
<transcript>: over here

02:04:28
<transcript>: Over here.

02:04:28
<transcript>: oh yeah

02:04:32
<transcript>: Oh, yeah. I just started a new tap for this. Okay, cool.

02:04:35
<transcript>: We're gonna do three now.

02:04:41
<transcript>: Red TS is doing nothing right now.

02:04:55
<transcript>: We'll see what it says. Each ruck sack has two large compartments. All I'm of Gin type are meant to go into exactly one of the two counter. Two compartments I saw trashda have said one of the days was hard. I think he specifically said his butt puckered.

02:04:55
<transcript>: and i'm curious which

02:04:58
<transcript>: And I'm curious which day that was. I'm excited.

02:05:01
<transcript>: Google Play music was nice.

02:05:01
<transcript>: just like

02:05:05
<transcript>: Just like, what if we put the music servers on the video service and have it be confusing.

02:05:07
ronanru: day 5 is hard

02:05:16
<transcript>: Day five is hard, Ronan. Okay, we gotta blaze through these then, so we can get to day five because I've only got like an hour.

02:05:16
tayloreddev: i'm up to day 5, looks quite challenging

02:05:25
impostorengineer: yeah I got stuck on day 5

02:05:31
yycsec: Just the parsing part of day 5 IMO is hard.

02:05:32
<transcript>: I suppose you have the following list of contents from six rucksacks. Wait, what a given rucksack? Always the same number items each of his two compartments. The first half of the characters represent items in the first compartment, while the second half of the characters are present items in the second compartment. Okay, so if this is a rucksack.

02:05:32
<transcript>: you split

02:05:34
<transcript>: You split it in the middle.

02:05:34
<transcript>: first half

02:05:36
<transcript>: First half.

02:05:36
<transcript>: is one

02:05:39
<transcript>: Is one compartment. Second half is the other carbon. Okay.

02:05:44
yycsec: If you hard code the stacks then it is easy I guess.

02:05:45
<transcript>: So as you have the following list of concepts from six reps first Ruck Facts contains the item that.

02:05:50
<transcript>: Which means its first compartments. That. Yep. Okay.

02:05:50
<transcript>: the only item

02:05:53
<transcript>: The only item type that appears in both departments is lowercase P.

02:05:57
<transcript>: Okay.

02:06:01
<transcript>: The second Rxx compartments.

02:06:02
itsdmg1k: what OS?

02:06:03
sockthedev: This trigger my memory of this gem https://twitter.com/tomgara/status/1587640766696140800

02:06:05
<transcript>: Okay. They have an L. Okay.

02:06:05
<transcript>: third

02:06:09
<transcript>: Third, rock sex compartments contain that and that.

02:06:12
<transcript>: They always only have one thing in combat in common.

02:06:12
<transcript>: i guess

02:06:18
<transcript>: I guess to help prioritize item rearrangement, every item type can be converted to a priority.

02:06:18
<transcript>: lower

02:06:26
<transcript>: Lowercase item types A through Z have priorities One through 26. Uppercase A through Z have priorities 27 through fits, too. Okay.

02:06:26
<transcript>: in the above example

02:06:27
cowfacedude99: @itsdmg1k mac

02:06:30
<transcript>: In the above example, the priority of the item type that appears in both someone's getting complicated.

02:06:31
cowfacedude99: @sockthedev LUL

02:06:33
<transcript>: Thank you for the followeron.

02:06:35
<transcript>: Oh, coffee.

02:06:38
<transcript>: Resub four months.

02:06:38
<transcript>: thank you so much

02:06:38
cowfacedude99: I remember that one too

02:06:41
<transcript>: Thank you so much cowface for the resub.

02:06:48
<transcript>: If you just the parking part of day Five, in my opinion, is hard. Welcome to Chat. Why, why.

02:06:50
<transcript>: C sick.

02:06:56
<transcript>: Also. Welcome to Chat. Ronan. I gotta catch up here. Thank.

02:07:03
<transcript>: You hard code the stacks, and it's easy, I guess. Okay, we'll figure that out when we get to five.

02:07:08
<transcript>: What OS? It's Mac OS.

02:07:11
<transcript>: Okay.

02:07:18
<transcript>: This one's complicated for me to hold in my little brain.

02:07:24
<transcript>: So the priority of the item type that appears in both compartments of each Rexac is 16.

02:07:29
<transcript>: Okay.

02:07:31
cowfacedude99: spoiled LUL

02:07:33
<transcript>: And the sum of these is 157.

02:07:42
teej_dv: ROFL WHAT IS TODAYS ADAM VIDEO

02:07:43
<transcript>: Find the item type that appears in both compartments of Etrexac. What is the sum of the priorities of those item types? Okay, this was a feels like maybe a lot of like tedium.

02:07:48
<transcript>: But maybe there's a smart way to do it. And I should figure out the smart one. So I'm not doing all the tedium.

02:07:48
<transcript>: i like

02:07:51
<transcript>: I like to add three TXT.

02:07:57
<transcript>: Okay.

02:07:57
<transcript>: so

02:07:59
<transcript>: So did I mess that up.

02:08:02
<transcript>: Gg starts with BD.

02:08:04
<transcript>: And then.

02:08:05
<transcript>: Ends with.

02:08:09
<transcript>: F in in that'd really suck. You know, like.

02:08:13
<transcript>: Fat finger and like type something done into the file.

02:08:16
<transcript>: Like, I know I've got the solution right.

02:08:18
<transcript>: Okay.

02:08:26
<transcript>: So what do we have? Do we have to? Let's get all the lines. Let's get all our ruck sacks, if you will.

02:08:32
<transcript>: Back here.

02:08:42
<transcript>: Okay? Don't need a total? I guess we kind of do need a total? I don't know for each line we're gonna say okay.

02:08:45
<transcript>: First compartment. Comp.

02:08:48
<transcript>: First.

02:08:50
<transcript>: Equals line.

02:08:50
<transcript>: sl

02:08:52
<transcript>: Slice, zero.

02:08:52
<transcript>: to line

02:09:07
<transcript>: To line links divided by two. Did I mess that up? I mess that up. So if the link were ten, divided by two is five. That's right. What happens when it's not an even number? I guess it has to be an even number. They're always gonna be an even number. Right? I can just ignore numbers.

02:09:12
<transcript>: So this is right. That is the first line.

02:09:12
yycsec: Yes

02:09:21
<transcript>: First compartment. This one is going to also is going to be slice line link divided by two. Okay.

02:09:27
<transcript>: Am I right? Well, aside from not spelling slash right? Am I right? I think so.

02:09:27
<transcript>: let's just

02:09:30
<transcript>: Let's just do a little test. Let's just say.

02:09:38
<transcript>: I'm.

02:09:38
<transcript>: log

02:09:40
<transcript>: Log. I'm gonna regret this.

02:09:40
<transcript>: first

02:09:41
<transcript>: First.

02:09:44
<transcript>: Oh.

02:09:44
<transcript>: no i'm not

02:09:46
<transcript>: No, I'm not right.

02:09:48
<transcript>: Definitely not right.

02:09:55
<transcript>: Wait a minute. Oh, I'm right. I'm reading the wrong file. Like that. Looks suspiciously like file number two.

02:10:00
<transcript>: Okay. There we go. So this should just be the first half.

02:10:06
<transcript>: I should have just done the first one. But you know what? We work harder, not smarter around here.

02:10:06
<transcript>: unfortunately

02:10:08
<transcript>: Unfortunately.

02:10:08
<transcript>: okay

02:10:10
<transcript>: Okay. There it is. B.

02:10:10
<transcript>: bdb

02:10:12
<transcript>: Bdbz.

02:10:14
<transcript>: Wait a minute.

02:10:23
<transcript>: Is that the. Oh, it says my file. This one. Yeah. Okay. So what is the halfway point of this? I just want to validate that the halfway points. Right.

02:10:23
<transcript>: you know

02:10:25
<transcript>: You know.

02:10:28
<transcript>: It says the W looks right.

02:10:35
<transcript>: Looks. Looks right to me. Let's maybe let's do this.

02:10:37
<transcript>: Comps.

02:10:40
<transcript>: Back.

02:10:44
<transcript>: These are gonna be.

02:10:48
<transcript>: An array of what.

02:10:54
<transcript>: These are gonna be an array of.

02:10:57
<transcript>: Key.

02:11:00
<transcript>: Like.

02:11:02
<transcript>: First.

02:11:04
<transcript>: Second, I guess.

02:11:10
<transcript>: Like that. And I'm just gonna push.

02:11:14
<transcript>: This is just temporary push.

02:11:14
<transcript>: for

02:11:15
<transcript>: For second.

02:11:15
<transcript>: and then

02:11:18
<transcript>: And then I'm gonna say, console.

02:11:20
<transcript>: Log.

02:11:27
<transcript>: Sacks. I just want to see but it got the the right thing for something, you know.

02:11:27
<transcript>: and then

02:11:35
<transcript>: And then this one starts Mln ends in JH. Yeah. Looks good. I don't know. I doubted myself, but that was always fine.

02:11:35
<transcript>: okay

02:11:40
<transcript>: Okay, so we have first, and we have second. What is today's? Adam video.

02:11:40
<transcript>: you guys got

02:11:43
<transcript>: You guys gotta tell me if I freeze by the way.

02:11:45
<transcript>: Oh.

02:11:50
<transcript>: You saw my did you just see my spoiler teach? Is that what you're talking about.

02:11:50
<transcript>: i

02:11:53
cowfacedude99: froze

02:11:54
teej_dv: yeah

02:11:55
<transcript>: I'm angry. There's people on the Internet that bother me, and I'm angry about it.

02:11:55
urobeat: screen froze

02:12:03
<transcript>: Oh, it Proms. It did freeze. I knew it for us somehow. I knew it froze. And I just thought you guys were just not paying attention.

02:12:03
<transcript>: that was right

02:12:04
<transcript>: That was right.

02:12:04
teej_dv: is this about the whiners complaining about your conf?

02:12:11
<transcript>: All my fears have been validated, okay? I'd love to never have to do that again. I'd love for it to just start working.

02:12:28
<transcript>: It's about the winners complaining about your conference. It's not my conference, but yes, it's about one specific person that I interact with on the internet. Right before I was shooting my thing, and I had to think I was gonna shoot a different thing. And then I interact with this person on the internet. It bothered me to my core.

02:12:28
<transcript>: and i recorded

02:12:31
<transcript>: And I recorded whatever I said on that. So.

02:12:37
<transcript>: This is that person's phone. Now it's my fault. It's my fault for being bothered. I shouldn't be bothered.

02:12:40
<transcript>: Okay.

02:12:47
<transcript>: So we have the first and the second ruck sacks. Now we have to find the common letter.

02:12:52
<transcript>: The common letter. I'm sorry that was probably really loud in my mic.

02:12:54
<transcript>: My lips really loud.

02:12:59
teej_dv: rofl found it LUL

02:12:59
<transcript>: How would one find the common letter.

02:13:04
<transcript>: I could go through each letter, see if it exists in the other one.

02:13:08
<transcript>: What we think? Oh, you've got it. Tiege. Okay.

02:13:12
<transcript>: You're more clued in than most then at this point.

02:13:17
<transcript>: I'm just gonna go through every character tell me why I shouldn't do that.

02:13:20
<transcript>: I'm buddy.

02:13:20
<transcript>: please

02:13:23
<transcript>: Please tell me why or I could say Con.

02:13:23
<transcript>: equals

02:13:24
yycsec: use a set?

02:13:25
<transcript>: Equals second.

02:13:25
<transcript>: find

02:13:26
<transcript>: Find.

02:13:29
<transcript>: And I'm gonna go through.

02:13:30
cowfacedude99: and now I want to search for it LUL

02:13:35
<transcript>: Because second is just an array, right? Can you not do fine on okay, how do I get.

02:13:38
<transcript>: What I do. I don't want to mess up this buffer.

02:13:45
<transcript>: So I can't just do fine but can I do like someone tell me in JavaScript can I get like cars.

02:13:49
<transcript>: Or something.

02:13:54
<transcript>: How do I get all the characters? Do I just say like array.

02:13:59
<transcript>: Does that do it.

02:14:01
huckcity: screen frozen again

02:14:01
<transcript>: Just now, an array of characters.

02:14:06
<transcript>: Anyone know dot.

02:14:06
teej_dv: i've just been blocking all the ppl complaining about it LUL

02:14:08
<transcript>: Find.

02:14:09
chendler_: frozen

02:14:28
<transcript>: It oh, because I can't say first I find.

02:14:32
chendler_: first fix screen

02:14:36
<transcript>: I could just recreate the array every time, but that's terribly inefficient.

02:14:38
<transcript>: First array.

02:14:44
<transcript>: I'm into just assuming I can do that, you know.

02:14:47
papaowl_75: split()

02:14:51
<transcript>: And then I guess, Yeah.

02:14:57
<transcript>: Let's just do this to make sure.

02:15:01
<transcript>: Thinking about it. It's not doing anything.

02:15:08
<transcript>: I'm not printing anything. This should be printing, right? Oh, everything's undefined. Okay. I did it wrong.

02:15:10
<transcript>: Split.

02:15:12
<transcript>: 1st 6th screen Wait. Is it still frozen.

02:15:15
<transcript>: No, it's not so, it's not so frozen. Right.

02:15:20
<transcript>: You doesn't blocking all the people complaining about it. That's one approach.

02:15:23
<transcript>: Use a set.

02:15:26
chendler_: it is

02:15:27
<transcript>: What's? What would I do? It with a set here. They're already.

02:15:32
<transcript>: Oh, so just split. That's how I get my array.

02:15:32
<transcript>: okay

02:15:33
cowfacedude99: it is

02:15:35
<transcript>: Okay. So here instead of this.

02:15:35
<transcript>: it's gonna

02:15:36
papaowl_75: string.split([separator][, limit]);

02:15:37
<transcript>: It's gonna be.

02:15:40
<transcript>: Like first split.

02:15:40
<transcript>: i just

02:15:43
<transcript>: I just do that. Or do I even.

02:15:45
<transcript>: Just like that. No.

02:15:45
<transcript>: but on nothing

02:15:47
<transcript>: But on nothing.

02:15:47
<transcript>: now give me

02:15:51
<transcript>: Now give me an array. I thought there's a better way to get an array. I don't know.

02:15:54
<transcript>: Not split.

02:15:59
<transcript>: Oops.

02:16:01
cowfacedude99: I think I should rick roll you to get out of this

02:16:07
<transcript>: Here we go. So second flip. Fine. First rate. I find like that.

02:16:07
<transcript>: okay

02:16:09
<transcript>: Okay.

02:16:11
<transcript>: Let's finding them.

02:16:14
<transcript>: Well, this last one is just like a new line, I think.

02:16:19
<transcript>: If if not first or not.

02:16:19
<transcript>: second

02:16:22
<transcript>: Second I gotta go faster container continue.

02:16:29
<transcript>: Go faster. We got stuff to do. Okay. I think that's right. It's got all the comments. Let's just make sure it's the last part.

02:16:29
<transcript>: f

02:16:31
<transcript>: F.

02:16:33
<transcript>: Yeah.

02:16:33
<transcript>: okay

02:16:34
<transcript>: Okay.

02:16:40
<transcript>: So now I need to get the the index or whatever.

02:16:40
<transcript>: the

02:16:46
<transcript>: The number value for each of these and the way to do that. Someone helped me. What's the best way.

02:16:51
<transcript>: I think I should Rick roll you to get you out of this. No.

02:16:51
<transcript>: don't

02:16:54
<transcript>: Don't get me out of this.

02:16:59
<transcript>: I'm trying to get to today five. I hear day five is hard, and I want to see it.

02:17:02
<transcript>: Want to see the hard day.

02:17:02
<transcript>: just

02:17:05
<transcript>: Just got to get into gear here.

02:17:14
<transcript>: Okay. So if I have the letters now, I need to get the number for each letter.

02:17:14
<transcript>: and

02:17:18
<transcript>: And I shouldn't make a giant array.

02:17:18
cowfacedude99: rick roll you out of the frozen screen LUL

02:17:20
huckcity: no really though, screen is frozen

02:17:21
<transcript>: Should I should I should I just make it array.

02:17:21
<transcript>: i could just do

02:17:23
<transcript>: I could just do this.

02:17:25
rambo247: LUL

02:17:26
cowfacedude99: map

02:17:28
<transcript>: This is like the the works harder way Const.

02:17:28
<transcript>: letters

02:17:30
<transcript>: Letters.

02:17:32
<transcript>: I could just do like this.

02:17:35
<transcript>: Is this so dumb.

02:17:38
papaowl_75: "this" that we cannot see lol

02:17:42
<transcript>: Just so don't. Does everyone hate this.

02:17:42
<transcript>: you

02:17:43
teej_dv: we cannot see anything forever

02:17:44
<transcript>: You can't see right now.

02:17:44
<transcript>: is it

02:17:46
<transcript>: Is it frozen again.

02:17:50
<transcript>: That's so annoying.

02:17:50
<transcript>: so

02:17:52
<transcript>: So annoying.

02:17:56
papaowl_75: no. not again. still

02:17:57
<transcript>: Maybe I froze them on purpose that time. So you wouldn't see what I was doing here.

02:17:57
rambo247: This feels like school all over again

02:18:01
<transcript>: Is there an easier way to get all the letters.

02:18:02
cowfacedude99: scuffed stream LUL

02:18:03
<transcript>: Efgh.

02:18:04
<transcript>: efghi j

02:18:05
<transcript>: Efghi J.

02:18:07
<transcript>: K.

02:18:10
<transcript>: L. M.

02:18:12
<transcript>: And.

02:18:12
<transcript>: o

02:18:13
<transcript>: O.

02:18:16
<transcript>: P.

02:18:16
papaowl_75: spread operator

02:18:19
<transcript>: Q.

02:18:25
<transcript>: Are I ready on the sun? Can you just seriously do like a spread? What.

02:18:25
<transcript>: you

02:18:27
<transcript>: You can.

02:18:32
<transcript>: You can spread. I can just spread between A and Z or something.

02:18:37
<transcript>: R Q Rs.

02:18:37
<transcript>: t

02:18:42
<transcript>: T U V W X.

02:18:47
<transcript>: Y N D I'm sure there's a better way but you know what.

02:18:47
<transcript>: i know how to do

02:18:48
<transcript>: I know how to do it this way.

02:18:48
<transcript>: i would

02:18:52
<transcript>: I would like to know the spread outpert. You're saying I could say, like.

02:18:56
<transcript>: What like.

02:18:59
<transcript>: a

02:19:02
<transcript>: What would I do.

02:19:03
<transcript>: I want to learn.

02:19:05
<transcript>: Red operator.

02:19:10
<transcript>: Because I know you can do that with numbers like you can make a rain.

02:19:10
<transcript>: of numbers

02:19:12
<transcript>: Of numbers. But can you do that? Letters.

02:19:15
<transcript>: Not so sure.

02:19:15
<transcript>: but

02:19:19
<transcript>: But now that I have all of them in the thing I can just say.

02:19:22
<transcript>: Four.

02:19:22
<transcript>: or what

02:19:25
lazy_developer: why don-t you build a dictionary and add the letter to it if it is not in it?

02:19:27
<transcript>: Or what they call it. They call a score. Priority, priority.

02:19:27
<transcript>: equals

02:19:28
<transcript>: Equals.

02:19:31
cowfacedude99: leverage ascii?

02:19:32
<transcript>: Letters Index of.

02:19:33
<transcript>: Common.

02:19:36
<transcript>: Dot.

02:19:38
<transcript>: To lowercase.

02:19:43
<transcript>: The index of it that starts at one right.

02:19:45
<transcript>: Does it start at one.

02:19:50
<transcript>: Where did they say the list of the priorities.

02:19:53
<transcript>: Yeah. One through 26. Okay.

02:19:53
<transcript>: so

02:19:54
<transcript>: So.

02:19:56
<transcript>: This.

02:19:56
<transcript>: plus

02:19:58
<transcript>: Plus one.

02:19:59
cowfacedude99: lower and upper case have different priorities

02:20:04
<transcript>: Well, what's wrong here? Common. Oh, common. Might not be if not come in.

02:20:04
<transcript>: throw new

02:20:06
<transcript>: Throw new error.

02:20:12
<transcript>: Okay, two lowercase plus one. That's our priority. But it's not.

02:20:12
<transcript>: if

02:20:12
<transcript>: If.

02:20:12
<transcript>: if

02:20:16
<transcript>: If it's capital, we have to add 26 to it.

02:20:18
<transcript>: So.

02:20:25
<transcript>: Let's just do this. Let's just say total plus equal priority.

02:20:28
<transcript>: And then plus equal.

02:20:30
cowfacedude99: isUpper

02:20:30
<transcript>: Common.

02:20:35
<transcript>: How can I find out if it's uppercase.

02:20:39
<transcript>: Isn't there a way to know if it's uppercase.

02:20:44
<transcript>: How did I just be able to see, like, oh, it's an uppercase character.

02:20:44
<transcript>: is there

02:20:46
<transcript>: Is there? Not is upper.

02:20:48
shiftlessatol: do both

02:20:58
<transcript>: Lazy developer. Welcome to Chat. Why don't you build a dictionary and add the letter to it if it's not in it.

02:21:03
<transcript>: Oh, like just add it in the right.

02:21:03
<transcript>: spot but

02:21:07
<transcript>: Spot. But if the first one I get is P. I don't know the index of P.

02:21:07
<transcript>: until i have

02:21:11
<transcript>: Until I have it all built up. Right is upper.

02:21:11
<transcript>: is

02:21:12
<transcript>: Is upper.

02:21:16
<transcript>: Is upper. I don't think that's in different.

02:21:20
<transcript>: I know this is an uppercase letter.

02:21:20
<transcript>: lower

02:21:26
<transcript>: Lower network, eight different priorities? Yeah, yeah, I need to add more. I need to add 26 if it's uppercase.

02:21:28
shiftlessatol: by matching

02:21:29
<transcript>: But how do I know if it's uppercase.

02:21:29
shiftlessatol: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz

02:21:31
teej_dv: match c with | 'a'..'z' ->

02:21:33
shiftlessatol: chunk it

02:21:34
teej_dv: Kreygasm

02:21:36
shiftlessatol: you get an idex this way

02:21:36
<transcript>: Oh, oh, I know, because I say common dot.

02:21:36
<transcript>: two

02:21:38
<transcript>: Two uppercase.

02:21:38
<transcript>: equals

02:21:40
<transcript>: Equals.

02:21:40
<transcript>: common

02:21:41
<transcript>: Common right.

02:21:41
<transcript>: that means

02:21:44
<transcript>: That means a separate case.

02:21:51
<transcript>: Basics. L zero. Cool. I think that's what I need to do right? Plus equals priority. I can't do it twice.

02:21:51
<transcript>: total

02:21:52
<transcript>: Total.

02:21:52
<transcript>: okay

02:21:53
<transcript>: Okay.

02:21:58
teej_dv: check if c.toLowerCase() == c

02:22:04
<transcript>: Delete.

02:22:06
<transcript>: To that.

02:22:09
<transcript>: Paste it.

02:22:15
<transcript>: Deleted. Okay. There. We did it. We did it.

02:22:15
<transcript>: consol

02:22:23
<transcript>: Console log total. I gotta move. I gotta move faster. I want to get to the thing. 70, 89. What do you think? You think it's right.

02:22:23
<transcript>: and i

02:22:25
<transcript>: And I have my doubts.

02:22:43
<transcript>: I just kind of want to move fast and hope it's right. Okay. Continue to part two. As you finish identifying this place. Items, elves come to you with another issue for safety. The L's are divided into groups of three. Every elf carries a badge that identifies her group for efficiency. With any group of three L's. The badge is the only I may not be able to read them all in the next hour. You know what I'm saying.

02:22:43
<transcript>: thank you t

02:22:45
<transcript>: Thank you. Tiege. Yes.

02:22:48
<transcript>: I think we figured it out.

02:22:50
<transcript>: We figured it out.

02:22:55
<transcript>: That is the only item type carried by all three L's.

02:23:02
<transcript>: For Groups badge is item type B.

02:23:10
<transcript>: Then all three Elves will have on Type B somewhere in the rocksack, and at most two of the Elves will be carrying any other items. Type what.

02:23:14
<transcript>: Someone forgot to put this year's update off. And this is.

02:23:14
<transcript>: authentic

02:23:15
huckcity: it's the same thing except you're taking it 3 rows at a time instead of splitting one row at a time

02:23:21
<transcript>: Authenticity Sticker on the Badges All of the badges need to be pulled out of the ruxax so the new Authenticity stickers can be attached.

02:23:21
<transcript>: i

02:23:29
<transcript>: I'm not paying attention. I'm just reading words. Anyone do. That where you're reading. But you're not really comprehending. There's really nobody wrote down. Okay.

02:23:35
<transcript>: Finding the one item type that is common between all three L's in each group. How do you know if they're in a group.

02:23:35
<transcript>: group

02:23:41
<transcript>: Groups of three. Are they all can like the first three of the first group. The next three. Is that how it works.

02:23:41
<transcript>: every set

02:23:52
<transcript>: Every set of three lines in your list corresponds to a single group, but each group can have a different badge item type. So in the above example, the first group Stroxx are the first three lines. Okay, okay.

02:23:52
<transcript>: in the first group

02:23:57
<transcript>: In the first group, the only item type that appears in all three ruck sacs is lowercase R.

02:23:59
<transcript>: Okay.

02:23:59
<transcript>: so

02:24:04
<transcript>: So there's a lowercase R in all three. That's their badge. Okay.

02:24:14
<transcript>: This must do their badges in the second group they're badge type. Okay properties for these items must still be found to organize the sticker attachment efforts.

02:24:14
<transcript>: here they are

02:24:22
<transcript>: Here they are 18 for the first group 50 who some of these is 70 finding item type that corresponds to the badges of each three elf group.

02:24:22
<transcript>: what

02:24:26
<transcript>: What is the sum of the priority of the item types? Okay.

02:24:29
<transcript>: So within the group.

02:24:33
<transcript>: Where each group is just going to have one.

02:24:33
<transcript>: number

02:24:34
<transcript>: Number.

02:24:44
<transcript>: So 18 for the first group, 52 for the second group, and then the sum of the soda. Okay. So each three is just gonna have. Okay. Okay.

02:24:47
<transcript>: So the way we're gonna do that.

02:24:50
<transcript>: I could.

02:24:50
<transcript>: i

02:24:52
<transcript>: I could.

02:25:05
<transcript>: There's always like the really like Scuffed way as you put it on Twitch, there's like the way that comes to mind immediately. That's like, don't do it that way. Just don't do it. You'll get made fun of. But it's the way that my mind immediately jumps to.

02:25:23
<transcript>: Like having an index here. Like a counter. Let counter you'll see real. And then like incrementing it. I know there's like a thing I could do with mod. Like a modulate by three or something somewhere, like group them in the lines of three. I can do all that. But you know what? I'm not going to try to go fast.

02:25:23
<transcript>: and last

02:25:29
<transcript>: And lastly, check bugs in this thing will not come back to bite me. I'm never gonna look at it again.

02:25:29
<transcript>: it's force okay

02:25:33
<transcript>: It's force. Okay. So first array. So before we do anything.

02:25:43
<transcript>: No, I will be easier to have all three lines in my array at one time. Right.

02:25:47
<transcript>: Let's just do this. Let's say last.

02:25:52
<transcript>: And that's gonna be a.

02:25:56
<transcript>: Array of string.

02:25:59
<transcript>: Yeah. String array. Okay.

02:26:05
<transcript>: So if I just want to get all my lines into groups.

02:26:08
<transcript>: How would I want to do that.

02:26:17
<transcript>: I could reduce or I could just loop through the mouse.

02:26:17
<transcript>: four

02:26:18
<transcript>: Four comps line of.

02:26:18
<transcript>: lines

02:26:20
<transcript>: Lines.

02:26:20
<transcript>: we could

02:26:22
<transcript>: We could say.

02:26:26
<transcript>: Yeah. We use our counter here.

02:26:30
<transcript>: We'll say.

02:26:34
<transcript>: First of all, if not line.

02:26:34
<transcript>: continue

02:26:41
<transcript>: Continue there's like a new line at the end or something and I just don't want to deal with it. So counter equals zero if.

02:26:41
<transcript>: if

02:26:44
<transcript>: If counter is.

02:26:44
<transcript>: greater than

02:26:47
<transcript>: Greater than zero. One, two is greater than two.

02:26:50
<transcript>: Counter equals zero.

02:26:54
<transcript>: So that handles.

02:26:59
<transcript>: We'll just do this. We'll say, let group.

02:27:05
<transcript>: Okay. So there's a there's a group.

02:27:09
<transcript>: Group. No, I'm sorry. It's an array of.

02:27:14
<transcript>: Groups is going to be an array in a array of strings. Yeah, Yeah.

02:27:14
<transcript>: our group

02:27:18
<transcript>: Our group is an array of strings, and we're gonna say.

02:27:18
<transcript>: group

02:27:25
<transcript>: Group push line. Okay, so if counters greater than two, why did I do this.

02:27:25
<transcript>: oh

02:27:29
<transcript>: Oh, yeah, yeah? I don't need to do no if counters greater than two.

02:27:34
<transcript>: We're gonna say.

02:27:37
<transcript>: Counters greater than two. We're gonna say group.

02:27:41
<transcript>: That equals so that should be.

02:27:49
<transcript>: So we reset our group when counters greater than two. And we say counter equals zero.

02:27:51
<transcript>: Right.

02:27:55
<transcript>: So every three lines.

02:28:02
<transcript>: And then here we're going to say Counter plus plus or something.

02:28:08
<transcript>: Right. Okay, so groups, we got to push our so group, push.

02:28:08
<transcript>: line

02:28:09
<transcript>: Line.

02:28:09
<transcript>: and then

02:28:12
<transcript>: And then, oh, here we got to say.

02:28:16
<transcript>: Groups, push group? I don't know.

02:28:16
<transcript>: this is kind of

02:28:18
<transcript>: This is kind of janky.

02:28:18
<transcript>: but the first line

02:28:27
<transcript>: But the first line will run it'll. Push the line into the group. It'll bump the counter. Second line will run zero. One.

02:28:27
<transcript>: two

02:28:27
shiftlessatol: you'll want to clone it no?

02:28:34
<transcript>: Two, and then it'll be greater than two when it hits three. So it'll push the group into the groups. Create a new group. Set the counter to zero.

02:28:41
<transcript>: And then do this again. Right. And then at the end we need to say, groups, groups.

02:28:41
<transcript>: i push

02:28:44
<transcript>: I push group. We gotta get that last one right.

02:28:47
<transcript>: Okay. So now we can say for.

02:28:50
<transcript>: Groups so line.

02:28:50
<transcript>: is group

02:28:52
<transcript>: Is group okay.

02:28:52
<transcript>: first

02:28:54
<transcript>: First. Okay.

02:28:58
<transcript>: So much work.

02:28:58
<transcript>: you want

02:29:00
<transcript>: You want to clone it.

02:29:00
<transcript>: clone

02:29:01
<transcript>: Clone, what now.

02:29:11
<transcript>: That's old. I think you guys are responding to other things. Same thing. Except you're taking it three rows at a time instead of spitting one row at a time.

02:29:11
<transcript>: yeah

02:29:15
<transcript>: Yeah. So I'm taking three rows at a time.

02:29:15
shiftlessatol: not old

02:29:20
<transcript>: So now my group is like.

02:29:20
<transcript>: an array of

02:29:23
<transcript>: An array of three lines.

02:29:26
<transcript>: We could say four cops.

02:29:26
<transcript>: line

02:29:27
<transcript>: Line.

02:29:30
shiftlessatol: isn't group a reference?

02:29:31
<transcript>: Of group.

02:29:33
<transcript>: Right.

02:29:38
<transcript>: It's not gonna be right here. It's gonna be like.

02:29:42
<transcript>: First and second.

02:29:47
<transcript>: Oh, so we just need to append is what you're saying? We need to, like.

02:29:49
<transcript>: A pinned.

02:29:53
<transcript>: There's only one character that's gonna be the same.

02:29:53
<transcript>: in all three

02:29:58
<transcript>: In all three of them, but each of them only has one character. Like, let's look at our thing.

02:30:08
<transcript>: They already it's.

02:30:12
<transcript>: It's anything changing about the calculation of which is the character.

02:30:19
<transcript>: So first.

02:30:24
<transcript>: Now I have.

02:30:24
<transcript>: three

02:30:28
<transcript>: Three, three sacks. Okay, three elves. Make a group.

02:30:31
<transcript>: And each of them has a sack.

02:30:37
<transcript>: And there's only one item in common across all three L's.

02:30:52
impostorengineer: does your twitch profile pic goes Live when you are live on twitch?

02:30:56
<transcript>: But there's already only one item type that's in both halves. Or is it not about? Well, they only have one of them. They don't have it in both halves of their thing. Oh, yeah. Yeah. So now we take all three strings and we figure out yeah, yeah. Okay. So no more looking in the first and the half or first and second like this doesn't matter anymore.

02:30:57
impostorengineer: twitter sorry

02:30:58
<transcript>: Instead we're gonna say.

02:31:17
<transcript>: It's gonna be.

02:31:25
<transcript>: Second array equals.

02:31:28
<transcript>: Now I don't want to do I don't want to do this second.

02:31:39
<transcript>: Okay, what I am doing is second array is group. Let's see.

02:31:43
<transcript>: 2nd 3rd.

02:31:43
<transcript>: equals

02:31:45
<transcript>: Equals group.

02:31:47
<transcript>: Let's go first.

02:31:50
<transcript>: Second split.

02:31:55
<transcript>: And then third.

02:32:03
<transcript>: Okay. So there's our arrays and comments going to be.

02:32:03
<transcript>: we're gonna

02:32:05
<transcript>: We're gonna say first.

02:32:05
<transcript>: fine

02:32:06
<transcript>: Fine.

02:32:10
<transcript>: Where second and third have it as well. Right.

02:32:14
<transcript>: Okay so comps common.

02:32:16
<transcript>: Equals first for red.

02:32:20
<transcript>: Find.

02:32:23
<transcript>: Character.

02:32:25
<transcript>: Second.

02:32:28
<transcript>: Array, find.

02:32:35
<transcript>: And third array. Find.

02:32:41
<transcript>: That are common.

02:32:45
<transcript>: And then we add all this up. This is all the same, right.

02:32:49
<transcript>: We go through all the groups. I think I said 28, 25. Is it right.

02:33:01
<transcript>: That's right. Answer. Okay. One more gold star, day three. Done. We're on day four. We got one more. And then we're on the hard one. At least that's what I hear.

02:33:17
<transcript>: You want to clone it? Does your Twitch profile pick go live when you are live on Twitter on Twitch? Yes. I can't remember what service that. It's like a thing I pay for. And I don't even remember what it's called. That happens. Sometimes I sign up for a thing. It works. It does its job. I never think about it again. And I couldn't cancel it if I wanted to.

02:33:17
<transcript>: i got the fire back

02:33:21
<transcript>: I got the fire back. Does SAS right for the whole subscription thing.

02:33:27
<transcript>: Oh, I don't want that with the Lincoln problem. Groups is never reassigned.

02:33:29
<transcript>: Cool.

02:33:32
<transcript>: Oh, cool, cool.

02:33:34
<transcript>: A four, let's go.

02:33:34
<transcript>: pick

02:33:36
<transcript>: Pick up the page.

02:33:41
<transcript>: I'm gonna go ahead and create a for PX. T. I'm just assuming.

02:33:45
<transcript>: Let's do it. Day four. Here we go.

02:33:47
<transcript>: Okay, I got a second.

02:33:51
<transcript>: Because we're down to not remast time.

02:33:57
<transcript>: I'm gonna miss some of the story. This is how I played video games.

02:33:57
<transcript>: i never listen

02:34:00
<transcript>: I never listen to the story. I just like, jump straight ahead.

02:34:06
<transcript>: Something else. Compare this exercise to each other. They've noticed that many of the signs overlap. Click on order for just.

02:34:09
<transcript>: Big list of section assignments for each pair.

02:34:09
<transcript>: for example

02:34:23
<transcript>: For example, consider the following list of section assignment pairs 246-8234. Five. Okay. For the first few pairs, this list means within the first Parallel's the first ELP was a sign section 23423 and four, while the second Elf was assigned sections.

02:34:23
<transcript>: six through

02:34:26
<transcript>: Six through eight, six, seven, and eight. Okay.

02:34:32
<transcript>: The L's in the center pair were each assigned two sections, two and three, four, and five. Got it. Okay.

02:34:32
<transcript>: elves

02:34:44
<transcript>: Elves. In the third pair, we each assign three sections. One got exercise. Yep. Okay, so it's a range. Got it. This example list uses single digit section IDs to make it easier to draw.

02:34:55
<transcript>: What this example list uses single digit section IDs to make it easier to draw. Your actual list might contain larger numbers. Visually, these pairs of section assignments look like this.

02:35:02
<transcript>: What? Okay.

02:35:07
<transcript>: Oh, so it could be like two, three, eight. Yeah, it could be like big ranges. Cool.

02:35:14
huckcity: the descriptions are soooo TMI

02:35:15
<transcript>: Some of the pairs have noticed that one of their assignments fully contained the other, for example, two, three, eight. Fully contained three through seven. Yep.

02:35:19
<transcript>: And six through six is fully contained by four through six.

02:35:22
<transcript>: Yep. Okay.

02:35:41
<transcript>: In pairs where one assignment fully contains the other one elf in the pair would be exclusively cleaning sections. Their partner will already be cleaning, so these seem like the most in need of reconsideration. In this example, there are two such pairs. And how many assignment pairs does one range fully contain the other? All this seems pretty sure for it.

02:35:43
<transcript>: They're so TMI yeah Yeah.

02:35:43
<transcript>: okay

02:35:47
<transcript>: Okay, let's get my puzzle input.

02:35:50
<transcript>: Paste it here.

02:35:58
<transcript>: And let's go into four TS. Let's go down here and say.

02:36:00
<transcript>: Or TS.

02:36:04
<transcript>: Let's get some.

02:36:09
<transcript>: Stuff.

02:36:13
<transcript>: Else they all seem to start out this way. Right.

02:36:15
<transcript>: Okay.

02:36:15
<transcript>: so fil

02:36:17
<transcript>: So file is gonna be.

02:36:21
<transcript>: For TXT. We got all the lines. Let's do it.

02:36:23
<transcript>: Okay.

02:36:23
<transcript>: so

02:36:26
<transcript>: So first we're gonna split.

02:36:29
<transcript>: L's.

02:36:29
<transcript>: equals

02:36:36
<transcript>: Equals lined up split on comma. Let's say if not line.

02:36:36
<transcript>: return

02:36:38
<transcript>: Return or continue.

02:36:44
<transcript>: Okay, so elves equals line split on comma.

02:36:48
<transcript>: And then we have.

02:36:51
<transcript>: Lower, upper.

02:36:56
<transcript>: Equals.

02:36:56
<transcript>: l zero

02:36:57
<transcript>: L zero.

02:37:06
<transcript>: First, lower, first, upper.

02:37:06
<transcript>: i don't know

02:37:07
<transcript>: I don't know.

02:37:11
<transcript>: L's Zero dot.

02:37:14
<transcript>: Split on that.

02:37:17
<transcript>: So we'll say.

02:37:20
<transcript>: Lower one.

02:37:20
<transcript>: and

02:37:23
<transcript>: And upper one.

02:37:26
<transcript>: We'll say, Oh.

02:37:33
<transcript>: This will be.

02:37:39
<transcript>: There we go. So there's lower, one, upper, one, lower, two, upper, two.

02:37:45
<transcript>: I guess I need to parse all these.

02:37:49
<transcript>: Which we'll just do like this.

02:37:57
<transcript>: Okay.

02:38:04
<transcript>: Just could have done, like, just sometimes I want to be cool. And I want to be like, what if I did it like this.

02:38:04
<transcript>: how do

02:38:06
<transcript>: How do that.

02:38:09
<transcript>: Yeah, I can.

02:38:13
<transcript>: Okay.

02:38:18
<transcript>: So there we go. These are all numbers.

02:38:20
<transcript>: Right.

02:38:23
<transcript>: What happened? What happened.

02:38:26
<transcript>: Yeah, it's a number. Okay.

02:38:26
<transcript>: lower one

02:38:29
<transcript>: Lower. One lower. Okay, so then.

02:38:29
<transcript>: if

02:38:30
<transcript>: If.

02:38:30
<transcript>: here's

02:38:35
<transcript>: Here's. The here's the pay. The payoff. It's just an either one of them. Right.

02:38:35
<transcript>: so we could

02:38:37
<transcript>: So we could test for the first one first.

02:38:43
<transcript>: So let's test to see if the first one's fully contained in the second one, and then vice versa.

02:38:46
<transcript>: So if.

02:38:46
jenswoeste: gotta love these real-world-scenario-coding-challenges. ;)

02:38:48
<transcript>: I guess let's just have a function.

02:38:51
sarjahukkuja: extra cool and you can get rid of parseInt too

02:38:53
<transcript>: Or function.

02:38:56
<transcript>: Is contained.

02:39:01
<transcript>: First is an array of numbers.

02:39:01
<transcript>: no

02:39:02
<transcript>: No.

02:39:04
<transcript>: First.

02:39:09
<transcript>: What his name is Dan Lee.

02:39:13
<transcript>: We'll just call him Lower one.

02:39:17
<transcript>: Lower or upper one.

02:39:20
<transcript>: And then lower to.

02:39:23
<transcript>: Upper two.

02:39:25
<transcript>: Right.

02:39:37
<transcript>: Return false. Okay. So we're gonna do this. We're gonna say.

02:39:41
<transcript>: Is contained equals.

02:39:44
<transcript>: Its contained.

02:39:51
<transcript>: We'll call it something else that contains equals is contained.

02:39:55
<transcript>: Lower one. Upper one.

02:39:57
<transcript>: Lower two.

02:40:02
<transcript>: Upper to or is contained.

02:40:02
<transcript>: lower

02:40:05
<transcript>: Lower to upper to.

02:40:07
<transcript>: Lower one.

02:40:07
<transcript>: up

02:40:11
<transcript>: Upper one. Right. So we're doing both both possibilities.

02:40:13
<transcript>: Total.

02:40:13
<transcript>: plus equ

02:40:14
<transcript>: Plus equals.

02:40:14
<transcript>: contain

02:40:18
<transcript>: Contained one L, zero.

02:40:21
<transcript>: Now we just need to ride our contain function. I think.

02:40:32
<transcript>: We just need to know the total number of them. Right? That is contained. And how many assignment pairs is one range fully can. Yeah. Okay. So then this looks like what it's if.

02:40:42
<transcript>: We're testing to see if the first one is contained in the second one. Right. So if lower one, let's just say let's just return.

02:40:45
<transcript>: Like this.

02:40:45
<transcript>: but return

02:40:47
<transcript>: But return lower one.

02:40:52
<transcript>: Is greater than or equal to lower two.

02:40:52
<transcript>: and

02:40:54
<transcript>: And.

02:40:57
<transcript>: Upper one.

02:41:00
<transcript>: Is less than or equal to upper two.

02:41:00
<transcript>: right

02:41:03
<transcript>: Right. It's that's that simple. I think.

02:41:11
<transcript>: I think. Oh, we got a zero. So that's probably not right.

02:41:15
<transcript>: What did I do wrong here? So it's lower one.

02:41:15
<transcript>: the smaller

02:41:17
<transcript>: The smaller the two numbers.

02:41:18
huckcity: backwards

02:41:20
shiftlessatol: lower1<=lower2 && upper1>=upper2

02:41:22
<transcript>: Is greater than or equal to lower two.

02:41:22
<transcript>: and

02:41:24
<transcript>: And.

02:41:24
<transcript>: upper

02:41:26
<transcript>: Upper one.

02:41:26
<transcript>: is less

02:41:27
huckcity: I did the EXACT same thig first

02:41:28
<transcript>: Is less than or equal to upper two.

02:41:32
<transcript>: What I do right here, backwards. I got it backwards.

02:41:41
<transcript>: Extra cool. You can get rid of parse. Int. Two. Oh, I don't need parsant. Wait. What do you mean? There's strings, right.

02:41:44
<transcript>: Aren't they? Strings.

02:41:48
<transcript>: Oh, I can just map to number. You're saying.

02:41:55
sarjahukkuja: yup

02:41:59
shiftlessatol: you want lower 2 and upper 2 to be inside of lower1 and upper1

02:42:01
<transcript>: You did the exact same thing. So I did backwards. Lower one is less than equal to lower two. Saying, okay. So you're saying this should be. I'm not sure I understand. Why.

02:42:01
<transcript>: these just have

02:42:02
<transcript>: These just have to be.

02:42:09
<transcript>: Okay. You're saying that should work? No, it didn't work.

02:42:14
<transcript>: It doesn't matter which pair I'm trying to figure out which is in because I'm gonna do both ways.

02:42:20
<transcript>: I want lower to an upper two to be inside of lower one and upper one.

02:42:20
<transcript>: i

02:42:22
<transcript>: I want lower.

02:42:23
shiftlessatol: correct

02:42:24
<transcript>: Two. Okay.

02:42:24
<transcript>: and upper

02:42:25
huckcity: and the best part is your screen is frozen again

02:42:28
<transcript>: And upper two to be inside of lower one and upper one.

02:42:28
<transcript>: or vice vers

02:42:33
<transcript>: Or vice versa. It doesn't matter. Best part is your screen is frozen again. No.

02:42:35
<transcript>: It's not the best part.

02:42:45
<transcript>: I guess I should do this. We are not. Let's see topic.

02:42:51
<transcript>: Learning do you know with AOC.

02:42:54
adamdotdev: !topic learning deno on some aoc challenges

02:42:55
<transcript>: On some AOC challenge.

02:43:12
<transcript>: I still don't understand how this is backward.

02:43:17
<transcript>: I'm doing both options. Right? Lower, one, upper one.

02:43:20
<transcript>: Elves.

02:43:20
<transcript>: elvesplit

02:43:21
<transcript>: Elvesplit.

02:43:40
<transcript>: Like the way I had it. I don't understand how that's not okay. Like it doesn't matter which one I'm figuring out is inside the other one, because I'm doing both permutations. The question is, why would this not make sense? Lower one. So the first number in this top right here.

02:43:44
<transcript>: This would be lower. 123.

02:43:44
<transcript>: if it's great

02:43:46
<transcript>: If it's greater than or equal to 24.

02:43:55
<transcript>: And upper one is less than or equal to upper two. Then it's contained inside it. Right, right.

02:43:56
<transcript>: What am I missing.

02:44:03
<transcript>: Philig is contained. Should let's just do this.

02:44:06
huckcity: then 1 is in 2, yeah

02:44:08
impostorengineer: did you do part 1?

02:44:09
<transcript>: Console log is contained and let's do let's do some examples.

02:44:13
impostorengineer: is this part 2

02:44:13
shiftlessatol: do 4-85,5-85

02:44:14
<transcript>: Ten to twelve, is inside of eight.

02:44:17
<transcript>: 14. Right.

02:44:22
<transcript>: True. That's right. But if it were eight to ten.

02:44:26
<transcript>: That would be false. Right? I think my thing is right.

02:44:30
<transcript>: Did you do part one? Is this part two? This is part one.

02:44:36
<transcript>: Door to 85. Five to 85. Okay.

02:44:36
<transcript>: so

02:44:40
<transcript>: So if this is for and this is 85.

02:44:43
<transcript>: And then this is.

02:44:43
<transcript>: five

02:44:46
<transcript>: Five to 85.

02:44:50
<transcript>: That's false is that should that be false.

02:44:50
<transcript>: four

02:44:55
<transcript>: Four to 85 is not fully contained in five to 85, right? Yeah.

02:44:57
<transcript>: Let's crack.

02:45:00
<transcript>: Our three? That's true.

02:45:00
<transcript>: i think my function

02:45:04
impostorengineer: but it is the other way around

02:45:05
<transcript>: I think my function's right. I think I've just bought something else. Let's see what a. Let's just print these.

02:45:09
<transcript>: Console that log.

02:45:13
<transcript>: Lower one.

02:45:19
<transcript>: Of them. The other numbers. That's a good sign.

02:45:22
<transcript>: Elves Zero, split.

02:45:22
<transcript>: app

02:45:23
impostorengineer: i believe it is either elf contains the other

02:45:24
<transcript>: App number parts Int.

02:45:24
<transcript>: lower

02:45:25
<transcript>: Lower.

02:45:30
<transcript>: One.

02:45:33
<transcript>: Oh, there's some names. What did I do.

02:45:33
<transcript>: upper

02:45:35
<transcript>: Upper one.

02:45:37
<transcript>: Oh.

02:45:37
<transcript>: wait that's right

02:45:38
<transcript>: Wait. That's right.

02:45:38
<transcript>: we

02:45:40
<transcript>: We split.

02:45:40
<transcript>: we

02:45:44
<transcript>: We split on this, and then we map them to Int.

02:45:48
<transcript>: Wrong here.

02:45:52
huckcity: strip \n?

02:45:54
<transcript>: I split.

02:45:54
<transcript>: and map

02:45:56
shiftlessatol: upper is 98,3

02:45:58
<transcript>: And map. It's still an array of it's. An array of numbers. Now, right.

02:46:02
<transcript>: A strip in.

02:46:05
<transcript>: Oh, yeah sure, Yeah.

02:46:10
<transcript>: Let's just do it at the line, right.

02:46:10
<transcript>: so line

02:46:11
<transcript>: So line.

02:46:14
shiftlessatol: nvm I see where you split on x

02:46:15
<transcript>: Strip.

02:46:16
shiftlessatol: ,*

02:46:17
<transcript>: This is the thing you can do.

02:46:20
<transcript>: For trim? Trim.

02:46:24
<transcript>: Expected zero arguments.

02:46:26
<transcript>: Trim.

02:46:28
<transcript>: End.

02:46:31
<transcript>: Killing white space? Oh Yeah.

02:46:40
<transcript>: Console.

02:46:40
<transcript>: log

02:46:41
<transcript>: Log.

02:46:48
<transcript>: What's wrong with that? It's looks fine.

02:46:54
<transcript>: So, elves, zero dot, split.

02:46:59
<transcript>: Thank you for the phone.

02:46:59
<transcript>: is omer

02:47:00
<transcript>: Is Omer.

02:47:05
<transcript>: So we trimmed the end.

02:47:07
<transcript>: Doesn't seem to be the problem.

02:47:11
<transcript>: And then is upper to also.

02:47:13
<transcript>: And Yeah.

02:47:23
<transcript>: Okay. There's something done here that I'm doing. What am I doing? Let's just get simpler. So that's elves. Let's say instead of mapping here.

02:47:27
shiftlessatol: check lower 2

02:47:27
<transcript>: Let's do.

02:47:27
<transcript>: so those

02:47:29
<transcript>: So those are now.

02:47:33
nialldoesnothing: you can't do your map with that function

02:47:40
<transcript>: Well, let's just do that. Let's see what the numbers are. Oh, I think this does it work.

02:47:40
<transcript>: there's strings

02:47:41
nialldoesnothing: it's taking your index as the base

02:47:42
<transcript>: There's strings? Right.

02:47:44
<transcript>: So the matter.

02:47:49
<transcript>: Does it matter.

02:48:03
<transcript>: Oh, well, we could do it in the function up here.

02:48:03
nialldoesnothing: parseInt(value, base)

02:48:07
<transcript>: So number or string.

02:48:16
<transcript>: Like that. And we could say.

02:48:16
<transcript>: if

02:48:17
<transcript>: If.

02:48:21
<transcript>: Type of.

02:48:32
<transcript>: This is done.

02:48:32
<transcript>: i should just

02:48:34
<transcript>: I should just figure out what I did wrong. Right.

02:48:38
<transcript>: I mean if it worked and I don't care.

02:49:04
ronanru: map(str => parseInt(str))

02:49:08
<transcript>: I want to yank that word.

02:49:15
nialldoesnothing: ^^

02:49:16
<transcript>: I'm making it harder on myself.

02:49:18
<transcript>: Okay.

02:49:22
<transcript>: This is dumb, but I'm doing it. I don't know.

02:49:22
<transcript>: did it work

02:49:23
<transcript>: Did it work.

02:49:23
<transcript>: that's the question

02:49:26
<transcript>: That's the question. If it worked, I don't care.

02:49:33
<transcript>: Thing. I needed to part. I don't know why I didn't need to parse it, but I don't think I needed a part for this part. String, parsench. String.

02:49:36
<transcript>: Oh, it's taking the index of the base.

02:49:36
<transcript>: ah you

02:49:41
<transcript>: Ah, you can't even map with that function. Thank you so much. Okay, we're going back because this is so dumb.

02:49:48
<transcript>: I was so dumb. That's exactly what happened. I tried to map that function. There's a second parameter.

02:49:51
<transcript>: I'm so down. That was so dumb.

02:49:54
<transcript>: Okay. So here.

02:49:56
huckcity: gotta go fast.....backwards!

02:49:59
<transcript>: Yeah, I try to get cute earlier. Remember when I was like.

02:49:59
<transcript>: i was like

02:50:04
nialldoesnothing: yeah Theo talked about that when he did his AOC with prime

02:50:06
<transcript>: I was like, hey, this would be cool. What if I just, like, did this? Because it looks cool. Can't do that. Can't do that.

02:50:11
<transcript>: Thank you so much. Also. Welcome to chat.

02:50:11
<transcript>: nile

02:50:12
<transcript>: Nile.

02:50:16
<transcript>: Does nothing.

02:50:16
<transcript>: neal

02:50:21
<transcript>: Neal does nothing. Welcome to Chat. Thank you for the catch.

02:50:21
<transcript>: fantastic

02:50:25
nialldoesnothing: NYE ALL haha

02:50:26
<transcript>: Fantastic catch. I gotta go fast backwards. Thank you for the follow trance code.

02:50:26
<transcript>: dio talks

02:50:34
<transcript>: Dio talks about that when he did his AOC with prime. That's awesome. So I'm not the first person maybe get stuck on that.

02:50:34
<transcript>: or make that done

02:50:36
<transcript>: Or make that done mistake.

02:50:36
<transcript>: okay

02:50:39
<transcript>: Okay. There we go. 595. That's the answer.

02:50:39
<transcript>: finally

02:50:40
<transcript>: Finally.

02:50:43
<transcript>: Five. Let's move on.

02:50:47
<transcript>: A hurry gotta hurry got a hurry.

02:50:50
<transcript>: 595.

02:51:09
<transcript>: Seems like there is still quite a bit of duplicate work planned. Instead, the Elves would like to know the number of pairs that overlap at all. In the above example, the first two pairs, 2468 and 2345 don't overlap. All the remaining four pairs and 2648 do overlap.

02:51:09
<transcript>: yes so

02:51:17
<transcript>: Yes. So that's the overlap at all. Got it. Number. Overlapping assignment pairs is four. Cool. This is pretty straightforward. We're just gonna go up here and say.

02:51:20
<transcript>: Let's just yaff.

02:51:20
<transcript>: let's

02:51:22
<transcript>: Let's call this one.

02:51:28
<transcript>: Nope.

02:51:30
<transcript>: Is overlapping.

02:51:37
<transcript>: Is overlapping. Let's come down here and change. This is overlapping.

02:51:47
<transcript>: I got good at them that would help.

02:51:54
<transcript>: Now. I just need to rewrite this.

02:51:54
<transcript>: so is

02:52:01
<transcript>: So is overlapping. Would be return. Lower one. Okay. Lower one.

02:52:01
<transcript>: is

02:52:02
<transcript>: Is.

02:52:06
<transcript>: Lower one is greater than.

02:52:06
<transcript>: or equal

02:52:08
<transcript>: Or equal to.

02:52:10
<transcript>: Lower two.

02:52:12
<transcript>: Or.

02:52:17
<transcript>: Upper one.

02:52:22
<transcript>: Is less than or equal to upper two? Is it that simple.

02:52:22
<transcript>: so that

02:52:24
<transcript>: So that simple.

02:52:27
<transcript>: Is there 1000 of them.

02:52:37
<transcript>: Too much of a round number. It seems to us at the right answer. It's too high. Okay. What did I do wrong here.

02:52:39
<transcript>: Overlapping.

02:52:44
<transcript>: Overlapping is if the lower one.

02:52:47
<transcript>: Is greater than.

02:52:51
shiftlessatol: you have to do it over the entire collection

02:52:51
<transcript>: Okay. So looking at these two numbers.

02:52:55
<transcript>: Overlaps all the sections Three through seven.

02:53:00
shiftlessatol: not just the current set

02:53:05
<transcript>: So five to seven overlaps of seven and nine, because the seven overlaps right.

02:53:08
<transcript>: So five.

02:53:08
<transcript>: is not

02:53:14
<transcript>: Is not greater than or equal to seven, but because seven is less than or equal to.

02:53:14
<transcript>: oh no

02:53:23
<transcript>: Oh, no, no. It can't just be less than or equal to nine. It has to be less than or equal nine. And greater than or equal to Yay. So each of these is more complicated. So five.

02:53:23
<transcript>: needs to be

02:53:30
<transcript>: Needs to be greater than or equal to seven and less than or equal to nine. Okay, so lower.

02:53:30
<transcript>: that

02:53:30
shiftlessatol: or is this just partial overlaps?

02:53:31
<transcript>: That.

02:53:33
<transcript>: And.

02:53:38
<transcript>: Lower one is less than equal to upper.

02:53:42
<transcript>: To.

02:53:44
<transcript>: Okay.

02:53:52
<transcript>: That or.

02:53:55
<transcript>: Upper one.

02:54:00
shiftlessatol: just partials - my bad - nvm

02:54:02
<transcript>: Upper one is less than equal to.

02:54:08
<transcript>: And upper one is greater than or equal to lower.

02:54:11
<transcript>: To right.

02:54:14
<transcript>: 952, Feels better.

02:54:16
<transcript>: Feels better.

02:54:23
<transcript>: Right. We're on number Five, we did it.

02:54:23
<transcript>: we did it

02:54:29
<transcript>: We did it. Ten hundred and one. I should be getting off right now, but we did it. I'm gonna do a little bit of five because I just can't leave on that note.

02:54:37
<transcript>: Is my screen frozen? Are we still good? I think we're still good.

02:54:43
<transcript>: We're still good. Here we go. Day five. Let's do it. I hear this one's. Not fun.

02:54:44
huckcity: we good

02:54:46
<transcript>: Here. It's not so fun.

02:54:46
<transcript>: where did we

02:54:49
<transcript>: Where did we? What do we do here? Never used.

02:54:52
mhuggins7278: 5 was so much more straight forward than 4

02:54:55
<transcript>: Let's do.

02:54:58
<transcript>: Day Five. Stop. Yes.

02:55:02
<transcript>: Catching up. You know, I was gone. I was in Vegas.

02:55:04
<transcript>: Back.

02:55:07
<transcript>: And now we can have some fun.

02:55:09
<transcript>: Just put our.

02:55:09
<transcript>: puzzle

02:55:11
<transcript>: Puzzle input in here.

02:55:15
<transcript>: This one's fancy.

02:55:17
<transcript>: Ooh, look at this one.

02:55:17
<transcript>: look

02:55:20
mhuggins7278: sorry I mean day 6 was easier 5 sucked

02:55:21
<transcript>: Look at that. Oh, parsing that's where the o.

02:55:23
huckcity: 5 took me way longer than 4

02:55:26
<transcript>: That's why Trash said this made his butt picker. Okay. Yeah, that doesn't look fun to parts. Okay.

02:55:26
<transcript>: but we're gonna

02:55:31
<transcript>: But we're gonna do it, we're gonna do it? This one's gonna be a little different.

02:55:35
huckcity: oh yeah gotcha

02:55:36
<transcript>: I mean, I have to pee, and I really should be done for the day, but I really want to do this.

02:55:36
<transcript>: i want to

02:55:38
<transcript>: I want to do it.

02:55:38
<transcript>: i want to

02:55:47
<transcript>: I want to do it, but I got a pee. Should I take another quick break? If this one will be really quick, I won't play with my kids. I won't do anything. I'm gonna take a quick break.

02:55:47
<transcript>: i'll bread back

02:55:50
<transcript>: I'll bread back. And then we're gonna do some day five. And then I'm done.

03:00:46
<transcript>: Alright. I hate that it comes back to this view because there's nothing to talk about. We just need to get back to it. I got like ten minutes.

03:00:46
<transcript>: max

03:00:47
<transcript>: Max.

03:00:51
<transcript>: No time to weigh.

03:00:57
<transcript>: Okay, we did dive. This is day Five, TXT no, this is.

03:00:59
<transcript>: Wait.

03:01:02
<transcript>: Okay. We've got it in here.

03:01:02
<transcript>: this is day

03:01:04
<transcript>: This is day Five TS. Cool.

03:01:20
<transcript>: This one sounds hard. Sounds hard, it says. Day five supply sacks. Expedition can depart as soon as the final supplies have been loaded from the ships. Supplies are stored in stacks of marked crates. But because the mutualizer buried under many other grades, the crates need to be rearranged.

03:01:20
<transcript>: the ship

03:01:33
<transcript>: the ship has a giant cargo crane capable of moving crates between stacks to ensure none of the crates get crushed or fall over the crane operator will rearrange them in a series of carefully planned steps ask the crates or rearrange the desired crates will be at the top of each stack

03:01:33
<transcript>: okay

03:01:35
<transcript>: Okay.

03:01:35
<transcript>: the l's don't

03:01:50
<transcript>: The L's don't want to interpret the crane operator or interrupt the crane operator during this delicate procedure. But they forgot to ask her which crate will end up. Where these elves? They're sloppy. If they just weren't so sloppy, we'd have nothing to do here. You know, I'm saying they just keep making little mistakes.

03:01:50
<transcript>: and those little mistakes

03:01:54
<transcript>: And those little mistakes every day create some kind of a crisis. What's the deal.

03:02:12
<transcript>: Ready to unlock them as soon as possible so they can embark. They do, however, have a drawing of your starting stacks of crates and the reentrangement procedure your puzzle input. I feel like I could not read this whole top part. Is that accurate for everyone? These can I just start from like the example.

03:02:15
<transcript>: There are three stacks of crates.

03:02:15
<transcript>: stack one

03:02:17
<transcript>: Stack One contains two crates.

03:02:19
<transcript>: Create Z.

03:02:19
<transcript>: is on the bottom

03:02:26
<transcript>: Is on the bottom and create N is on the top. Makes sense. Fact. Two contains three crates or bottom. Top. Yep, Yep. Got it.

03:02:30
<transcript>: The rearrangement procedure is given.

03:02:42
<transcript>: In each step of the procedure, a quantity of crates is moved from one stack to a different stack in the first step of the above arrangement. Procedure One crate is moved from stack two to stack one.

03:02:42
<transcript>: resulting

03:02:45
<transcript>: Resulting in this configuration.

03:02:47
<transcript>: What.

03:02:47
<transcript>: move

03:02:49
<transcript>: Move one from two to one.

03:02:49
<transcript>: what

03:02:51
<transcript>: What.

03:03:00
<transcript>: Move one from two to one. Oh, it's just telling. These are the instructions. Move one from two to one. Move three from one to three. Okay.

03:03:03
<transcript>: So.

03:03:10
<transcript>: So here's further.

03:03:13
<transcript>: One from two to one. It moves it from the top.

03:03:15
<transcript>: Okay.

03:03:15
<transcript>: in the second

03:03:20
<transcript>: In the second step, three crates are removed from stack one to three. Creates removed one at a time.

03:03:27
<transcript>: So the first crate to be moved ends up below the second and third crates. Ooh. Okay.

03:03:27
<transcript>: so goes

03:03:28
<transcript>: So goes.

03:03:28
<transcript>: d

03:03:33
<transcript>: D in Z. They always go from top to bottom one at a time.

03:03:33
<transcript>: ooh this

03:03:37
<transcript>: Ooh, this is painful. Okay, I'm excited about it, but it's painful.

03:03:47
<transcript>: Day six was easier. Five sucked. Yeah. Yeah. Five was so much more straightforward than four or six of some short. Straightforward for you. Okay.

03:03:51
<transcript>: Whoo okay, so.

03:03:55
<transcript>: Then both crates are moved from stack Two to stack one.

03:03:55
<transcript>: again

03:04:01
<transcript>: Again because crates are made one at a time. Create C ends up below crate M. Yep.

03:04:05
<transcript>: Okay, C, and then M. Finally.

03:04:05
<transcript>: one

03:04:08
<transcript>: One crate is moved from stack One to stack two.

03:04:26
<transcript>: M to CF got it. The L just need to know which crate will end up on top of each stack. In this example, the top crates are C in stack one, M, and stack two and Z in stack three. So you should combine these together and give the elves the message CNZ.

03:04:28
<transcript>: Wow.

03:04:28
<transcript>: okay

03:04:39
<transcript>: Okay. This one's gonna be fun. I'm actually really excited about it. I don't have time to do this, but I'm gonna try to do this. We're just gonna run a little late. Just gonna run a little Lake. Because I'm not gonna just stop the middle of this. This is too fun.

03:04:45
<transcript>: So I wonder.

03:04:53
<transcript>: I've seen some start reading lines until I get to a new line. And that's when I know I've reached the end of my instructions. Right.

03:04:55
<transcript>: Right.

03:04:59
<transcript>: And then we'll ignore the last new line as well. Okay.

03:04:59
<transcript>: let's

03:05:05
<transcript>: Let's do this. Let's go here. And let's say let's actually go in here.

03:05:08
<transcript>: Oh, two, it is okay.

03:05:15
<transcript>: Let's go to five.

03:05:17
<transcript>: Okay.

03:05:17
<transcript>: here we go

03:05:19
<transcript>: Here we go.

03:05:21
<transcript>: Five, TXT.

03:05:21
<transcript>: we're gonna split

03:05:23
<transcript>: We're gonna split on new lines.

03:05:27
<transcript>: And then we're gonna go like this.

03:05:31
<transcript>: There's no total we're going through each line.

03:05:34
<transcript>: So.

03:05:34
<transcript>: we're gonna

03:05:40
<transcript>: We're gonna have comps. Is this gonna be like some objectoriented programming? Am I gonna need to look.

03:05:43
<transcript>: Create an object for each stack.

03:05:43
<transcript>: and then

03:05:46
<transcript>: And then have functions. Yeah, yeah, we're doing it. We're doing it.

03:05:46
<transcript>: i don't think

03:05:50
<transcript>: I don't think there's any other better way. I think the best way is.

03:05:50
<transcript>: i mean

03:05:52
<transcript>: I mean, I guess I could just have a.

03:05:55
<transcript>: Array of stacks.

03:05:59
<transcript>: These are they're gonna operate like.

03:06:03
<transcript>: An actual stack, right? You pop.

03:06:03
<transcript>: and you

03:06:05
<transcript>: And you push.

03:06:05
<transcript>: puppy

03:06:08
<transcript>: Puppy push and pop right.

03:06:08
<transcript>: yeah

03:06:10
<transcript>: Yeah, they are just.

03:06:10
<transcript>: an array

03:06:14
<transcript>: An array of stacks. Now there is no JavaScript stack. Right.

03:06:23
<transcript>: Or does an array? There's no pop. I can't take an array. Cops array of.

03:06:26
<transcript>: Say like.

03:06:26
<transcript>: array

03:06:33
<transcript>: Array. F. Pop. Right. Oh, there is a pop. Removes the last element from an array and returns it.

03:06:36
<transcript>: So there is a pop and there is a push.

03:06:39
<transcript>: Which appends to the end of an array.

03:06:44
<transcript>: Okay. Okay. So we can just push and pop our weight. So these are just okay.

03:06:44
<transcript>: const

03:06:46
shiftlessatol: yes js array = stack

03:06:49
<transcript>: Const sacks. Equals. This is gonna be an array of.

03:06:49
<transcript>: letters

03:06:52
natenorberg: wow, i didn't know this

03:06:53
<transcript>: Letters so string array array.

03:07:02
<transcript>: Jsra is a stack. Cool, cool, cool. Thank you, Dave.

03:07:02
<transcript>: are you guys

03:07:10
<transcript>: Are you guys tell me when it freezes again, my screen is going to freeze, and it's gonna be an intended moment of Day Five Advantage code, and it's go freeze.

03:07:15
<transcript>: So we need the initial state of the stacks.

03:07:15
<transcript>: we're gonna

03:07:21
<transcript>: We're gonna go through the instructions and manipulate these things, right.

03:07:26
<transcript>: So the initial state of stacks we're going to build up here.

03:07:28
<transcript>: If.

03:07:32
<transcript>: Line. It's not line.

03:07:34
<transcript>: Then we're gonna.

03:07:34
<transcript>: break

03:07:36
<transcript>: Break.

03:07:40
<transcript>: Because this is just to initialize.

03:07:45
<transcript>: Our stacks. Okay.

03:07:50
<transcript>: So we're gonna do this. We're gonna say for each one.

03:07:53
<transcript>: For each.

03:07:53
<transcript>: oh man these

03:07:55
shiftlessatol: the funny part is I learned this year that there is a thing called stack

03:07:57
<transcript>: Oh, man, these are in lines. I'm parsing these in lines.

03:07:58
shiftlessatol: lol

03:08:06
<transcript>: Funny part is I learned this year that there is a thing called stack.

03:08:12
<transcript>: It came in handy, Dave. So if I read a line, I don't want to parse this.

03:08:12
<transcript>: let's just get

03:08:14
<transcript>: Let's just get an example line in here.

03:08:25
<transcript>: What's? It separate. These are just spaces.

03:08:28
<transcript>: Is it like.

03:08:33
<transcript>: Space in between each stack, but if there's multiple spaces.

03:08:34
impostorengineer: unfortunately

03:08:41
shiftlessatol: It was very handy when I was porting my js to c#

03:08:41
<transcript>: I need to find the index of the first.

03:08:47
<transcript>: How do I figure out the index.

03:08:52
<transcript>: It's just a calculation of the amount of.

03:08:52
<transcript>: space

03:08:55
<transcript>: Space. Right? So we split.

03:08:59
<transcript>: We split on.

03:09:01
<transcript>: Open Brown bracket.

03:09:08
<transcript>: I don't think we're gonna split I think we're just gonna say.

03:09:08
<transcript>: just keep

03:09:12
ronanru: Crate values are always the  2nd, 6th, 10th character etc.

03:09:14
impostorengineer: can we split every 3rd chararacter?

03:09:14
huckcity: I feel like there's no elegant way to do this part...

03:09:17
<transcript>: Just keep finding open brackets. Find the index of them to calculate the yeah. Yeah. Okay. So this is a line we're gonna say.

03:09:20
<transcript>: Wow.

03:09:23
<transcript>: While true.

03:09:26
<transcript>: Wild truth.

03:09:28
<transcript>: We say.

03:09:30
<transcript>: Next.

03:09:33
<transcript>: Letter equals.

03:09:42
<transcript>: Split every third character.

03:09:47
<transcript>: Wait, wait. Is it very handy when it's.

03:09:47
shiftlessatol: you have 8 rows of 9 values

03:09:51
natenorberg: I think you can do it with regex

03:09:53
<transcript>: You're saying create values are always the second six 10th character etc.

03:09:54
shiftlessatol: you need to just store it like this

03:09:55
mhuggins7278: empty items are 4 spaces

03:10:06
<transcript>: Oh, right. Right. So. Okay. So. Oh, yeah. So then I just if there is no value. Yeah. Yeah. Just treat it as a fixed so zero is on open bracket or a space.

03:10:06
<transcript>: the

03:10:08
<transcript>: The first index.

03:10:08
<transcript>: index

03:10:10
<transcript>: Index one.

03:10:10
<transcript>: let's actually

03:10:12
<transcript>: Let's actually write.

03:10:15
cowfacedude99: it is +4 I think

03:10:17
<transcript>: Console.

03:10:17
<transcript>: log

03:10:19
<transcript>: Log line.

03:10:20
huckcity: yeah I used +4

03:10:21
<transcript>: I want to see one of these things.

03:10:27
<transcript>: Okay. So.

03:10:27
<transcript>: the first

03:10:29
<transcript>: The first character.

03:10:33
<transcript>: Line.

03:10:39
<transcript>: Yeah, there we go.

03:10:41
<transcript>: Okay.

03:10:45
<transcript>: And then if I do.

03:10:45
<transcript>: two three

03:10:46
mhuggins7278: you can just replace 3 contiguos spaces with nothing

03:10:47
<transcript>: 2345.

03:10:55
mhuggins7278: then remove teh []

03:10:57
<transcript>: That gives me the second column. Yeah. Yeah, this is. Oh, this is perfect. Right? See, that's perfect. Thank you for that tip. That would have taken me forever.

03:10:57
<transcript>: ronan

03:10:59
<transcript>: Ronan, You're, the MVP.

03:10:59
<transcript>: you have

03:11:04
<transcript>: You have eight rows of nine values. There's no elegant way to do this part. I think there actually is.

03:11:08
<transcript>: Empty items are for spaces. I think it's actually pretty.

03:11:08
<transcript>: elegant

03:11:13
<transcript>: Elegant in the sense that we can do what is plus four, I think.

03:11:13
<transcript>: so

03:11:14
<transcript>: So every four.

03:11:14
<transcript>: i'm

03:11:21
natenorberg: Is there always the same number of columns?

03:11:21
<transcript>: I'm just say, like, oh, cuz, I guess the solution or the number of stacks might be unknown.

03:11:21
<transcript>: so

03:11:25
<transcript>: So every four characters. So we start at one.

03:11:34
<transcript>: Way, How's that doing that with line five.

03:11:41
shiftlessatol: what?

03:11:41
<transcript>: Line.

03:11:41
<transcript>: oh cuz

03:11:44
<transcript>: Oh, cuz. I'm printing them all. Yeah.

03:11:44
<transcript>: this is a weird

03:11:50
shiftlessatol: just regex non alpha out of it

03:11:52
<transcript>: This is a weird way this worked out, but like, see how that's working? It's. It's going through and printing a bunch of empty strings. Probably.

03:11:52
<transcript>: or it's not

03:11:54
huckcity: frozen?

03:11:55
rambo247: froze

03:11:57
<transcript>: Or it's not if there's not line, it just ignores. So. Okay, okay.

03:11:57
<transcript>: so

03:12:00
<transcript>: So cons here we go.

03:12:02
<transcript>: Let index equals one.

03:12:02
<transcript>: we're gonna

03:12:06
<transcript>: We're gonna just we're gonna go up, call this.

03:12:06
<transcript>: yeah

03:12:09
<transcript>: Yeah index equals one.

03:12:09
<transcript>: we're

03:12:11
<transcript>: We're gonna say.

03:12:14
<transcript>: Line, index.

03:12:16
cowfacedude99: all chars are 4 spaces apart.  so you can start at 1 and do +4 till the end of line

03:12:23
<transcript>: We're gonna push so we're gonna say current sac, let stack equals string.

03:12:28
shiftlessatol: *sings*  let it go! let it go!

03:12:28
<transcript>: That I'm sorry that my kids are banging around so loudly. What am I doing.

03:12:32
<transcript>: String.

03:12:32
impostorengineer: screen frozen again\

03:12:36
<transcript>: Okay. So there's our stack. We're gonna say.

03:12:36
<transcript>: lsak

03:12:39
<transcript>: Lsak push.

03:12:41
impostorengineer: i was wondering why nothing is typed :D

03:12:43
<transcript>: Line, index.

03:12:46
<transcript>: Okay.

03:12:46
<transcript>: and then

03:12:47
<transcript>: And then once.

03:13:00
<transcript>: That's going through.

03:13:00
<transcript>: every line

03:13:13
<transcript>: Every line that in our legend at the top our initial state go through every line and getting the values that's gonna work for the first index. Then we need to increment index and run the whole thing again.

03:13:13
<transcript>: right

03:13:14
<transcript>: Right.

03:13:14
<transcript>: so

03:13:16
<transcript>: So.

03:13:16
<transcript>: for each line

03:13:18
<transcript>: For each line of lines.

03:13:22
<transcript>: I guess we could just say like.

03:13:25
<transcript>: Stack.

03:13:36
<transcript>: I say, It's just going to be nine stacks. Can I just hard code that part? Or do I need to be dynamic with that screen frozen again.

03:13:42
<transcript>: Fix it. I got a hurry. I really don't have time, but I'm making time.

03:13:45
<transcript>: All right. Can you see my screen moving.

03:13:50
impostorengineer: yes

03:13:55
<transcript>: All characters are four spaces apart so you can start at one and do plus four to the end of line.

03:13:55
<transcript>: end of

03:13:57
<transcript>: End of line, end of line.

03:13:57
<transcript>: yeah

03:13:59
<transcript>: Yeah, Yeah.

03:14:01
<transcript>: So.

03:14:07
<transcript>: I just need to know which stack the push into.

03:14:09
<transcript>: It's like.

03:14:09
<transcript>: it's like

03:14:13
<transcript>: It's like this. So I don't there's not a current stack. It's just.

03:14:22
<transcript>: I don't think there's an index either. I think it's like we get to a new line. There's values in this line. We say.

03:14:29
<transcript>: For.

03:14:32
<transcript>: Wild.

03:14:35
<transcript>: Index.

03:14:39
<transcript>: Is less than.

03:14:42
<transcript>: Lined out, links.

03:14:47
<transcript>: So index is just going to be defined here or less.

03:14:50
<transcript>: Index equals zero.

03:14:50
<transcript>: actually started

03:14:52
<transcript>: Actually started at one right.

03:15:00
<transcript>: Index plus equal four. Something like this. Right. So we're setting start at index one.

03:15:03
<transcript>: File index is less than the line length.

03:15:07
<transcript>: We're going to do.

03:15:11
<transcript>: So we're gonna get the stack equals stacks.

03:15:17
<transcript>: Index no.

03:15:17
<transcript>: index

03:15:19
<transcript>: Index mod four.

03:15:20
shiftlessatol: actually creating the 4 sub into an array and stripping non-alpha out would be very quick

03:15:21
<transcript>: Is that right.

03:15:27
<transcript>: And if it doesn't exist, we need to create it.

03:15:29
<transcript>: If.

03:15:31
<transcript>: For now we'll just say.

03:15:33
shiftlessatol: @cowfacedude99 this is the cleanest

03:15:37
cowfacedude99: index/4

03:15:43
<transcript>: Next, divided by four. Is that right.

03:15:48
<transcript>: The next five before so if index is.

03:15:51
<transcript>: Five, no.

03:15:51
<transcript>: if we divide

03:15:54
<transcript>: If we divide by four, that wouldn't be right. Right.

03:16:04
<transcript>: Wouldn't it be mod for.

03:16:09
<transcript>: I think that's going to be Mod four.

03:16:09
<transcript>: stack

03:16:12
<transcript>: Stack. So sometimes stack won't exist.

03:16:12
<transcript>: we need

03:16:14
<transcript>: We need to add it.

03:16:14
<transcript>: the array

03:16:15
<transcript>: The array.

03:16:22
<transcript>: Right. But here we're going to say, stack.

03:16:22
<transcript>: push

03:16:25
<transcript>: Push line index.

03:16:25
cowfacedude99: mod would be 0-3

03:16:29
<transcript>: If not line.

03:16:29
<transcript>: so

03:16:33
<transcript>: So it's not line index if not.

03:16:33
<transcript>: line

03:16:35
<transcript>: Line, index.

03:16:38
<transcript>: To see you.

03:16:38
<transcript>: oh no

03:16:41
<transcript>: Oh, no, we got an increment.

03:16:46
<transcript>: We'll just do this.

03:16:46
<transcript>: we'll

03:16:48
<transcript>: We'll say if.

03:16:56
<transcript>: Line index. So if there is a thing there.

03:16:56
<transcript>: we get

03:16:59
<transcript>: We get the stack, we push it.

03:16:59
<transcript>: if

03:17:01
<transcript>: If.

03:17:04
<transcript>: Not.

03:17:04
<transcript>: sex

03:17:07
<transcript>: Sex Index Mod four.

03:17:09
shiftlessatol: why do you not just make 8 x 9 value arrays

03:17:10
<transcript>: Fax.

03:17:13
<transcript>: We're kind of just do.

03:17:15
<transcript>: This every time.

03:17:15
<transcript>: stacks

03:17:18
<transcript>: Stacks index mod. Four.

03:17:23
<transcript>: People stack. Can I do that.

03:17:28
shiftlessatol: then build 9 stacks taking [0] for 1 on all 8

03:17:29
<transcript>: I don't know how Javascripter is work. If I'm being honest, why do you not just make eight nine value arrays.

03:17:29
<transcript>: i want to

03:17:37
shiftlessatol: and  [1] for 2 on all 8

03:17:41
<transcript>: I want to just be dynamic here if they gave a puzzle that had, like, only four stacks. I want to handle that, too. Mod would be zero through three. Oh, yeah, right. Okay. So index.

03:17:44
<transcript>: Is going to be.

03:17:46
<transcript>: About this.

03:17:46
<transcript>: next

03:17:50
natenorberg: would it be stacks[(index /4) -1] ?

03:17:51
<transcript>: Next we're gonna start at one. Divided by four. Is gonna be one over four, though.

03:18:01
<transcript>: One over four is not the index I want.

03:18:08
cowfacedude99: that's 0

03:18:09
<transcript>: Oh, here we go. Stacks index by before minus one.

03:18:13
<transcript>: Well when index is one.

03:18:13
natenorberg: wait no

03:18:16
shiftlessatol: you want it to not be dependant on the value?

03:18:18
<transcript>: One divided by four minus one is one four minus one.

03:18:23
shiftlessatol: sorry on the data?

03:18:30
shiftlessatol: so you can scale it from the same function?

03:18:32
<transcript>: You want it to be not be dependent on the value. Yeah. Yeah. I don't want to assume how many stacks there are. Yeah. I'm the data. Like I'm just. I want to just like, parse this thing without assuming anything.

03:18:32
<transcript>: about the

03:18:33
<transcript>: About the shape of it.

03:18:39
<transcript>: It would be something like that, Nate. But not the.

03:18:44
<transcript>: So if one index is one.

03:18:49
<transcript>: Then it needs to be zero.

03:18:54
<transcript>: We'll just do this stack index equals.

03:18:54
<transcript>: index

03:18:55
shiftlessatol: you can still do the same

03:18:57
<transcript>: Index equals 10 else.

03:18:57
<transcript>: index

03:18:57
shiftlessatol: using the counter

03:18:59
<transcript>: Index index divide by four. Is that accurate.

03:18:59
<transcript>: so the

03:19:00
natenorberg: haha, yeah. i typed too quick

03:19:03
shiftlessatol: or substr

03:19:06
<transcript>: So the next one will be five. No, it's never gonna be indexed out by four. Right in X. Five by five.

03:19:11
<transcript>: The second one would be five because we add four to one.

03:19:11
<transcript>: five

03:19:14
<transcript>: Five divided by five is one. The next one would be.

03:19:14
<transcript>: nine

03:19:16
<transcript>: Nine. Divided by five. No.

03:19:19
<transcript>: Is there a way to calculate the index.

03:19:19
<transcript>: what am i doing

03:19:20
<transcript>: What am I doing.

03:19:24
huckcity: -4*index?

03:19:25
<transcript>: What am I doing wrong.

03:19:27
santhesis: (index - 1 ) / 4 ?

03:19:27
<transcript>: I think we're wearing down here.

03:19:34
<transcript>: Index minus one, divided by four.

03:19:37
<transcript>: Index minus one divided by four would be.

03:19:41
<transcript>: Zero. Okay. And then index minus one would be.

03:19:43
shiftlessatol: you want to take the 4 chars every 4 chars

03:19:46
<transcript>: Five minus one. Four divided by four. Yes. And then the next one would be.

03:19:53
<transcript>: What? Nine minus one. But yes, yes, that's it. Index. Okay. Yeah.

03:19:55
<transcript>: So.

03:19:55
<transcript>: actually like

03:19:58
<transcript>: Actually like doing this. So.

03:20:01
<transcript>: Index.

03:20:01
<transcript>: index

03:20:06
<transcript>: Index minus one, divided by four. I think I need some parents here.

03:20:09
<transcript>: Right. Okay.

03:20:09
<transcript>: so that's our

03:20:15
<transcript>: So that's our stack index. So then this is stack index.

03:20:20
<transcript>: And this is two. Okay. So then.

03:20:20
<transcript>: stacks

03:20:23
<transcript>: Stacks. Second X equals stack.

03:20:23
<transcript>: doing that

03:20:26
<transcript>: Doing that in case there's not one like right here.

03:20:28
natenorberg: @Santhesis thanks. i rushed mine and didn't check

03:20:32
<transcript>: We've pushed the line. Okay, then we index plus equal four. Cool.

03:20:32
<transcript>: so

03:20:34
<transcript>: So then let's just.

03:20:38
<transcript>: Console, back, log.

03:20:40
<transcript>: Sacks.

03:20:47
<transcript>: We got some empty strings. That's no good. We'll fix those, but otherwise.

03:20:47
<transcript>: let's

03:20:50
<transcript>: Let's see here. The first one.

03:20:52
<transcript>: Wait, wait, wait.

03:20:54
<transcript>: Oh, yeah? Wr.

03:20:56
<transcript>: wrtg

03:20:57
<transcript>: Wrtg.

03:20:57
<transcript>: oh the one

03:20:59
<transcript>: Oh, the one I got to not do the last.

03:20:59
<transcript>: the number one

03:21:04
<transcript>: The number one right, but also need to ignore the blanks.

03:21:07
<transcript>: If line index.

03:21:10
<transcript>: Trim.

03:21:10
<transcript>: will that get me

03:21:14
<transcript>: Will that get me without the Yeah.

03:21:18
<transcript>: Okay, so we're getting rid of the space ones.

03:21:18
<transcript>: so wr

03:21:28
<transcript>: So wrtg and then the one we're gonna get rid of the last the number. How do I want to do that? How do I elegantly get rid of the last number.

03:21:32
<transcript>: I guess we could just do here.

03:21:35
<transcript>: Acts.

03:21:40
natenorberg: !Number.parseInt

03:21:40
<transcript>: If.

03:21:40
<transcript>: it's a number

03:21:42
<transcript>: It's a number.

03:21:44
cowfacedude99: the number doesn't matter I think

03:21:45
<transcript>: We just don't do it. Maybe.

03:21:49
<transcript>: And Line index.

03:21:58
<transcript>: Is this.

03:22:01
<transcript>: Are an error on it.

03:22:09
<transcript>: What's the better way to do this? Just pop the last one. It doesn't matter. That's a number, right.

03:22:14
<transcript>: Samples? Welcome to my chat? Welcome, welcome.

03:22:23
<transcript>: And thank you for that solution. The minus one. That was brilliant. Divided by four. Yeah, it doesn't matter. This number. I should go through each of the stacks.

03:22:23
<transcript>: we'll just do this

03:22:24
<transcript>: We'll just do this.

03:22:28
<transcript>: So stack, we'll just say.

03:22:30
<transcript>: For.

03:22:30
<transcript>: comp

03:22:33
<transcript>: Compsack of sacks.

03:22:35
<transcript>: Stack, pop.

03:22:50
<transcript>: Yeah. Okay. So now we have our initial state Wrtg Wrtg. Now, the problem is I want to reverse these, right? Because when I start popping.

03:22:50
<transcript>: i want

03:22:51
molson82: !dotfiles

03:22:51
fossabot: Adam's dotfiles live here: https://github.com/adamelmore/dotfiles The repository for bitter is here: https://github.com/adamelmore/bitter

03:22:53
<transcript>: I want to pop from the other end.

03:22:53
<transcript>: so i'm going to reverse

03:22:54
<transcript>: So I'm going to reverse them all.

03:22:56
cowfacedude99: you need to reverse the stacks

03:23:00
<transcript>: I do that. And JavaScript no bomber. Is that a node JS thing.

03:23:01
shiftlessatol: you have a 6

03:23:03
<transcript>: Reverse.

03:23:08
<transcript>: Oh, there's.

03:23:12
<transcript>: I can't chain it, I guess.

03:23:14
<transcript>: Okay.

03:23:31
<transcript>: H in WLC H. Nwlc. So when I pop one, it's gonna take the C off. Yeah, yeah, we're good now. This is good. We got our initial state. I think we're through the hard part right now. We're just gonna do move something from something to something.

03:23:35
<transcript>: So now we're gonna go through the rest of the lines.

03:23:35
<transcript>: let's see

03:23:37
<transcript>: Let's see.

03:23:41
<transcript>: If line if not line, we break.

03:23:45
<transcript>: But let's keep track of the.

03:23:45
<transcript>: index

03:23:46
<transcript>: Index.

03:23:50
<transcript>: Let index.

03:23:50
<transcript>: and then

03:23:52
<transcript>: And then we'll say index.

03:24:01
<transcript>: This is dumb don't try to sit home people.

03:24:05
<transcript>: Index plus.

03:24:07
<transcript>: So now we know.

03:24:07
<transcript>: what

03:24:11
<transcript>: What? That's not. Oh, I already have an index.

03:24:13
<transcript>: Line, index.

03:24:22
<transcript>: So we're gonna have a line index now that we can, we can pick up where we left off, right.

03:24:28
<transcript>: So for cons line of lines.

03:24:31
<transcript>: The lines, slice.

03:24:33
<transcript>: Line, index.

03:24:36
<transcript>: Line.

03:24:36
<transcript>: okay

03:24:37
<transcript>: Okay.

03:24:41
<transcript>: Console log, line.

03:24:44
<transcript>: Yeah, cool.

03:24:44
<transcript>: hope i

03:24:46
<transcript>: Hope I got them all.

03:24:53
<transcript>: Instruct instructions equals lines.

03:24:56
<transcript>: Line, index.

03:24:58
<transcript>: Okay.

03:25:10
<transcript>: Unfold log instruct instructions. I just want to see that I got.

03:25:10
<transcript>: all right

03:25:12
<transcript>: All right.

03:25:15
<transcript>: Oh, Where is it.

03:25:20
<transcript>: So the first one is the blank.

03:25:21
<transcript>: So.

03:25:24
<transcript>: Plus one.

03:25:28
<transcript>: Here we go. Move three.

03:25:28
<transcript>: from four

03:25:31
<transcript>: From four to three. Cool. Okay. So now we can go.

03:25:35
<transcript>: Four.

03:25:35
<transcript>: const

03:25:39
<transcript>: Const. Instruction of instructions.

03:25:50
<transcript>: At least we've got dirty work now we got the song feels good.

03:25:50
<transcript>: feels

03:25:52
<transcript>: Feels good.

03:25:57
<transcript>: Guys will talk me when I freeze again. Right.

03:25:57
<transcript>: i need

03:26:02
<transcript>: I need to reverse the stacks. Oh, I think I read these too late. You have a six? I have a six.

03:26:02
<transcript>: with a six

03:26:04
<transcript>: With a six.

03:26:08
<transcript>: Comps. Okay. So here's what we're gonna do.

03:26:11
<transcript>: How do I want to extract these numbers.

03:26:11
<transcript>: don't

03:26:13
<transcript>: Don't use a regex.

03:26:17
<transcript>: And just grab all three numbers. Do I want to.

03:26:22
<transcript>: Remove the words and then split on space.

03:26:22
<transcript>: we can

03:26:23
<transcript>: We can do that.

03:26:23
<transcript>: let's just do

03:26:25
<transcript>: Let's just do that.

03:26:31
<transcript>: Replace.

03:26:34
<transcript>: Move.

03:26:39
<transcript>: And replace.

03:26:42
<transcript>: From.

03:26:48
<transcript>: And replay.

03:26:51
<transcript>: To.

03:26:54
natenorberg: you could just have instruction.split(" ")

03:26:57
<transcript>: Okay. Well, let's try here. 60. Oh, yeah, Yeah.

03:27:01
<transcript>: So there's.

03:27:01
<transcript>: our

03:27:06
<transcript>: Our That's our string. Now we're gonna say Dot split on space.

03:27:06
<transcript>: and then

03:27:08
<transcript>: And then stripped.

03:27:10
shiftlessatol: you want " from "

03:27:11
<transcript>: Can now just be.

03:27:14
<transcript>: What's the first number? Move.

03:27:14
<transcript>: camp

03:27:16
<transcript>: Camp.

03:27:16
<transcript>: from

03:27:22
<transcript>: From two I guess I'll just name it move the correspond with Yeah.

03:27:22
<transcript>: cons

03:27:24
<transcript>: Console that log.

03:27:26
<transcript>: Move.

03:27:28
shiftlessatol: oh, you wanna split on that

03:27:31
shiftlessatol: kk

03:27:34
<transcript>: Console.

03:27:37
<transcript>: From.

03:27:37
<transcript>: last

03:27:39
<transcript>: Last one is seven.

03:27:39
<transcript>: we have an

03:27:41
<transcript>: We have an undefined.

03:27:41
<transcript>: snow good

03:27:43
<transcript>: Snow, good.

03:27:47
<transcript>: From and two should be five. What are the undefined.

03:27:54
<transcript>: If not instruction or continue.

03:27:56
<transcript>: Here we go.

03:28:03
<transcript>: We're moving. We're getting there. So we have from move from and two.

03:28:06
<transcript>: So we're gonna do a loop.

03:28:14
<transcript>: That is, move links to move three from four to three. Now, when I push these.

03:28:14
<transcript>: when

03:28:22
<transcript>: When I pop on, I know what's gonna happen. So I'm gonna move three from four, so I'm gonna pop three of them off of four.

03:28:24
<transcript>: Right.

03:28:29
<transcript>: I could just have instruction that split.

03:28:32
<transcript>: Where did I miss? What did I miss.

03:28:35
<transcript>: Instruction split on space.

03:28:43
<transcript>: Oh, you're saying just ignore the indices for move from and two. Yeah, I guess I could that'd be a little prettier, wouldn't it.

03:28:47
<transcript>: Just have like.

03:28:50
<transcript>: Nothing new.

03:29:00
<transcript>: Right.

03:29:08
<transcript>: Better, it's better.

03:29:14
<transcript>: I will concede it's better. Okay. So we have moved from and two, Let's.

03:29:27
<transcript>: I'm gonna pop three off of 4123. Well, I'm gonna pop one. I'm gonna move it to three. When I push on to three.

03:29:30
<transcript>: Is it gonna put it on top.

03:29:32
<transcript>: No.

03:29:36
<transcript>: Or is it? Yeah, it'll put in the right spot. Is that right.

03:29:38
<transcript>: Let's test it.

03:29:38
<transcript>: so

03:29:41
<transcript>: So we're gonna say four.

03:29:46
<transcript>: Index zero index is less than.

03:29:46
shiftlessatol: if you reverse

03:29:51
<transcript>: Less than move.

03:29:55
<transcript>: Okay, wait. What's wrong with index? Let's move.

03:29:58
<transcript>: Oh, these are straight, yeah, Yeah.

03:30:03
shiftlessatol: but you can append instead of push

03:30:05
<transcript>: I did this map.

03:30:09
shiftlessatol: and not reverse

03:30:11
<transcript>: Number tripars.

03:30:16
<transcript>: I'm gonna break.

03:30:23
<transcript>: It's not gonna break it'll. Just ignore the ones that I don't need, right? The strings will fail, but it doesn't matter, okay.

03:30:31
<transcript>: So for let index zero index is less than move. So the number three you're gonna go zero. One, two.

03:30:31
<transcript>: okay

03:30:35
<transcript>: Okay. Three times. That's perfect. Zero. One, two.

03:30:35
<transcript>: we're going

03:30:37
<transcript>: We're going to.

03:30:37
<transcript>: we're going to

03:30:39
<transcript>: We're going to pop.

03:30:43
<transcript>: From so we're gonna say cons front.

03:30:46
<transcript>: Equals six.

03:30:48
<transcript>: From.

03:30:50
<transcript>: Wait.

03:30:50
<transcript>: from plus

03:30:52
<transcript>: From plus one.

03:30:54
<transcript>: So stacks.

03:30:57
<transcript>: From.

03:31:01
<transcript>: Plus one.

03:31:08
<transcript>: Fox letter.

03:31:08
<transcript>: equals

03:31:11
<transcript>: Equals from stack, pop.

03:31:14
<transcript>: And then.

03:31:21
<transcript>: We're going to push it onto the two stacks. So stacks.

03:31:21
<transcript>: two

03:31:22
<transcript>: Two plus one.

03:31:24
<transcript>: Push.

03:31:24
<transcript>: letter

03:31:27
<transcript>: Letter. Okay, just like that.

03:31:27
<transcript>: i'm just

03:31:28
<transcript>: I'm just gonna do this.

03:31:37
<transcript>: I don't need it from sex thing.

03:31:37
<transcript>: are going

03:31:41
<transcript>: Are going to have stream or undefined if it's undefined, what does that mean.

03:31:41
<transcript>: if

03:31:44
<transcript>: If not letter.

03:31:46
<transcript>: Throw new.

03:31:51
shiftlessatol: you'll want to pop and append or you'll have to keep flipping your arrays

03:31:54
<transcript>: Can I reproduct.

03:32:00
<transcript>: I mess it up.

03:32:06
<transcript>: Mess them up. Can I repurpose it? Undefined. Reading pop constellator stacks from plus one.

03:32:08
<transcript>: Both the from.

03:32:08
<transcript>: is

03:32:10
<transcript>: Is eight, for instance.

03:32:14
<transcript>: We want the index.

03:32:14
ronanru: from -1

03:32:18
<transcript>: Minus one if from is one.

03:32:18
<transcript>: then the index should

03:32:21
<transcript>: Then the index should be zero. It should be minus one.

03:32:25
<transcript>: So this should be as well. Right.

03:32:31
<transcript>: Okay. I think we've done it. We just haven't printed out.

03:32:33
<transcript>: Console.

03:32:33
<transcript>: log

03:32:35
<transcript>: Log.

03:32:35
<transcript>: stacks

03:32:36
<transcript>: Stacks.

03:32:41
<transcript>: This right though I don't know if it's right.

03:32:47
<transcript>: Is it gonna be a word.

03:32:47
<transcript>: no probably not

03:32:49
<transcript>: No, probably not. Right.

03:32:54
<transcript>: So let's do one step. Let's just do one step and make sure.

03:32:57
<transcript>: So line this plus one.

03:33:00
<transcript>: Slice.

03:33:04
<transcript>: One step.

03:33:04
<transcript>: no no

03:33:08
<transcript>: No, no, that wouldn't do it. That would be zero. Just go. One.

03:33:11
<transcript>: Okay.

03:33:11
<transcript>: you should have just

03:33:13
<transcript>: You should have just done one instruction.

03:33:13
<transcript>: plus

03:33:16
<transcript>: Plus the instruction was empty.

03:33:18
<transcript>: No? Yeah.

03:33:25
<transcript>: Slice line in X plus one. Yeah. No, that should be right. So we did one step. Let's look at it.

03:33:38
<transcript>: Move three from four to three. So F would go here. I need to visit. Better wait. Two, three. Right from four to three. So F.

03:33:38
<transcript>: should go

03:33:42
<transcript>: Should go. Mf. No, sorry. No, not right.

03:33:52
<transcript>: What did I do wrong here? From minus one. You want to pop in a pinned, or you'll have to keep flipping your arrays. Oh, did it put it on the other end? Is that what happened.

03:33:52
<transcript>: no it

03:33:54
<transcript>: No, it didn't even.

03:34:02
<transcript>: Free from four to three.

03:34:12
<transcript>: For the index of 40123. So four minus one. Yeah.

03:34:14
<transcript>: Zero.

03:34:19
<transcript>: One, two, so one, two, three, and four.

03:34:24
<transcript>: Bh four ends with Did I do more instructions than I realized.

03:34:36
shiftlessatol: you have an empty stack?

03:34:40
<transcript>: Okay. Now it looks different. I think it was because it's like the file is watching it the Stackdriver being manipulated multiple times. I think that's what was happening.

03:34:40
<transcript>: okay

03:34:42
<transcript>: Okay.

03:34:42
<transcript>: that's

03:34:45
<transcript>: That's good. That's good. So three.

03:34:45
<transcript>: has

03:34:47
<transcript>: Has FRD.

03:34:50
<transcript>: No, yes. So it's backwards.

03:35:02
<transcript>: No, no, yeah. This is right. So M should ended M Yap. And then this one, we should have put the F after the M. Yeah. M. F.

03:35:02
<transcript>: r w

03:35:06
<transcript>: R W Yep, it's right, it's right, we're good, it's good.

03:35:06
<transcript>: we got to restart

03:35:08
<transcript>: We got to restart the process.

03:35:12
<transcript>: And only run it one time. You know, I'm saying.

03:35:14
<transcript>: Let's go here.

03:35:23
<transcript>: Make it not sensitive to that. I don't know how I would.

03:35:28
<transcript>: Instructions, lines, slice.

03:35:28
<transcript>: we want

03:35:30
<transcript>: We want to get rid of this.

03:35:36
<transcript>: Now we can run it.

03:35:36
<transcript>: i'm gonna have

03:35:41
<transcript>: I'm gonna have to somehow, I guess I should make it easier on myself and get the last letter out of each stack, right.

03:35:42
<transcript>: Act.

03:35:42
<transcript>: map

03:35:43
<transcript>: Map.

03:35:43
<transcript>: stack

03:35:45
<transcript>: Stack.

03:35:45
<transcript>: s

03:35:46
<transcript>: S.

03:35:52
<transcript>: Minus one. Can I do that? Hit the last element.

03:35:55
<transcript>: In the end is that how it works.

03:35:58
<transcript>: No, not how it works.

03:36:01
ronanru: s.at(-1)

03:36:03
<transcript>: What is the stack? A stack is an array of letters, right.

03:36:11
<transcript>: From my s at minus one. Okay.

03:36:11
<transcript>: app

03:36:13
<transcript>: App.

03:36:13
<transcript>: at

03:36:14
<transcript>: At.

03:36:20
<transcript>: This. There we go.

03:36:20
<transcript>: let's

03:36:22
<transcript>: Let's run it one more time.

03:36:35
<transcript>: Jcmhlvgmg. Let's hit stripe. I think that's probably right. I don't know what else. We could have messed up JC. Mhlv, GMG.

03:36:38
<transcript>: Good times.

03:36:38
<transcript>: great old

03:36:45
<transcript>: Great oldies. One gold star. I guess we do have a part two. Do I want to finish part two? I should have been off, like 40 minutes ago.

03:36:45
<transcript>: but

03:36:50
<transcript>: But I kind of want to finish part two. I don't want to be in the middle of one. You know what I'm saying.

03:36:50
<transcript>: i'm probably gonna

03:36:55
<transcript>: I'm probably gonna stream tomorrow too I'm probably gonna stream to catch up whatever we miss today.

03:36:55
<transcript>: i guess just

03:36:57
<transcript>: I guess. Just day Six. Right.

03:37:10
<transcript>: As you watch the crane operator expertly rearrange the crates, you notice the process isn't following your prediction. Some mud was covering the riding on the side of the crane and you quickly wipe it away. The crane isn't a crate move or 9000 is to create mover Nine one.

03:37:19
<transcript>: Pick up and move multiple crates at once again. Considering the example above, the crates begin in the same configuration.

03:37:24
<transcript>: Okay. Moving a single crochet from stack two to one. Behaves the same as before.

03:37:24
<transcript>: however

03:37:25
<transcript>: However.

03:37:30
<transcript>: The action of moving three crates from stack one to SEC three.

03:37:33
<transcript>: They stay in the same order. Okay.

03:37:33
<transcript>: so i just need to

03:37:39
<transcript>: So I just need to reverse after I pop them. I need to reverse them and then put them on there, right.

03:37:39
<transcript>: they retain

03:37:43
<transcript>: They retain their order as well. So if we take.

03:37:47
<transcript>: Moving three crates from Stack one.

03:37:47
<transcript>: to

03:37:48
teej_dv: https://github.com/tjdevries/advent_of_code/blob/master/2022/bin/day6.ml#L22-L60 Kreygasm

03:37:51
<transcript>: To SEC. Three means that the three creates moves.

03:37:51
<transcript>: but

03:37:57
<transcript>: But oh, here, yeah? Dnz get plopped on right? That yeah, yeah okay.

03:37:57
<transcript>: single cra

03:37:57
teej_dv: oh woops, sent day6

03:38:00
<transcript>: Single crate is still moved from stack one to two, but now it's create C that gets moved.

03:38:06
<transcript>: What finally, a single crate is soon moved from SEC one to two.

03:38:06
<transcript>: this

03:38:08
<transcript>: This time.

03:38:08
<transcript>: it's

03:38:11
<transcript>: It's create C that gets moved. That's how it would have been for right.

03:38:14
<transcript>: Okay.

03:38:14
<transcript>: for

03:38:23
teej_dv: oh it's just so pretty in ocaml. i might be in love https://github.com/tjdevries/advent_of_code/blob/master/2022/bin/day5.ml

03:38:25
<transcript>: For the reinvest finishes, update your simulation so that the L's know where they should stay in to be ready to unload the final supplies after arrangement. Pursuit. Release what crate ends up on top of each check. Okay, so we see a change.

03:38:30
<transcript>: We just need to change this a little bit so.

03:38:34
<transcript>: For each instruction. Now we're going to pop them all.

03:38:38
<transcript>: Pop them all. We're gonna put them in like a temporary.

03:38:43
<transcript>: So Const temp a temporary array. Okay.

03:38:47
<transcript>: Like this? We're gonna say.

03:38:53
<transcript>: Like that we're gonna say.

03:38:59
<transcript>: Hemp, push the letter. Okay, so we push those on, and then we're gonna do.

03:38:59
<transcript>: like this

03:39:01
<transcript>: Like this? We're gonna say.

03:39:01
<transcript>: stack

03:39:03
<transcript>: Stacks.

03:39:10
<transcript>: Two minus one.

03:39:15
<transcript>: Push. And I can push an array here. Right. I can spread it. Probably.

03:39:15
<transcript>: attempt

03:39:17
<transcript>: Attempt reverse.

03:39:19
<transcript>: Right.

03:39:21
<transcript>: Think so.

03:39:26
<transcript>: Lz I feel like I should restart the thing just in case.

03:39:30
<transcript>: Lzmr I think this is right, right.

03:39:30
<transcript>: lv

03:39:39
<transcript>: Lvmrws STZ. Let's see if we can save some time. That's correct. All right.

03:39:39
<transcript>: alright

03:39:41
<transcript>: Alright.

03:39:52
<transcript>: Day six. Don't choose fly. Day seven. Skin.

03:39:53
ronanru: Wow

03:39:57
santhesis: nice

03:39:59
<transcript>: It's so pretty in no Camel, I might be in love? And this is your first experience. Tease with ocamel, like, just immediately.

03:39:59
<transcript>: sell for it

03:40:01
<transcript>: Sell for it.

03:40:01
<transcript>: you're in love

03:40:06
<transcript>: You're in love. What do people use Ocamel for? I have no awareness of Ocamel whatsoever.

03:40:10
teej_dv: haha i don't know if i'll actually use it for anything else again

03:40:12
<transcript>: Is it like what's the other camel.

03:40:12
teej_dv: but it's been fun

03:40:20
teej_dv: i think fb messenger is written in ocaml

03:40:24
<transcript>: Don't know if I'll actually use it for anything else again, but it's been fun. What is it? It's like a scripting language. It's like a what people use it to write, like web servers.

03:40:24
<transcript>: facebook

03:40:28
<transcript>: Facebook Messengers written an Ocamel. Interesting. Okay.

03:40:29
<transcript>: Okay.

03:40:33
teej_dv: they write it for things that have to be correct

03:40:36
<transcript>: This does look really cool. I'm looking at your day. Five.

03:40:39
<transcript>: It looks way better than what I just did.

03:40:46
teej_dv: https://ocaml.org/about

03:40:46
<transcript>: Move part two. Oh, you kept like your code from move part one so that you didn't like, ruin it.

03:40:46
<transcript>: hey we did

03:40:47
sockthedev: but i do prefer the reasonml syntax over standard ocaml

03:40:52
<transcript>: Hey, we did the same, the same thing. Basically create, like, an array that you're popping into.

03:40:54
<transcript>: And then go through and reverse the.

03:40:59
<transcript>: I'm trying to parse what you did here. And I think that's kind of what we do, same thing.

03:41:02
<transcript>: I think.

03:41:07
<transcript>: I don't know. Actually, I don't know. I'm not gonna try and understand this, okay.

03:41:12
<transcript>: I do prefer reason Ml since I've standard O camel.

03:41:15
<transcript>: They write it for things that have to be correct.

03:41:15
<transcript>: ouch

03:41:17
<transcript>: Ouch.

03:41:24
<transcript>: Ouch fired Peach. It has been so fun again once again.

03:41:24
<transcript>: i love

03:41:27
teej_dv: what? most things don't have to be correct

03:41:31
<transcript>: I love streaming so much. It's been two weeks to the day I went two weeks of that streaming that felt bad.

03:41:32
teej_dv: they just have to not make customers leave

03:41:36
sockthedev: don't do that again

03:41:37
<transcript>: Most things don't have to be correct. That's true. Like this doesn't have to be correct. Evan of code, I guess.

03:41:40
<transcript>: They just have to not make customers leave.

03:41:40
<transcript>: fair

03:41:41
<transcript>: Fair.

03:41:50
sockthedev: 2 week break

03:41:56
<transcript>: No. Do what again? Suck. Oh, the clap. Did I clap? Or the two weeks don't take two weeks off. I'm gonna believe that. That's what you meant. And I won't take two weeks off again. So I have no plans to go back to any tech conferences. Yeah, no, I won't do any more, too. Eat, breaks.

03:42:07
<transcript>: But I will be leaving for now. I've been streaming 3 hours and 40 minutes. I'm about 50 minutes after what I should have been. I got lights behind me going out.

03:42:11
<transcript>: To the battery side. That's how long we've been streaming.

03:42:13
sockthedev: https://www.youtube.com/watch?v=qEKUNZWbj-8

03:42:15
<transcript>: It's good to see some familiar faces good to meet some new people.

03:42:18
sockthedev: 10 mins ya'll

03:42:28
sockthedev: isserverlessready

03:42:28
<transcript>: You just drop the YouTube link, right? As I'm about to leave. I'm gonna watch it, but I'm not gonna watch it on stream. Ten minutes. Y'all I'm gonna watch it. Just not not on stream. It's been good again. Maybe we could do it again. Sometime. Sometimes.